{"version":3,"file":"js/app.b079920a.js","mappings":"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","sources":["webpack://frontend/./src/App.vue","webpack://frontend/./src/components/MenuComponent.vue","webpack://frontend/./src/components/MenuComponent.vue?7a66","webpack://frontend/./src/services/permissions.js","webpack://frontend/./src/services/apiService.js","webpack://frontend/./src/store/modules/tourney.js","webpack://frontend/./src/store/modules/userTourney.js","webpack://frontend/./src/services/socketService.js","webpack://frontend/./src/store/index.js","webpack://frontend/./src/services/authService.js","webpack://frontend/./src/App.vue?7ccd","webpack://frontend/./src/views/auth/LoginPage.vue","webpack://frontend/./src/components/AuthComponentForm.vue","webpack://frontend/./src/components/ButtonComponent.vue","webpack://frontend/./src/components/ButtonComponent.vue?7e35","webpack://frontend/./src/components/AuthComponentForm.vue?e94d","webpack://frontend/./src/views/auth/LoginPage.vue?2f2c","webpack://frontend/./src/views/auth/RegisterPage.vue","webpack://frontend/./src/views/auth/RegisterPage.vue?20ea","webpack://frontend/./src/views/shared/AccessDenied.vue","webpack://frontend/./src/views/shared/AccessDenied.vue?9e85","webpack://frontend/./src/views/shared/NotFound.vue","webpack://frontend/./src/views/shared/NotFound.vue?ea8d","webpack://frontend/./src/views/auth/ForgotPassword.vue","webpack://frontend/./src/views/auth/ForgotPassword.vue?c052","webpack://frontend/./src/views/auth/ResetPassword.vue","webpack://frontend/./src/views/auth/ResetPassword.vue?308e","webpack://frontend/./src/router/authRoutes.js","webpack://frontend/./src/views/admin/dashboard/AdminDashboard.vue","webpack://frontend/./src/views/admin/dashboard/AdminDashboard.vue?7316","webpack://frontend/./src/views/admin/tourneys/TourneysList.vue","webpack://frontend/./src/components/ModalComponent.vue","webpack://frontend/./src/components/ModalComponent.vue?2dbd","webpack://frontend/./src/components/DeleteConfirmationModal.vue","webpack://frontend/./src/components/FormComponent.vue","webpack://frontend/./src/components/AutocompleteAddress.vue","webpack://frontend/./src/components/AutocompleteAddress.vue?a206","webpack://frontend/./src/components/FormComponent.vue?ecb1","webpack://frontend/./src/components/DeleteConfirmationModal.vue?b172","webpack://frontend/./src/components/CardAddComponent.vue","webpack://frontend/./src/components/CardAddComponent.vue?3c6c","webpack://frontend/./src/components/CardEditComponent.vue","webpack://frontend/./src/components/CardEditComponent.vue?70bc","webpack://frontend/./src/components/FilterComponent.vue","webpack://frontend/./src/components/FilterComponent.vue?eb16","webpack://frontend/./src/components/TitleComponent.vue","webpack://frontend/./src/components/TitleComponent.vue?6b57","webpack://frontend/./src/views/admin/tourneys/TourneysList.vue?2885","webpack://frontend/./src/views/admin/tourneys/TourneyDetails.vue","webpack://frontend/./src/components/TourneySubMenu.vue","webpack://frontend/./src/components/TourneySubMenu.vue?2e12","webpack://frontend/./src/components/StatusSelectorComponent.vue","webpack://frontend/./src/components/StatusSelectorComponent.vue?e09c","webpack://frontend/./src/components/icons/CompletedIcon.vue","webpack://frontend/./src/components/icons/CompletedIcon.vue?77a7","webpack://frontend/./src/components/icons/PendingIcon.vue","webpack://frontend/./src/components/icons/PendingIcon.vue?7cc7","webpack://frontend/./src/components/icons/ActiveIcon.vue","webpack://frontend/./src/components/icons/ActiveIcon.vue?f9a4","webpack://frontend/./src/components/icons/DraftIcon.vue","webpack://frontend/./src/components/icons/DraftIcon.vue?ab06","webpack://frontend/./src/views/admin/tourneys/TourneyDetails.vue?4cf8","webpack://frontend/./src/views/admin/sports/SportsManagement.vue","webpack://frontend/./src/views/admin/sports/SportsManagement.vue?a34e","webpack://frontend/./src/views/admin/users/AdminUserList.vue","webpack://frontend/./src/components/ListUsersTable.vue","webpack://frontend/./src/components/SoftButtonComponent.vue","webpack://frontend/./src/components/SoftButtonComponent.vue?d441","webpack://frontend/./src/components/ListUsersTable.vue?5a1f","webpack://frontend/./src/views/admin/users/AdminUserList.vue?0d0c","webpack://frontend/./src/views/admin/users/AdminUserProfile.vue","webpack://frontend/./src/components/ProfilePageComponent.vue","webpack://frontend/./src/components/ProfilePageComponent.vue?9032","webpack://frontend/./src/views/admin/users/AdminUserProfile.vue?4f12","webpack://frontend/./src/views/admin/tourneys/TourneyFieldsManagement.vue","webpack://frontend/./src/views/admin/tourneys/TourneyFieldsManagement.vue?70f5","webpack://frontend/./src/views/admin/tourneys/TourneySportsFields.vue","webpack://frontend/./src/components/ErrorMessageComponent.vue","webpack://frontend/./src/components/ErrorMessageComponent.vue?6a39","webpack://frontend/./src/views/admin/tourneys/TourneySportsFields.vue?aac7","webpack://frontend/./src/views/admin/tourneys/teams/TourneyTeams.vue","webpack://frontend/./src/components/ConfirmationModal.vue","webpack://frontend/./src/components/ConfirmationModal.vue?017d","webpack://frontend/./src/views/admin/tourneys/teams/TourneyTeams.vue?d3d0","webpack://frontend/./src/views/admin/tourneys/teams/TourneyUnassignedUsers.vue","webpack://frontend/./src/views/admin/tourneys/teams/TourneyUnassignedUsers.vue?84c8","webpack://frontend/./src/views/admin/tourneys/teams/TourneyTeamUsers.vue","webpack://frontend/./src/views/admin/tourneys/teams/TourneyTeamUsers.vue?c880","webpack://frontend/./src/views/admin/tourneys/pools/TourneyPools.vue","webpack://frontend/./src/components/StrategyPattern/Pool/StrategyPoolGeneratorComponent.vue","webpack://frontend/./src/components/StrategyPattern/Pool/strategies/CustomRoundRobinStrategy.vue","webpack://frontend/./src/components/StrategyPattern/Pool/strategies/CustomRoundRobinStrategy.vue?71fc","webpack://frontend/./src/components/StrategyPattern/Pool/StrategyPoolGeneratorComponent.vue?5a75","webpack://frontend/./src/views/admin/tourneys/pools/TourneyPools.vue?1740","webpack://frontend/./src/views/admin/tourneys/pools/TourneyPoolDetails.vue","webpack://frontend/./src/views/admin/tourneys/pools/TourneyPoolDetails.vue?a5c6","webpack://frontend/./src/views/admin/tourneys/pools/TourneyUnassignedTeams.vue","webpack://frontend/./src/views/admin/tourneys/pools/TourneyUnassignedTeams.vue?35aa","webpack://frontend/./src/views/admin/tourneys/planning/TourneyPlanningPools.vue","webpack://frontend/./src/components/StrategyPattern/Planning/StrategyPlanningGeneratorComponent.vue","webpack://frontend/./src/components/StrategyPattern/Planning/strategies/CustomRoundRobinPoolPlanningStrategy.vue","webpack://frontend/./src/components/StrategyPattern/Planning/strategies/CustomRoundRobinPoolPlanningStrategy.vue?9528","webpack://frontend/./src/components/StrategyPattern/Planning/strategies/CustomRoundRobinGamePlanningStrategy.vue","webpack://frontend/./src/components/StrategyPattern/Planning/strategies/CustomRoundRobinGamePlanningStrategy.vue?93ec","webpack://frontend/./src/components/StrategyPattern/Planning/StrategyPlanningGeneratorComponent.vue?dd63","webpack://frontend/./src/components/PlanningViewSelector.vue","webpack://frontend/./src/components/PlanningViewSelector.vue?d1e0","webpack://frontend/./src/views/admin/tourneys/planning/TourneyPlanningPools.vue?15ab","webpack://frontend/./src/views/admin/tourneys/planning/TourneyPlanningGames.vue","webpack://frontend/./src/views/admin/tourneys/planning/TourneyPlanningGames.vue?64e1","webpack://frontend/./src/router/adminRoutes.js","webpack://frontend/./src/views/user/UserDashboard.vue","webpack://frontend/./src/views/user/UserDashboard.vue?f834","webpack://frontend/./src/views/user/UserProfile.vue","webpack://frontend/./src/views/user/UserProfile.vue?d130","webpack://frontend/./src/views/user/UserTourneys.vue","webpack://frontend/./src/views/user/UserTourneys.vue?d14b","webpack://frontend/./src/views/user/tourneys/TourneyJoinTeam.vue","webpack://frontend/./src/views/user/tourneys/TourneyJoinTeam.vue?b21a","webpack://frontend/./src/views/user/tourneys/TourneyTeamDetails.vue","webpack://frontend/./src/views/user/tourneys/TourneyTeamDetails.vue?09eb","webpack://frontend/./src/views/user/tourneys/TourneyPlanning.vue","webpack://frontend/./src/components/user/SubMenuComponent.vue","webpack://frontend/./src/components/user/SubMenuComponent.vue?3c69","webpack://frontend/./src/components/user/CollapsibleBox.vue","webpack://frontend/./src/components/user/CollapsibleBox.vue?209c","webpack://frontend/./src/utils/format.js","webpack://frontend/./src/views/user/tourneys/TourneyPlanning.vue?ecb3","webpack://frontend/./src/views/user/tourneys/TourneyGameDetails.vue","webpack://frontend/./src/views/user/tourneys/TourneyGameDetails.vue?402c","webpack://frontend/./src/views/user/tourneys/TourneyScores.vue","webpack://frontend/./src/views/user/tourneys/TourneyScores.vue?6c30","webpack://frontend/./src/views/user/tourneys/TourneyDetails.vue","webpack://frontend/./src/views/user/tourneys/TourneyDetails.vue?5dfe","webpack://frontend/./src/router/guards/tourneyGuard.js","webpack://frontend/./src/router/userRoutes.js","webpack://frontend/./src/router/index.js","webpack://frontend/./src/components/icons/fontAwesomeIcons.js","webpack://frontend/./src/main.js","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/runtime/chunk loaded","webpack://frontend/webpack/runtime/create fake namespace object","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/ensure chunk","webpack://frontend/webpack/runtime/get javascript chunk filename","webpack://frontend/webpack/runtime/get mini-css chunk filename","webpack://frontend/webpack/runtime/global","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/load script","webpack://frontend/webpack/runtime/make namespace object","webpack://frontend/webpack/runtime/publicPath","webpack://frontend/webpack/runtime/jsonp chunk loading","webpack://frontend/webpack/startup"],"sourcesContent":["<!-- src/App.vue -->\n<template>\n  <div\n    id=\"app\"\n    class=\"min-h-screen bg-light-background dark:bg-dark-background text-light-title dark:text-dark-title font-sans antialiased\"\n  >\n    <div v-if=\"!isOnline\" class=\"offline-indicator\">\n      Vous êtes hors ligne. Certaines fonctionnalités peuvent être limitées.\n    </div>\n    <Menu />\n    <div :class=\"{ 'overflow-hidden max-h-screen': isModalOpen }\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\n  import Menu from './components/MenuComponent';\n  import { mapActions } from 'vuex';\n  import { isTokenExpired } from '@/services/authService';\n\n  export default {\n    name: 'App',\n    components: {\n      Menu,\n    },\n    data() {\n      return {\n        isModalOpen: false,\n        isOnline: navigator.onLine,\n      };\n    },\n    methods: {\n      ...mapActions(['logout']),\n\n      startTokenExpirationWatcher() {\n        if (this.tokenWatcher) {\n          clearInterval(this.tokenWatcher);\n        }\n\n        this.checkTokenExpiration(); // Première vérification\n\n        // Configurer un intervalle dynamique en fonction du temps restant sur le token\n        this.tokenWatcher = setInterval(() => {\n          this.checkTokenExpiration();\n        }, this.getCheckInterval());\n      },\n\n      // Check if the user is online\n      updateOnlineStatus() {\n        this.isOnline = navigator.onLine;\n      },\n\n      checkTokenExpiration() {\n        if (isTokenExpired()) {\n          // Token expiré, on déconnecte l'utilisateur\n          this.logout(); // Effectuer la déconnexion via Vuex\n\n          // Rediriger vers la page de login uniquement si l'utilisateur n'y est pas déjà\n          if (this.$route.path !== '/login') {\n            this.$router.push('/login');\n          }\n\n          // Arrêter l'intervalle après déconnexion\n          clearInterval(this.tokenWatcher);\n        }\n      },\n\n      getCheckInterval() {\n        const tokenExpiration = this.$store.state.tokenExpiration;\n        const currentTime = Math.floor(Date.now() / 1000);\n\n        if (tokenExpiration) {\n          const timeLeft = tokenExpiration - currentTime;\n          // Retourner l'intervalle en fonction du temps restant sur le token\n          return timeLeft > 10 ? (timeLeft / 2) * 1000 : 5000;\n        }\n        return 5000; // Valeur par défaut\n      },\n      handleModalOpen() {\n        document.body.classList.add('modal-open');\n      },\n      handleModalClose() {\n        document.body.classList.remove('modal-open');\n      },\n    },\n\n    mounted() {\n      const token = localStorage.getItem('token');\n      const isAuthenticated = !!token;\n\n      if (isAuthenticated && !isTokenExpired()) {\n        // Démarrer la surveillance uniquement si l'utilisateur est authentifié et que le token n'est pas expiré\n        this.startTokenExpirationWatcher();\n      }\n\n      // Réagir aux changements de l'état d'authentification\n      this.$watch(\n        () => this.$store.state.isAuthenticated,\n        (newVal) => {\n          if (newVal) {\n            // Redémarrer la surveillance après reconnexion\n            this.startTokenExpirationWatcher();\n          } else {\n            // Arrêter la surveillance si déconnexion\n            clearInterval(this.tokenWatcher);\n          }\n        }\n      );\n\n      // Écoute les événements `modal-open` et `modal-close`\n      window.addEventListener('modal-open', this.handleModalOpen);\n      window.addEventListener('modal-close', this.handleModalClose);\n      window.addEventListener('online', this.updateOnlineStatus);\n      window.addEventListener('offline', this.updateOnlineStatus);\n    },\n\n    beforeUnmount() {\n      clearInterval(this.tokenWatcher); // Nettoyage lors du démontage du composant\n      window.removeEventListener('modal-open', this.handleModalOpen);\n      window.removeEventListener('modal-close', this.handleModalClose);\n      window.removeEventListener('online', this.updateOnlineStatus);\n      window.removeEventListener('offline', this.updateOnlineStatus);\n    },\n  };\n</script>\n\n<style lang=\"postcss\">\n  body.modal-open {\n    overflow: hidden;\n  }\n  html,\n  body {\n    @apply bg-dark-menu;\n    height: 100%;\n  }\n\n  .offline-indicator {\n    background: #ff9800;\n    color: #fff;\n    text-align: center;\n    padding: 5px 0;\n    font-weight: bold;\n  }\n</style>\n","<!-- src/components/MenuComponent.vue -->\n<template>\n  <nav\n    class=\"navbar bg-light-menu dark:bg-dark-menu p-4 shadow-md flex items-center justify-between\"\n  >\n    <!-- Section de gauche -->\n    <ul class=\"left-section flex items-center\">\n      <li v-if=\"isAdmin\" class=\"mr-6\">\n        <router-link\n          to=\"/admin/tourneys\"\n          :class=\"getLinkClass('/admin/tourneys')\"\n        >\n          Tournois\n        </router-link>\n      </li>\n      <!-- Lien pour les utilisateurs non-admins -->\n      <li v-if=\"isAuthenticated && !isAdmin\" class=\"mr-6\">\n        <router-link to=\"/tourneys\" :class=\"getLinkClass('/tourneys')\">\n          Mes tournois\n        </router-link>\n      </li>\n      <li v-if=\"isAdmin\" class=\"mr-6\">\n        <router-link to=\"/admin/sports\" :class=\"getLinkClass('/admin/sports')\">\n          Sports\n        </router-link>\n      </li>\n      <li v-if=\"isAdmin\" class=\"mr-6\">\n        <router-link to=\"/admin/users\" :class=\"getLinkClass('/admin/users')\">\n          Users\n        </router-link>\n      </li>\n      <li v-if=\"isAdmin\" class=\"mr-6\">\n        <router-link to=\"/tourneys\" :class=\"getLinkClass('/tourneys')\">\n          Public\n        </router-link>\n      </li>\n    </ul>\n\n    <!-- Section du nom du tournoi (visible uniquement sur les pages de tournoi) -->\n    <div\n      v-if=\"showTournamentName\"\n      class=\"tournament-name text-lg font-bold absolute left-1/2 transform -translate-x-1/2 text-light-profileText dark:text-dark-profileText hidden sm:block\"\n    >\n      {{ this.tournamentName }}\n      <span v-if=\"tournamentDate\" class=\"hidden lg:inline\">\n        - {{ formatDate(tournamentDate) }}\n      </span>\n    </div>\n\n    <!-- Section de droite -->\n    <ul class=\"right-section flex items-center\">\n      <li>\n        <button\n          @click=\"toggleDarkMode\"\n          class=\"mr-2 p-2 rounded text-blue-200 dark:text-yellow-300 hover:text-blue-300 dark:hover:text-yellow-500\"\n        >\n          <font-awesome-icon v-if=\"isDarkMode\" :icon=\"['fas', 'sun']\" />\n          <font-awesome-icon v-else :icon=\"['fas', 'moon']\" />\n        </button>\n      </li>\n      <li v-if=\"isAuthenticated\" class=\"profile-section flex items-center\">\n        <router-link\n          to=\"/profile\"\n          class=\"profile-link text-light-profileText dark:text-dark-profileText mr-4 hover:text-light-profileHoverText dark:hover:text-dark-profileHoverText\"\n        >\n          <span\n            class=\"username text-light-menuText dark:text-dark-menuText font-bold mr-4\"\n            >{{ userName }}</span\n          >\n\n          <font-awesome-icon :icon=\"['fas', 'user']\" />\n        </router-link>\n        <button\n          @click=\"logout\"\n          class=\"text-light-logoutButton-default dark:text-dark-logoutButton-default text-xl hover:text-light-logoutButton-hover dark:hover:text-dark-logoutButton-hover\"\n        >\n          <font-awesome-icon :icon=\"['fas', 'power-off']\" />\n        </button>\n      </li>\n      <li v-if=\"!isAuthenticated\" class=\"ml-4\">\n        <router-link\n          to=\"/login\"\n          class=\"text-light-profileText dark:text-dark-profileText font-bold text-lg flex items-center\"\n        >\n          <font-awesome-icon :icon=\"['fas', 'sign-in-alt']\" class=\"mr-2\" />Se\n          connecter\n        </router-link>\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script>\n  import { mapState } from 'vuex';\n\n  export default {\n    data() {\n      return {\n        isDarkMode: false,\n      };\n    },\n    computed: {\n      ...mapState({\n        isAuthenticated: (state) => state.isAuthenticated,\n        isAdmin: (state) => state.user?.roleId === 1,\n        userName: (state) => state.user?.name,\n        ...mapState('tourney', {\n          tournamentName: (state) => state.currentTournamentName,\n          tournamentDate: (state) => state.dateTourney,\n        }),\n      }),\n      showTournamentName() {\n        return (\n          (this.$route.path.startsWith('/tourneys/') ||\n            this.$route.path.startsWith('/admin/tourneys/')) &&\n          this.$route.params.tourneyId\n        );\n      },\n    },\n    methods: {\n      logout() {\n        localStorage.removeItem('token');\n        this.$store.dispatch('logout');\n        this.$router.push('/login');\n      },\n      formatDate(date) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(date).toLocaleDateString(undefined, options);\n      },\n      toggleDarkMode() {\n        this.isDarkMode = !this.isDarkMode;\n\n        if (this.isDarkMode) {\n          document.documentElement.classList.add('dark');\n          localStorage.setItem('theme', 'dark');\n        } else {\n          document.documentElement.classList.remove('dark');\n          localStorage.setItem('theme', 'light');\n        }\n      },\n      getLinkClass(path) {\n        const isActive = this.$route.path === path;\n        return [\n          'font-semibold',\n          'hover:text-light-menuHoverText',\n          'dark:hover:text-dark-menuHoverText',\n          isActive\n            ? 'text-light-menuActive dark:text-dark-menuActive'\n            : 'text-light-menuText dark:text-dark-menuText',\n        ];\n      },\n    },\n    mounted() {\n      const isDark =\n        localStorage.getItem('theme') === 'dark' ||\n        (!('theme' in localStorage) &&\n          window.matchMedia('(prefers-color-scheme: dark)').matches);\n\n      this.isDarkMode = isDark;\n      if (isDark) {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles gérés par Tailwind CSS */\n</style>\n","import { render } from \"./MenuComponent.vue?vue&type=template&id=7c6b824a&scoped=true\"\nimport script from \"./MenuComponent.vue?vue&type=script&lang=js\"\nexport * from \"./MenuComponent.vue?vue&type=script&lang=js\"\n\nimport \"./MenuComponent.vue?vue&type=style&index=0&id=7c6b824a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c6b824a\"]])\n\nexport default __exports__","const roles = {\n  ADMIN: 1,\n  USER: 2,\n};\n\nconst permissions = {\n  [roles.ADMIN]: [\n    'viewAdminPage',\n    'manageUsers',\n    'viewUserPage',\n    'viewDashboard',\n    'viewAssistantPage',\n  ],\n  [roles.USER]: ['viewUserPage', 'viewDashboard'],\n};\n\nexport { roles, permissions };\n","import axios from 'axios';\n\nconst API_URL = process.env.VUE_APP_API_URL || 'https://easy-tourney-backend-6cdfc7a64550.herokuapp.com/api';\nexport const BASE_URL = process.env.VUE_APP_BASE_URL || 'https://easy-tourney-frontend-899109fd59ab.herokuapp.com';\nconsole.log('API_URL:', API_URL);\nconsole.log('BASE_URL:', BASE_URL);\n\nconst apiService = axios.create({\n  baseURL: API_URL,\n});\n\n// Ajoute le token si disponible\napiService.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport default apiService;\n","// store/modules/tourney.js\n\nimport apiService from '@/services/apiService';\nexport default {\n  namespaced: true,\n  state: {\n    currentTournamentName: '', // Stocker le nom du tournoi\n    tourneyType: '', // Stocker le type du tournoi\n    dateTourney: '', // Stocker la date du tournoi\n    statuses: {\n      status: 'draft',\n      fieldAssignmentStatus: 'notStarted',\n      sportAssignmentStatus: 'notStarted',\n      registrationStatus: 'notStarted',\n      poolStatus: 'notStarted',\n      planningStatus: 'notStarted',\n    },\n  },\n  mutations: {\n    SET_TOURNAMENT_NAME(state, name) {\n      state.currentTournamentName = name;\n    },\n    SET_TOURNAMENT_TYPE(state, tourneyType) {\n      state.tourneyType = tourneyType;\n    },\n    SET_TOURNAMENT_DATE(state, dateTourney) {\n      state.dateTourney = dateTourney;\n    },\n    CLEAR_TOURNAMENT_NAME(state) {\n      state.currentTournamentName = '';\n      state.currentTournamentDate = ''; // Réinitialise la date\n    },\n    SET_STATUSES(state, statuses) {\n      state.statuses = { ...state.statuses, ...statuses };\n    },\n    UPDATE_STATUS(state, { key, value }) {\n      state.statuses[key] = value;\n    },\n    RESET_TOURNEY_STATE(state) {\n      state.currentTournamentName = ''; // Réinitialisation du nom du tournoi\n      state.dateTourney = ''; // Réinitialisation de la date du tournoi\n      state.statuses = {\n        // Réinitialisation des statuts à un état \"vide\"\n        status: null,\n        fieldAssignmentStatus: null,\n        sportAssignmentStatus: null,\n        registrationStatus: null,\n        planningStatus: null,\n      };\n    },\n  },\n  actions: {\n    async fetchTourneyStatuses({ commit }, tourneyId) {\n      try {\n        const response = await apiService.get(\n          `/tourneys/${tourneyId}/statuses`\n        );\n        const {\n          name,\n          tourneyType,\n          dateTourney,\n          status,\n          registrationStatus,\n          ...statuses\n        } = response.data;\n        commit('SET_TOURNAMENT_NAME', name);\n        commit('SET_TOURNAMENT_TYPE', tourneyType);\n        commit('SET_TOURNAMENT_DATE', dateTourney); // Mets à jour la date\n        commit('SET_STATUSES', { ...statuses, status, registrationStatus });\n      } catch (error) {\n        console.error('Erreur lors de la récupération des statuts:', error);\n        throw error;\n      }\n    },\n    async updateStatus({ commit }, { tourneyId, key, value }) {\n      try {\n        await apiService.put(`/tourneys/${tourneyId}`, { [key]: value });\n        commit('UPDATE_STATUS', { key, value });\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour du statut:', error);\n      }\n    },\n    setTournamentName({ commit }, name) {\n      commit('SET_TOURNAMENT_NAME', name);\n    },\n    clearTournamentName({ commit }) {\n      commit('CLEAR_TOURNAMENT_NAME');\n    },\n  },\n};\n","// store/modules/userTourney.js\n\nimport apiService from '@/services/apiService';\nexport default {\n  namespaced: true,\n  state: {\n    activeTourney: null,\n    selectedTourney: {}, // Stocker les données d'un tournoi spécifique\n    tourneyRole: null,\n    // Filter planning page:\n    selectedPoolId: null,\n    selectedFieldId: null,\n    selectedGameId: null,\n  },\n  mutations: {\n    SET_ACTIVE_TOURNEY(state, tourney) {\n      state.activeTourney = tourney;\n    },\n    SET_SELECTED_TOURNEY(state, tourney) {\n      state.selectedTourney[tourney.id] = tourney; // Stocke les données par ID\n    },\n    SET_TOURNEY_ROLE(state, role) {\n      state.tourneyRole = role;\n    },\n    SET_SELECTED_POOL(state, poolId) {\n      state.selectedPoolId = poolId;\n    },\n    SET_SELECTED_FIELD(state, fieldId) {\n      state.selectedFieldId = fieldId;\n    },\n    SET_SELECTED_GAME(state, gameId) {\n      state.selectedGameId = gameId;\n    },\n    RESET_FILTERS(state) {\n      state.selectedPoolId = null;\n      state.selectedFieldId = null;\n      state.selectedGameId = null;\n    },\n  },\n  actions: {\n    async fetchTourneyById({ state, commit }, tourneyId) {\n      if (state.selectedTourney[tourneyId]) {\n        return state.selectedTourney[tourneyId]; // Retourne les données si déjà chargées\n      }\n      try {\n        const response = await apiService.get(`/tourneys/${tourneyId}`);\n        const tourneyData = response.data;\n        commit('SET_SELECTED_TOURNEY', tourneyData);\n        return tourneyData;\n      } catch (error) {\n        console.error('Erreur lors de la récupération du tournoi :', error);\n        throw error;\n      }\n    },\n    async fetchActiveTourney({ commit, dispatch }) {\n      try {\n        const response = await apiService.get('/users/active-tourney');\n        const activeTourneyData = response.data;\n\n        if (activeTourneyData && activeTourneyData.status === 'active') {\n          commit('SET_ACTIVE_TOURNEY', activeTourneyData);\n\n          const tourneyId = activeTourneyData.id;\n          if (tourneyId) {\n            await dispatch('fetchTourneyRole', tourneyId);\n          }\n        } else {\n          commit('SET_ACTIVE_TOURNEY', null);\n          commit('SET_TOURNEY_ROLE', null);\n        }\n      } catch (error) {\n        console.error(\n          'Erreur lors de la récupération du tournoi actif :',\n          error\n        );\n      }\n    },\n    async fetchTourneyRole({ commit }, tourneyId) {\n      try {\n        const response = await apiService.get(\n          `/users/me/tourneys/${tourneyId}/role`\n        );\n        commit('SET_TOURNEY_ROLE', response.data.tourneyRole);\n      } catch (error) {\n        console.error(\n          'Erreur lors de la récupération du rôle dans le tournoi :',\n          error\n        );\n      }\n    },\n\n    // FILTERS\n    setSelectedPool({ commit }, poolId) {\n      commit('SET_SELECTED_POOL', poolId);\n    },\n    setSelectedField({ commit }, fieldId) {\n      commit('SET_SELECTED_FIELD', fieldId);\n    },\n    setSelectedGame({ commit }, gameId) {\n      commit('SET_SELECTED_GAME', gameId);\n    },\n    resetFilters({ commit }) {\n      commit('RESET_FILTERS');\n    },\n  },\n  getters: {\n    isAssistant(state) {\n      return state.tourneyRole === 'assistant';\n    },\n    getTourneyById: (state) => (id) => {\n      return state.selectedTourney[id];\n    },\n\n    // FILTERS\n    selectedPoolId: (state) => state.selectedPoolId,\n    selectedFieldId: (state) => state.selectedFieldId,\n    selectedGameId: (state) => state.selectedGameId,\n  },\n};\n","// src/services/socketService.js\n\nimport { io } from 'socket.io-client';\n\nlet socket = null;\n\nexport function getSocket() {\n    if (!socket) {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            // Ne pas créer de socket si l'utilisateur n'est pas authentifié\n            return null;\n        }\n        socket = io(process.env.VUE_APP_IMAGE_URL || 'https://easy-tourney-backend-6cdfc7a64550.herokuapp.com', {\n            auth: {\n                token,\n            },\n            reconnectionAttempts: 5,\n            reconnectionDelay: 5000,\n        });\n\n        // Gestion des erreurs et des événements\n        socket.on('connect_error', (err) => {\n            console.error('Erreur de connexion Socket.IO :', err.message);\n        });\n\n        socket.on('disconnect', (reason) => {\n            console.warn('Socket déconnecté :', reason);\n            // Si nécessaire, gérer la reconnexion\n        });\n    }\n    return socket;\n}\n","import { createStore } from 'vuex';\nimport apiService from '@/services/apiService';\nimport { jwtDecode } from 'jwt-decode'; // Import the 'jwtDecode' function\nimport tourney from './modules/tourney';\nimport userTourney from './modules/userTourney';\nimport { getSocket } from '@/services/socketService';\n\nexport default createStore({\n  modules: {\n    tourney,\n    userTourney,\n  },\n  state: {\n    isAuthenticated: !!localStorage.getItem('token'), // On vérifie si un token est déjà présent\n    user: null,\n    tokenExpiration: null,\n    inviteToken: localStorage.getItem('inviteToken') || null, // vérifier si un token d'invitation est présent\n  },\n  mutations: {\n    SET_AUTH(state, payload) {\n      state.isAuthenticated = payload.isAuthenticated;\n      state.user = payload.user;\n      state.tokenExpiration = payload.tokenExpiration;\n    },\n    LOGOUT(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.tokenExpiration = null;\n      state.inviteToken = null; // Reset du token d'invitation lors du logout\n      localStorage.removeItem('inviteToken');\n      this.commit('tourney/RESET_TOURNEY_STATE');\n    },\n    SET_ALERT_MESSAGE(state, message) {\n      state.alertMessage = message;\n    },\n    CLEAR_ALERT_MESSAGE(state) {\n      state.alertMessage = null;\n    },\n    UPDATE_USER_NAME(state, newName) {\n      if (state.user) {\n        state.user.name = newName;\n      }\n    },\n    SET_INVITE_TOKEN(state, token) {\n      state.inviteToken = token;\n      localStorage.setItem('inviteToken', token);\n    },\n    CLEAR_INVITE_TOKEN(state) {\n      state.inviteToken = null;\n      localStorage.removeItem('inviteToken');\n    },\n  },\n  actions: {\n    async login({ commit }, { email, password }) {\n      try {\n        const response = await apiService.post('/auth/login', {\n          email,\n          password,\n        });\n        const { token, expiresIn } = response.data;\n\n        localStorage.setItem('token', token);\n        apiService.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Récupérer les informations de l'utilisateur depuis le serveur\n        const userResponse = await apiService.get('/users/me');\n        const user = userResponse.data;\n\n        commit('SET_AUTH', { isAuthenticated: true, user, expiresIn });\n      } catch (error) {\n        console.error('Erreur de connexion:', error);\n        throw error;\n      }\n    },\n    logout({ commit }) {\n      localStorage.removeItem('token'); // Supprime le token de localStorage\n      // Déconnecter le socket\n      let socket = getSocket();\n      if (socket) {\n        socket.disconnect();\n        socket = null;\n      }\n      delete apiService.defaults.headers.common['Authorization']; // Supprime l'en-tête d'autorisation\n\n      commit('LOGOUT'); // Réinitialise l'état\n    },\n    saveInviteToken({ commit }, token) {\n      commit('SET_INVITE_TOKEN', token);\n    },\n    clearInviteToken({ commit }) {\n      commit('CLEAR_INVITE_TOKEN');\n    },\n    /*\n     * Initialiser l'authentification\n     * Vérifie si un token est présent dans le localStorage\n     * Si le token est valide, le decoder et mettre à jour l'état de l'authentification\n     */\n    async initializeAuth({ commit }) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const decoded = jwtDecode(token);\n          const currentTime = Math.floor(Date.now() / 1000); // Temps actuel en secondes\n\n          if (decoded.exp && currentTime < decoded.exp) {\n            // Si le token n'est pas expiré\n            apiService.defaults.headers.common[\n              'Authorization'\n            ] = `Bearer ${token}`;\n            // Récupérer les informations de l'utilisateur depuis le serveur\n            const response = await apiService.get('/users/me');\n            const user = response.data;\n\n            commit('SET_AUTH', {\n              isAuthenticated: true,\n              user,\n              tokenExpiration: decoded.exp, // On récupère l'expiration\n            });\n          } else {\n            // Si le token est expiré, effectuer un logout\n            commit('LOGOUT');\n            localStorage.removeItem('token');\n          }\n        } catch (error) {\n          console.error('Erreur lors du décodage du token:', error);\n          commit('LOGOUT');\n          localStorage.removeItem('token');\n        }\n      }\n    },\n  },\n});\n","import { permissions, roles } from './permissions';\nimport apiService from './apiService';\nimport store from '../store';\nimport { jwtDecode } from 'jwt-decode';\n\n// Vérifie si l'utilisateur a une permission spécifique\nexport function hasPermission(userRole, permission) {\n  // Trouver la clé du rôle directement\n  const roleKey = Object.entries(roles).find(\n    ([, value]) => value === userRole\n  )?.[0];\n  if (!roleKey) {\n    return false;\n  }\n\n  // Accéder aux permissions du rôle\n  const hasPerm = permissions[roles[roleKey]]?.includes(permission) ?? false;\n\n  return hasPerm;\n}\n\nexport const logout = () => {\n  // Supprimer le token du localStorage\n  localStorage.removeItem('token');\n\n  // Déconnecter l'utilisateur dans le store (ex: Vuex)\n  store.commit('LOGOUT');\n\n  // Rediriger vers la page de login\n  //router.push({ name: 'Login' });\n};\n\nexport const isTokenExpired = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return true;\n\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000; // Temps actuel en secondes\n    return decoded.exp < currentTime; // true si le token est expiré\n  } catch (error) {\n    return true; // Si une erreur survient, considère le token comme expiré\n  }\n};\n\n// Logout s'il est expiré\nexport const handleTokenExpiration = () => {\n  if (isTokenExpired()) {\n    logout();\n  }\n};\n\n// Vérifie si l'utilisateur est authentifié en fonction du token présent\nexport function isAuthenticated() {\n  const token = localStorage.getItem('token');\n  return !!token;\n}\n\n// Vérifie si l'utilisateur est admin\nexport function isAdmin() {\n  return store.state.user?.roleId === roles.ADMIN;\n}\n\nexport function decodeToken(token) {\n  try {\n    return jwtDecode(token);\n  } catch (error) {\n    console.error('Erreur lors du décodage du token:', error);\n    return null;\n  }\n}\n\n// Rafraîchit le token JWT\nexport async function refreshToken() {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Pas de token disponible pour le rafraîchissement.');\n    }\n\n    const response = await apiService.post('/auth/refresh-token');\n    const newToken = response.data.token;\n\n    // Vérifier que le nouveau token existe\n    if (!newToken) {\n      throw new Error(\"Erreur lors de l'obtention du nouveau token.\");\n    }\n\n    // Stocker le nouveau token et le définir dans l'en-tête Authorization\n    localStorage.setItem('token', newToken);\n    apiService.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n\n    return newToken;\n  } catch (error) {\n    console.error('Erreur lors du rafraîchissement du token :', error);\n    throw error; // Pour propager l'erreur si le rafraîchissement échoue\n  }\n}\n","import { render } from \"./App.vue?vue&type=template&id=30e66c7e\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=30e66c7e&lang=postcss\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- src/views/auth/LoginPage.vue -->\n<template>\n  <AuthComponentForm\n    mode=\"login\"\n    :error=\"error\"\n    :isSubmitting=\"isSubmitting\"\n    @submit=\"handleLogin\"\n  />\n</template>\n\n<script>\n  import AuthComponentForm from '@/components/AuthComponentForm.vue';\n  import apiService from '@/services/apiService';\n  import { roles } from '@/services/permissions';\n  import { toast } from 'vue3-toastify';\n  import { jwtDecode } from 'jwt-decode';\n\n  export default {\n    name: 'LoginPage',\n    components: {\n      AuthComponentForm,\n    },\n    data() {\n      return {\n        error: '',\n        isSubmitting: false,\n      };\n    },\n    methods: {\n      async handleLogin(formData) {\n        this.error = '';\n        this.toastSuccess = null;\n        this.toastError = null;\n        this.isSubmitting = true;\n\n        try {\n          const response = await apiService.post('/auth/login', {\n            email: formData.email,\n            password: formData.password,\n          });\n\n          const token = response.data.token;\n          // Stocker le token\n          localStorage.setItem('token', token);\n          apiService.defaults.headers.common[\n            'Authorization'\n          ] = `Bearer ${token}`;\n\n          // Mettre à jour le store avec les informations utilisateur\n          const userResponse = await apiService.get('/users/me');\n          const user = userResponse.data;\n          this.$store.commit('SET_AUTH', {\n            isAuthenticated: true,\n            user,\n          });\n\n          // Vérifier si un token d’invitation est présent dans le store Vuex\n          const inviteToken = this.$store.state.inviteToken;\n          if (inviteToken) {\n            try {\n              await apiService.post(`/tourneys/join`, { token: inviteToken });\n            } catch (err) {\n              console.error('Erreur lors de la jonction au tournoi:', err);\n              if (err.response && err.response.status === 400) {\n                toast.error(\n                  err.response.data.message ||\n                    'Impossible de rejoindre le tournoi.'\n                );\n              } else {\n                toast.error('Erreur lors de la jonction au tournoi.');\n              }\n            } finally {\n              this.$store.dispatch('clearInviteToken'); // Nettoyer le token après usage\n            }\n          }\n\n          // Redirection après connexion\n          const userRole = user.roleId;\n          if (userRole === roles.ADMIN) {\n            this.$router.replace('/admin/tourneys');\n          } else {\n            // Utiliser l'inviteToken pour la redirection\n            const tourneyId = inviteToken\n              ? jwtDecode(inviteToken).tourneyId\n              : null;\n            if (tourneyId) {\n              this.$router.replace(`/tourneys/${tourneyId}/join-team`);\n            } else {\n              this.$router.replace('/tourneys');\n            }\n          }\n        } catch (err) {\n          console.error('Erreur lors de la connexion:', err);\n\n          if (err.code === 'ERR_NETWORK' || !err.response) {\n            // Erreur réseau\n            this.error =\n              'Le serveur de connexion est injoignable. Veuillez ressayer plus tard.';\n          } else if (err.response && err.response.status === 401) {\n            // Identifiants incorrects\n            this.error = 'Identifiant ou mot de passe incorrect.';\n          } else {\n            // Autres erreurs\n            this.error = 'Une erreur est survenue. Veuillez réessayer.';\n          }\n        } finally {\n          this.isSubmitting = false;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Les styles sont gérés via Tailwind CSS */\n</style>\n","<template>\n  <div\n    class=\"flex justify-center items-center h-full bg-light-background dark:bg-dark-background p-8\"\n  >\n    <div\n      class=\"bg-light-card dark:bg-dark-card p-10 rounded-lg shadow-md w-full max-w-sm\"\n    >\n      <h1\n        class=\"text-2xl font-bold text-center mb-8 text-light-title dark:text-dark-title\"\n      >\n        {{ title }}\n      </h1>\n      <form @submit.prevent=\"handleSubmit\">\n        <!-- Champ Nom (uniquement pour l'inscription) -->\n        <div v-if=\"mode === 'register'\" class=\"mb-6\">\n          <label\n            for=\"name\"\n            class=\"block text-light-form-text dark:text-dark-form-text font-semibold mb-2\"\n          >\n            Nom\n          </label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            v-model=\"formData.name\"\n            type=\"text\"\n            placeholder=\"Entrer votre nom\"\n            class=\"w-full p-3 border rounded-md bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text\"\n            :class=\"{\n              'border-light-form-error dark:border-dark-form-error':\n                errors.name,\n              'border-light-form-border-default dark:border-dark-form-border-default':\n                !errors.name,\n            }\"\n          />\n          <p\n            v-if=\"errors.name\"\n            class=\"text-light-form-error dark:text-dark-form-error text-sm mt-1\"\n          >\n            {{ errors.name }}\n          </p>\n        </div>\n\n        <!-- Champ Email -->\n        <div v-if=\"showEmailField\" class=\"mb-6\">\n          <label\n            for=\"email\"\n            class=\"block text-light-form-text dark:text-dark-form-text font-semibold mb-2\"\n          >\n            Email\n          </label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            v-model=\"formData.email\"\n            type=\"email\"\n            placeholder=\"Entrer votre email\"\n            autocomplete=\"email\"\n            class=\"w-full p-3 border rounded-md bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text\"\n            :class=\"{\n              'border-light-form-error dark:border-dark-form-error':\n                errors.email,\n              'border-light-form-border-default dark:border-dark-form-border-default':\n                !errors.email,\n            }\"\n          />\n          <p\n            v-if=\"errors.email\"\n            class=\"text-light-form-error dark:text-dark-form-error text-sm mt-1\"\n          >\n            {{ errors.email }}\n          </p>\n        </div>\n\n        <!-- Champ Mot de Passe -->\n        <div v-if=\"showPasswordFields\" class=\"mb-6\">\n          <label\n            for=\"password\"\n            class=\"block text-light-form-text dark:text-dark-form-text font-semibold mb-2\"\n          >\n            Mot de passe\n          </label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            v-model=\"formData.password\"\n            type=\"password\"\n            placeholder=\"Entrer votre mot de passe\"\n            autocomplete=\"new-password\"\n            class=\"w-full p-3 border rounded-md bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text\"\n            :class=\"{\n              'border-light-form-error dark:border-dark-form-error':\n                errors.password,\n              'border-light-form-border-default dark:border-dark-form-border-default':\n                !errors.password,\n            }\"\n          />\n          <p\n            v-if=\"errors.password\"\n            class=\"text-light-form-error dark:text-dark-form-error text-sm mt-1\"\n          >\n            {{ errors.password }}\n          </p>\n        </div>\n\n        <!-- Champ Confirmation Mot de Passe -->\n        <div v-if=\"showConfirmPasswordField\" class=\"mb-6\">\n          <label\n            for=\"confirmPassword\"\n            class=\"block text-light-form-text dark:text-dark-form-text font-semibold mb-2\"\n          >\n            Confirmer le mot de passe\n          </label>\n          <input\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            v-model=\"formData.confirmPassword\"\n            type=\"password\"\n            placeholder=\"Confirmer votre mot de passe\"\n            autocomplete=\"new-password\"\n            class=\"w-full p-3 border rounded-md bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text\"\n            :class=\"{\n              'border-light-form-error dark:border-dark-form-error':\n                errors.confirmPassword,\n              'border-light-form-border-default dark:border-dark-form-border-default':\n                !errors.confirmPassword,\n            }\"\n          />\n          <p v-if=\"errors.confirmPassword\" class=\"text-red-500 text-sm mt-1\">\n            {{ errors.confirmPassword }}\n          </p>\n        </div>\n\n        <!-- Bouton de soumission -->\n        <ButtonComponent\n          variant=\"primary\"\n          nativeType=\"submit\"\n          class=\"w-full ml-0 mr-0 sm:ml-0 sm:mr-0 px-2 sm:px-0 mx-0\"\n          :disabled=\"isSubmitting\"\n        >\n          {{ submitButtonText }}\n        </ButtonComponent>\n      </form>\n      <p\n        v-if=\"error\"\n        class=\"text-light-form-error dark:text-dark-form-error mt-4 text-center font-semibold\"\n      >\n        {{ error }}\n      </p>\n\n      <!-- Liens contextuels -->\n      <div\n        class=\"text-center mt-6 text-light-form-text dark:text-dark-form-text\"\n      >\n        <template v-if=\"mode === 'login'\">\n          Pas de compte ?\n          <router-link\n            to=\"/register\"\n            class=\"text-light-menuHoverText dark:text-dark-menuHoverText font-semibold\"\n            >Créer un compte</router-link\n          >\n          <br />\n          <router-link\n            to=\"/forgot-password\"\n            class=\"text-light-menuHoverText dark:text-dark-menuHoverText font-semibold block\"\n            >Mot de passe oublié ?</router-link\n          >\n        </template>\n\n        <template v-else-if=\"mode === 'register'\">\n          Déjà un compte ?\n          <router-link\n            to=\"/login\"\n            class=\"text-light-menuHoverText dark:text-dark-menuHoverText font-semibold\"\n            >Se connecter</router-link\n          >\n        </template>\n\n        <template v-else-if=\"mode === 'forgot-password'\">\n          <router-link\n            to=\"/login\"\n            class=\"text-light-menuHoverText dark:text-dark-menuHoverText font-semibold\"\n            >Retour à la connexion</router-link\n          >\n        </template>\n\n        <template v-else-if=\"mode === 'reset-password'\">\n          <router-link\n            to=\"/login\"\n            class=\"text-light-menuHoverText dark:text-dark-menuHoverText font-semibold\"\n            >Retour à la connexion</router-link\n          >\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n\n  export default {\n    name: 'AuthComponentForm',\n    components: {\n      ButtonComponent,\n    },\n    props: {\n      mode: {\n        type: String,\n        default: 'login', // 'login', 'register', 'forgot-password', 'reset-password'\n      },\n      error: {\n        type: String,\n        default: '',\n      },\n      isSubmitting: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    emits: ['submit'],\n    data() {\n      return {\n        formData: {\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n        },\n        errors: {},\n      };\n    },\n    computed: {\n      showEmailField() {\n        return this.mode !== 'reset-password';\n      },\n      showPasswordFields() {\n        return (\n          this.mode === 'login' ||\n          this.mode === 'register' ||\n          this.mode === 'reset-password'\n        );\n      },\n      showConfirmPasswordField() {\n        return this.mode === 'register' || this.mode === 'reset-password';\n      },\n      title() {\n        switch (this.mode) {\n          case 'login':\n            return 'Connexion';\n          case 'register':\n            return 'Inscription';\n          case 'forgot-password':\n            return 'Mot de passe oublié';\n          case 'reset-password':\n            return 'Réinitialiser le mot de passe';\n          default:\n            return 'Authentification';\n        }\n      },\n      submitButtonText() {\n        switch (this.mode) {\n          case 'login':\n            return 'Se connecter';\n          case 'register':\n            return \"S'inscrire\";\n          case 'forgot-password':\n            return 'Envoyer le lien';\n          case 'reset-password':\n            return 'Réinitialiser le mot de passe';\n          default:\n            return 'Soumettre';\n        }\n      },\n    },\n    methods: {\n      handleSubmit() {\n        this.errors = {};\n\n        // Validation en fonction du mode\n        if (this.mode === 'register') {\n          this.validateRegister();\n        } else if (this.mode === 'login') {\n          this.validateLogin();\n        } else if (this.mode === 'forgot-password') {\n          this.validateForgotPassword();\n        } else if (this.mode === 'reset-password') {\n          this.validateResetPassword();\n        }\n\n        if (Object.keys(this.errors).length === 0) {\n          // Émission des données appropriées en fonction du mode\n          let payload = {};\n          if (this.mode === 'login' || this.mode === 'register') {\n            payload = { ...this.formData };\n          } else if (this.mode === 'forgot-password') {\n            payload = { email: this.formData.email };\n          } else if (this.mode === 'reset-password') {\n            payload = {\n              password: this.formData.password,\n              confirmPassword: this.formData.confirmPassword,\n            };\n          }\n\n          this.$emit('submit', payload);\n        }\n      },\n      validateRegister() {\n        if (!this.formData.name) {\n          this.errors.name = 'Le nom est obligatoire.';\n        }\n\n        if (!this.formData.email) {\n          this.errors.email = \"L'email est obligatoire.\";\n        } else if (!this.validateEmail(this.formData.email)) {\n          this.errors.email = 'Veuillez entrer un email valide.';\n        }\n\n        if (!this.formData.password) {\n          this.errors.password = 'Le mot de passe est obligatoire.';\n        } else {\n          const passwordRegex = /^(?=.*[A-Z]).{8,}$/;\n          if (!passwordRegex.test(this.formData.password)) {\n            this.errors.password =\n              'Le mot de passe doit contenir au moins 8 caractères et une majuscule.';\n          }\n        }\n\n        if (!this.formData.confirmPassword) {\n          this.errors.confirmPassword =\n            'Veuillez confirmer votre mot de passe.';\n        } else if (this.formData.password !== this.formData.confirmPassword) {\n          this.errors.confirmPassword =\n            'Les mots de passe ne correspondent pas.';\n        }\n      },\n      validateLogin() {\n        if (!this.formData.email) {\n          this.errors.email = \"L'email est obligatoire.\";\n        } else if (!this.validateEmail(this.formData.email)) {\n          this.errors.email = 'Veuillez entrer un email valide.';\n        }\n\n        if (!this.formData.password) {\n          this.errors.password = 'Le mot de passe est obligatoire.';\n        }\n      },\n      validateForgotPassword() {\n        if (!this.formData.email) {\n          this.errors.email = \"L'email est obligatoire.\";\n        } else if (!this.validateEmail(this.formData.email)) {\n          this.errors.email = 'Veuillez entrer un email valide.';\n        }\n      },\n      validateResetPassword() {\n        if (!this.formData.password) {\n          this.errors.password = 'Le mot de passe est obligatoire.';\n        } else {\n          const passwordRegex = /^(?=.*[A-Z]).{8,}$/;\n          if (!passwordRegex.test(this.formData.password)) {\n            this.errors.password =\n              'Le mot de passe doit contenir au moins 8 caractères et une majuscule.';\n          }\n        }\n\n        if (!this.formData.confirmPassword) {\n          this.errors.confirmPassword =\n            'Veuillez confirmer votre mot de passe.';\n        } else if (this.formData.password !== this.formData.confirmPassword) {\n          this.errors.confirmPassword =\n            'Les mots de passe ne correspondent pas.';\n        }\n      },\n      validateEmail(email) {\n        // Regex simple pour valider l'email\n        const re = /\\S+@\\S+\\.\\S+/;\n        return re.test(email);\n      },\n    },\n    watch: {\n      mode() {\n        // Réinitialiser les données du formulaire lorsque le mode change\n        this.formData = {\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n        };\n        this.errors = {};\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Les styles sont gérés via Tailwind CSS */\n</style>\n","<!-- ButtonComponent.vue -->\n<template>\n  <button\n    :type=\"nativeType\"\n    :class=\"[\n      'ml-1 mr-1 sm:ml-4 sm:mr-2 px-2 sm:px-4 py-2 font-semibold rounded-md shadow-md transition-all',\n      variantClasses,\n      disabled ? 'opacity-50 cursor-not-allowed' : '',\n    ]\"\n    :disabled=\"disabled\"\n  >\n    <!-- Gérer FontAwesome ou HeroIcons selon le type d'icône -->\n    <font-awesome-icon\n      v-if=\"fontAwesomeIcon\"\n      :icon=\"['fas', fontAwesomeIcon]\"\n      class=\"w-5 h-5 mr-1 inline-block\"\n    />\n    <component\n      v-if=\"heroIcon\"\n      :is=\"icons[heroIcon]\"\n      class=\"w-5 h-5 mr-1 inline-block\"\n    />\n    <slot />\n  </button>\n</template>\n\n<script>\n  import { TrashIcon, PencilIcon, PlusIcon } from '@heroicons/vue/24/outline';\n\n  export default {\n    props: {\n      variant: {\n        type: String,\n        default: 'primary',\n      },\n      heroIcon: {\n        type: String,\n        default: null, // Utilisé pour HeroIcons\n      },\n      fontAwesomeIcon: {\n        type: String,\n        default: null, // Utilisé pour FontAwesome\n      },\n      nativeType: {\n        type: String,\n        default: 'button',\n      },\n      disabled: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    computed: {\n      variantClasses() {\n        const variants = {\n          primary:\n            'bg-light-buttonVariants-primary-default dark:bg-dark-buttonVariants-primary-default text-white hover:bg-light-buttonVariants-primary-hover dark:hover:bg-dark-buttonVariants-primary-hover',\n          secondary:\n            'bg-light-buttonVariants-secondary-default dark:bg-dark-buttonVariants-secondary-default text-white hover:bg-light-buttonVariants-secondary-hover dark:hover:bg-dark-buttonVariants-secondary-hover',\n          danger:\n            'bg-light-buttonVariants-danger-default dark:bg-dark-buttonVariants-danger-default text-white hover:bg-light-buttonVariants-danger-hover dark:hover:bg-dark-buttonVariants-danger-hover',\n          warning:\n            'bg-light-buttonVariants-warning-default dark:bg-dark-buttonVariants-warning-default text-white hover:bg-light-buttonVariants-warning-hover dark:hover:bg-dark-buttonVariants-warning-hover',\n          gray: 'bg-light-buttonVariants-disabled-default dark:bg-dark-buttonVariants-disabled-default text-white',\n          info: 'bg-light-buttonVariants-info-default dark:bg-dark-buttonVariants-info-default text-white hover:bg-light-buttonVariants-info-hover dark:hover:bg-dark-buttonVariants-info-hover',\n          algo: 'bg-light-buttonVariants-algo-default dark:bg-dark-buttonVariants-algo-default text-white hover:bg-light-buttonVariants-algo-hover dark:hover:bg-dark-buttonVariants-algo-hover',\n        };\n        return variants[this.variant] || variants.primary;\n      },\n    },\n    data() {\n      return {\n        icons: {\n          TrashIcon,\n          PencilIcon,\n          PlusIcon,\n        },\n      };\n    },\n  };\n</script>\n","import { render } from \"./ButtonComponent.vue?vue&type=template&id=26664978\"\nimport script from \"./ButtonComponent.vue?vue&type=script&lang=js\"\nexport * from \"./ButtonComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AuthComponentForm.vue?vue&type=template&id=68b1f88e&scoped=true\"\nimport script from \"./AuthComponentForm.vue?vue&type=script&lang=js\"\nexport * from \"./AuthComponentForm.vue?vue&type=script&lang=js\"\n\nimport \"./AuthComponentForm.vue?vue&type=style&index=0&id=68b1f88e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-68b1f88e\"]])\n\nexport default __exports__","import { render } from \"./LoginPage.vue?vue&type=template&id=2536af73&scoped=true\"\nimport script from \"./LoginPage.vue?vue&type=script&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&lang=js\"\n\nimport \"./LoginPage.vue?vue&type=style&index=0&id=2536af73&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2536af73\"]])\n\nexport default __exports__","<!-- src/views/auth/RegisterPage.vue -->\n<template>\n  <AuthComponentForm\n    mode=\"register\"\n    :error=\"error\"\n    :isSubmitting=\"isSubmitting\"\n    @submit=\"handleRegister\"\n  />\n</template>\n\n<script>\n  import AuthComponentForm from '@/components/AuthComponentForm.vue';\n  import apiService from '@/services/apiService';\n  import { jwtDecode } from 'jwt-decode';\n  import { roles } from '@/services/permissions';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    name: 'RegisterPage',\n    components: {\n      AuthComponentForm,\n    },\n    data() {\n      return {\n        error: '',\n        isSubmitting: false,\n      };\n    },\n    methods: {\n      async handleRegister(formData) {\n        this.error = '';\n        this.isSubmitting = true;\n\n        try {\n          // Créer le nouvel utilisateur\n          const response = await apiService.post('/auth/register', {\n            name: formData.name,\n            email: formData.email,\n            password: formData.password,\n            confirmPassword: formData.confirmPassword,\n          });\n\n          const token = response.data.token;\n          // Stocker le token dans le localStorage\n          localStorage.setItem('token', token);\n          apiService.defaults.headers.common[\n            'Authorization'\n          ] = `Bearer ${token}`;\n\n          // Mettre à jour le store Vuex avec les informations utilisateur\n          const userResponse = await apiService.get('/users/me');\n          const user = userResponse.data;\n          this.$store.commit('SET_AUTH', {\n            isAuthenticated: true,\n            user,\n          });\n\n          // Vérifier si un token d’invitation est présent dans le store Vuex\n          const inviteToken = this.$store.state.inviteToken;\n          if (inviteToken) {\n            try {\n              await apiService.post(`/tourneys/join`, {\n                token: inviteToken,\n              });\n              toast.success('Vous avez rejoint le tournoi avec succès.');\n            } catch (err) {\n              console.error('Erreur lors de la jonction au tournoi:', err);\n              if (err.response && err.response.status === 400) {\n                toast.error(\n                  err.response.data.message ||\n                    'Impossible de rejoindre le tournoi.'\n                );\n              } else {\n                toast.error('Erreur lors de la jonction au tournoi.');\n              }\n            } finally {\n              this.$store.dispatch('clearInviteToken'); // Nettoyer le token d'invitation après usage\n            }\n          }\n\n          // Redirection après inscription\n          const userRole = user.roleId;\n          if (userRole === roles.ADMIN) {\n            this.$router.replace('/tourneys'); // Admin vers tournois\n          } else {\n            // Utiliser l'inviteToken pour la redirection\n            const tourneyId = inviteToken\n              ? jwtDecode(inviteToken).tourneyId\n              : null;\n            if (tourneyId) {\n              this.$router.replace(`/tourneys/${tourneyId}/join-team`); // (`/tourneys/${tourneyId}`);\n            } else {\n              this.$router.replace('/profile'); // Autres utilisateurs vers page user par défaut\n            }\n          }\n        } catch (err) {\n          console.error(\"Erreur lors de l'inscription:\", err);\n          if (err.response && err.response.data && err.response.data.message) {\n            this.error = err.response.data.message; // Utilise le message d'erreur renvoyé par le serveur\n          } else {\n            this.error =\n              \"Erreur lors de l'inscription. Veuillez vérifier vos informations.\";\n          }\n        } finally {\n          this.isSubmitting = false;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Les styles sont gérés via Tailwind CSS */\n</style>\n","import { render } from \"./RegisterPage.vue?vue&type=template&id=73ffed18&scoped=true\"\nimport script from \"./RegisterPage.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterPage.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterPage.vue?vue&type=style&index=0&id=73ffed18&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73ffed18\"]])\n\nexport default __exports__","<template>\n  <div class=\"flex h-dvh bg-gray-100\">\n    <!-- Partie gauche avec un texte -->\n    <div class=\"w-1/2 flex flex-col justify-center items-center\">\n      <h1 class=\"text-6xl font-extrabold text-green-400 mb-6\">\n        403 Access Denied\n      </h1>\n      <p class=\"text-2xl text-gray-700 text-center px-8\">\n        Sorry, you don’t have the necessary permissions to view this page.\n      </p>\n    </div>\n\n    <!-- Partie droite avec un style similaire -->\n    <div class=\"w-1/2 flex justify-center items-center bg-gray-700\">\n      <p class=\"text-4xl text-white text-center\">\n        Please contact your administrator if you think this is a mistake.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'AccessDeniedPage',\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./AccessDenied.vue?vue&type=template&id=11969d86\"\nimport script from \"./AccessDenied.vue?vue&type=script&lang=js\"\nexport * from \"./AccessDenied.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"flex h-dvh bg-gray-100\">\n    <!-- Partie gauche avec un texte -->\n    <div class=\"w-1/2 flex flex-col justify-center items-center\">\n      <h1 class=\"text-6xl font-extrabold text-green-400 mb-6\">404 Not Found</h1>\n      <p class=\"text-2xl text-gray-700 text-center px-8\">\n        Oops! The page you're looking for doesn't exist.\n      </p>\n    </div>\n\n    <!-- Partie droite avec un style similaire -->\n    <div class=\"w-1/2 flex justify-center items-center bg-gray-700\">\n      <p class=\"text-4xl text-white text-center\">\n        Try returning to the homepage or check the URL.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'NotFoundPage',\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./NotFound.vue?vue&type=template&id=19a73abc\"\nimport script from \"./NotFound.vue?vue&type=script&lang=js\"\nexport * from \"./NotFound.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- src/views/auth/ForgotPassword.vue -->\n<template>\n  <AuthComponentForm\n    mode=\"forgot-password\"\n    :error=\"error\"\n    :isSubmitting=\"isSubmitting\"\n    @submit=\"handleForgotPassword\"\n  />\n</template>\n\n<script>\n  import AuthComponentForm from '@/components/AuthComponentForm.vue';\n  import apiService from '@/services/apiService';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    name: 'ForgotPassword',\n    components: { AuthComponentForm },\n    data() {\n      return {\n        error: '',\n        isSubmitting: false,\n      };\n    },\n    methods: {\n      async handleForgotPassword(formData) {\n        this.error = '';\n        this.isSubmitting = true;\n\n        try {\n          await apiService.post('/auth/forgot-password', {\n            email: formData.email,\n          });\n          toast.success(\n            'Un lien de réinitialisation a été envoyé à votre adresse email.'\n          );\n        } catch (err) {\n          console.error(\n            'Erreur lors de la demande de réinitialisation du mot de passe:',\n            err\n          );\n          this.error =\n            err.response?.data?.message ||\n            'Une erreur est survenue. Veuillez réessayer.';\n        } finally {\n          this.isSubmitting = false;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Les styles sont gérés via Tailwind CSS */\n</style>\n","import { render } from \"./ForgotPassword.vue?vue&type=template&id=8601a102&scoped=true\"\nimport script from \"./ForgotPassword.vue?vue&type=script&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=8601a102&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8601a102\"]])\n\nexport default __exports__","<!-- src/views/auth/ResetPassword.vue -->\n<template>\n  <AuthComponentForm\n    mode=\"reset-password\"\n    :error=\"error\"\n    :isSubmitting=\"isSubmitting\"\n    @submit=\"handleResetPassword\"\n  />\n</template>\n\n<script>\n  import AuthComponentForm from '@/components/AuthComponentForm.vue';\n  import apiService from '@/services/apiService';\n\n  export default {\n    name: 'ResetPassword',\n    components: { AuthComponentForm },\n    data() {\n      return {\n        error: '',\n        isSubmitting: false,\n      };\n    },\n    methods: {\n      async handleResetPassword(formData) {\n        this.error = '';\n        this.isSubmitting = true;\n\n        try {\n          const token = this.$route.params.token; // Token récupéré dans l'URL\n\n          await apiService.post('/auth/reset-password', {\n            token, // Ajout du token ici\n            password: formData.password,\n            confirmPassword: formData.confirmPassword,\n          });\n          this.$router.push({ name: 'LoginPage' });\n        } catch (err) {\n          console.error(\n            'Erreur lors de la réinitialisation du mot de passe:',\n            err\n          );\n          this.error =\n            err.response?.data?.message ||\n            'Une erreur est survenue. Veuillez réessayer.';\n        } finally {\n          this.isSubmitting = false;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Les styles sont gérés via Tailwind CSS */\n</style>\n","import { render } from \"./ResetPassword.vue?vue&type=template&id=0c3a4579&scoped=true\"\nimport script from \"./ResetPassword.vue?vue&type=script&lang=js\"\nexport * from \"./ResetPassword.vue?vue&type=script&lang=js\"\n\nimport \"./ResetPassword.vue?vue&type=style&index=0&id=0c3a4579&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0c3a4579\"]])\n\nexport default __exports__","// router/authRoutes.js\nimport LoginPage from '@/views/auth/LoginPage.vue';\nimport RegisterPage from '@/views/auth/RegisterPage.vue';\nimport AccessDenied from '@/views/shared/AccessDenied.vue';\nimport NotFoundPage from '@/views/shared/NotFound.vue';\nimport ForgotPassword from '@/views/auth/ForgotPassword.vue';\nimport ResetPassword from '@/views/auth/ResetPassword.vue';\n\n\nexport default [\n  {\n    path: '/:pathMatch(.*)*',\n    redirect: '/404',\n  },\n  {\n    path: '/access-denied',\n    name: 'AccessDenied',\n    component: AccessDenied,\n  },\n  {\n    path: '/404',\n    name: 'NotFoundPage',\n    component: NotFoundPage,\n  },\n  {\n    path: '/',\n    redirect: '/login',\n  },\n  {\n    path: '/login',\n    name: 'LoginPage',\n    component: LoginPage,\n    meta: { requiresAuth: false },\n  },\n  {\n    path: '/register',\n    name: 'RegisterPage',\n    component: RegisterPage,\n    meta: { requiresAuth: false },\n  },\n  {\n    path: '/forgot-password',\n    name: 'ForgotPassword',\n    component: ForgotPassword,\n    meta: { requiresAuth: false },\n  },\n\n  {\n    path: '/reset-password/:token',\n    name: 'ResetPassword',\n    component: ResetPassword,\n    meta: { requiresAuth: false },\n  },\n];\n","<template>\n  <div>\n    <h1>Bienvenue Admin</h1>\n    <p>Gestion des tournois et des utilisateurs.</p>\n    <!-- Ajoute des liens vers les fonctionnalités d'administration -->\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'AdminPage',\n  };\n</script>\n\n<style scoped>\n  /* Style personnalisé pour la page Admin */\n</style>\n","import { render } from \"./AdminDashboard.vue?vue&type=template&id=19a8e682&scoped=true\"\nimport script from \"./AdminDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./AdminDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./AdminDashboard.vue?vue&type=style&index=0&id=19a8e682&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19a8e682\"]])\n\nexport default __exports__","<!-- TourneysList.vue -->\n<template>\n  <div class=\"p-6\">\n    <div\n      class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8\"\n    >\n      <!-- Titre -->\n      <TitleComponent title=\"Gestion des Tournois\" />\n\n      <!-- Filtres avec icônes pour mobile -->\n      <div class=\"flex flex-wrap items-center gap-4 sm:gap-8 mt-4 sm:mt-0\">\n        <FilterComponent\n          :filters=\"filters\"\n          @filter-change=\"handleFilterChange\"\n        />\n      </div>\n    </div>\n\n    <!-- Grille des tournois -->\n    <div\n      class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\"\n    >\n      <!-- Carte pour ajouter un nouveau tournoi -->\n      <CardAddComponent\n        title=\"Tournoi\"\n        @openAddElementModal=\"openAddTourneyModal\"\n      />\n\n      <!-- Cartes des tournois existants -->\n      <CardEditComponent\n        v-for=\"tourney in filteredTourneys\"\n        :key=\"tourney.id\"\n        :title=\"tourney.name\"\n        :location=\"tourney.location\"\n        :date=\"tourney.dateTourney\"\n        :status=\"tourney.status\"\n        :showDeleteButton=\"true\"\n        :showEditButton=\"true\"\n        @click=\"viewTourneyDetails(tourney.id)\"\n        @delete=\"confirmDeleteTourney(tourney.id)\"\n        @edit=\"editTourney(tourney)\"\n      />\n    </div>\n\n    <!-- Modale pour ajouter/modifier un tournoi -->\n    <ModalComponent\n      :isVisible=\"showModal\"\n      :title=\"\n        editingTourneyId ? 'Modifier le Tournoi' : 'Ajouter un Nouveau Tournoi'\n      \"\n      @close=\"closeModal\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"newTourney\"\n          :fields=\"formFields\"\n          :isEditing=\"!!editingTourneyId\"\n          :minDate=\"'1900-01-01'\"\n          :maxDate=\"'2200-01-01'\"\n          @form-submit=\"handleFormSubmit\"\n          @form-cancel=\"closeModal\"\n          :customValidation=\"validateForm\"\n        />\n      </template>\n    </ModalComponent>\n\n    <!-- Confirmation de suppression -->\n    <DeleteConfirmationModal\n      :isVisible=\"showDeleteConfirmation\"\n      @form-cancel=\"closeDeleteConfirmation\"\n      @confirm=\"deleteTourney(confirmedDeleteTourneyId)\"\n    />\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import CardAddComponent from '@/components/CardAddComponent.vue';\n  import CardEditComponent from '@/components/CardEditComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import FilterComponent from '@/components/FilterComponent.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ModalComponent,\n      DeleteConfirmationModal,\n      CardAddComponent,\n      CardEditComponent,\n      FormComponent,\n      FilterComponent,\n      TitleComponent,\n    },\n    data() {\n      return {\n        tourneys: [],\n        showModal: false,\n        showDeleteConfirmation: false,\n        confirmedDeleteTourneyId: null,\n        newTourney: {\n          name: '',\n          location: { address: '', latitude: null, longitude: null },\n          dateTourney: '',\n          domain: '',\n          emergencyDetails: '',\n          status: 'draft',\n        },\n        editingTourneyId: null,\n        isFormValid: false,\n        isSaving: false,\n        filterStatus: '',\n        filterDate: '',\n        filters: [\n          {\n            label: 'Filtrer par statut',\n            value: this.filterStatus || '',\n            placeholder: 'Tous les status',\n            options: [\n              { label: 'Tous les statuts', value: '' },\n              { label: 'Brouillon', value: 'draft' },\n              { label: 'Prêt', value: 'ready' },\n              { label: 'En cours', value: 'active' },\n              { label: 'Terminé', value: 'completed' },\n            ],\n          },\n          {\n            label: 'Filtrer par date',\n            value: this.filterDate || '',\n            options: [\n              { label: 'Toutes les dates', value: '' },\n              { label: 'À venir', value: 'upcoming' },\n              { label: 'Passés', value: 'past' },\n            ],\n          },\n        ],\n        formErrors: {}, // Ajouter cette ligne\n      };\n    },\n    computed: {\n      filteredTourneys() {\n        return this.tourneys.filter((tourney) => {\n          const statusMatches = this.filterStatus\n            ? tourney.status === this.filterStatus\n            : true;\n          const dateMatches =\n            this.filterDate === 'upcoming'\n              ? new Date(tourney.dateTourney) >= new Date()\n              : this.filterDate === 'past'\n              ? new Date(tourney.dateTourney) < new Date()\n              : true;\n          return statusMatches && dateMatches;\n        });\n      },\n      formFields() {\n        return [\n          {\n            name: 'name',\n            label: 'Nom du tournoi',\n            type: 'text',\n            required: true,\n          },\n          {\n            name: 'location',\n            label: 'Lieu',\n            type: 'location', // Type personnalisé pour utiliser AutocompleteAddress\n            required: true,\n            tooltip: 'Entrez l’adresse précise du tournoi.',\n          },\n          {\n            name: 'dateTourney',\n            label: 'Date du Tournoi',\n            type: 'date',\n            required: true,\n          },\n          {\n            name: 'domain',\n            label: 'Domaine',\n            type: 'text',\n            required: false,\n          },\n          {\n            name: 'emergencyDetails',\n            label: \"Détails d'urgence\",\n            type: 'textarea',\n            required: false,\n          },\n          {\n            name: 'status',\n            label: 'Statut',\n            type: 'select',\n            options: [\n              { value: 'draft', label: 'Brouillon' },\n              { value: 'ready', label: 'Prêt' },\n              { value: 'active', label: 'En cours' },\n              { value: 'completed', label: 'Terminé' },\n            ],\n            required: true,\n          },\n        ];\n      },\n    },\n    methods: {\n      async fetchTourneys() {\n        try {\n          const response = await apiService.get('/tourneys');\n          this.tourneys = response.data;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des tournois:', error);\n          toast.error('Erreur lors de la récupération des tournois!');\n        }\n      },\n      handleFilterChange(filter) {\n        // Mettre à jour les filtres sélectionnés\n        if (filter.label === 'Filtrer par statut') {\n          this.filterStatus = filter.value;\n        } else if (filter.label === 'Filtrer par date') {\n          this.filterDate = filter.value;\n        }\n      },\n      openAddTourneyModal() {\n        this.editingTourneyId = null;\n        this.newTourney = {\n          name: '',\n          location: { address: '', latitude: null, longitude: null }, // Réinitialiser comme objet\n          dateTourney: '',\n          domain: '',\n          emergencyDetails: '',\n          status: 'draft',\n          latitude: null,\n          longitude: null,\n        };\n        this.isFormValid = false;\n        this.formErrors = {}; // Réinitialiser les erreurs\n        this.showModal = true;\n      },\n      editTourney(tourney) {\n        this.editingTourneyId = tourney.id;\n        this.newTourney = {\n          ...tourney,\n          location: {\n            address: tourney.location,\n            latitude: tourney.latitude,\n            longitude: tourney.longitude,\n          },\n        };\n        this.isFormValid = false;\n        this.formErrors = {}; // Réinitialiser les erreurs\n        this.showModal = true;\n      },\n      async handleFormSubmit(formData) {\n        this.isSaving = true;\n        try {\n          // Préparer le payload en séparant location, latitude, longitude\n          const payload = {\n            ...formData,\n            location: formData.location.address,\n            latitude: formData.location.latitude,\n            longitude: formData.location.longitude,\n          };\n\n          if (this.editingTourneyId) {\n            await apiService.put(`/tourneys/${this.editingTourneyId}`, payload);\n            toast.success('Tournoi modifié avec succès!');\n          } else {\n            await apiService.post('/tourneys', payload);\n            toast.success('Nouveau tournoi ajouté avec succès!');\n          }\n          this.closeModal();\n          this.fetchTourneys();\n        } catch (error) {\n          console.error(\"Erreur lors de l'enregistrement du tournoi:\", error);\n          toast.error(\"Erreur lors de l'enregistrement du tournoi!\");\n        } finally {\n          this.isSaving = false;\n        }\n      },\n\n      validateForm() {\n        const { name, location, dateTourney } = this.newTourney;\n        const trimmedName = name.trim();\n\n        const errors = {};\n\n        // Valider le nom\n        if (!trimmedName) {\n          errors.name = 'Le nom du tournoi est obligatoire.';\n        } else {\n          const nameExists = this.tourneys.some(\n            (tourney) =>\n              tourney.name.trim().toLowerCase() === trimmedName.toLowerCase() &&\n              tourney.id !== this.editingTourneyId\n          );\n          if (nameExists) {\n            errors.name = 'Un tournoi avec ce nom existe déjà.';\n          }\n        }\n\n        // Valider le lieu\n        if (!location || !location.address) {\n          errors.location = 'Le lieu du tournoi est obligatoire.';\n        } else {\n          // Vérifier si latitude et longitude sont présentes\n          if (location.latitude === null || location.longitude === null) {\n            errors.location = 'Veuillez sélectionner une adresse valide.';\n          }\n        }\n\n        // Valider la date\n        if (!dateTourney) {\n          errors.dateTourney = 'La date du tournoi est obligatoire.';\n        }\n\n        // Mettre à jour les erreurs du formulaire\n        this.formErrors = errors;\n\n        // Mettre à jour la validité du formulaire\n        this.isFormValid = Object.keys(errors).length === 0;\n        return errors;\n      },\n      confirmDeleteTourney(id) {\n        this.confirmedDeleteTourneyId = id;\n        this.showDeleteConfirmation = true;\n      },\n      async deleteTourney(id) {\n        try {\n          await apiService.delete(`/tourneys/${id}`);\n          toast.success('Tournoi supprimé avec succès!');\n          this.closeDeleteConfirmation();\n          this.fetchTourneys();\n        } catch (error) {\n          toast.error('Erreur lors de la suppression du tournoi!');\n        }\n      },\n      viewTourneyDetails(tourneyId) {\n        this.$router.push(`/admin/tourneys/${tourneyId}`);\n      },\n      closeModal() {\n        this.showModal = false;\n        this.isSaving = false;\n      },\n      closeDeleteConfirmation() {\n        this.showDeleteConfirmation = false;\n        this.confirmedDeleteTourneyId = null;\n      },\n    },\n    watch: {\n      newTourney: {\n        handler() {\n          this.validateForm();\n        },\n        deep: true,\n      },\n    },\n    mounted() {\n      this.fetchTourneys();\n    },\n  };\n</script>\n\n<style scoped></style>\n","<!-- ModalComponent.vue -->\n\n<template>\n  <div\n    v-if=\"isVisible\"\n    class=\"fixed inset-0 bg-light-modal-background dark:bg-dark-modal-background flex items-center justify-center z-50\"\n  >\n    <div\n      class=\"bg-light-modal-content dark:bg-dark-modal-content p-8 rounded-lg w-full max-w-md max-h-screen overflow-y-auto\"\n    >\n      <slot name=\"header\">\n        <h2\n          class=\"text-2xl font-bold mb-4 text-light-title dark:text-dark-title\"\n        >\n          {{ title }}\n        </h2>\n      </slot>\n      <slot name=\"content\"></slot>\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {\n      isVisible: {\n        type: Boolean,\n        required: true,\n      },\n      title: {\n        type: String,\n        default: '',\n      },\n    },\n    watch: {\n      isVisible(newVal) {\n        if (newVal) {\n          // Modal ouverte\n          window.dispatchEvent(new Event('modal-open'));\n        } else {\n          // Modal fermée\n          window.dispatchEvent(new Event('modal-close'));\n        }\n      },\n    },\n    methods: {\n      close() {\n        this.$emit('close'); // Émet un événement pour indiquer au parent de cacher la modal\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  body.modal-open {\n    overflow: hidden;\n  }\n</style>\n","import { render } from \"./ModalComponent.vue?vue&type=template&id=134d36a0&scoped=true\"\nimport script from \"./ModalComponent.vue?vue&type=script&lang=js\"\nexport * from \"./ModalComponent.vue?vue&type=script&lang=js\"\n\nimport \"./ModalComponent.vue?vue&type=style&index=0&id=134d36a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-134d36a0\"]])\n\nexport default __exports__","<!-- DeleteConfirmationModal(Component).vue -->\n\n<template>\n  <div\n    v-if=\"isVisible\"\n    ref=\"modalContainer\"\n    class=\"fixed inset-0 bg-light-modal-background z-50 dark:bg-dark-modal-background flex items-center justify-center\"\n    tabindex=\"0\"\n    aria-modal=\"true\"\n    aria-labelledby=\"modal-title\"\n    @keydown.enter=\"handleConfirm\"\n  >\n    <div\n      class=\"bg-light-modal-content dark:bg-dark-modal-content p-8 rounded-lg w-full max-w-md\"\n    >\n      <h2 class=\"text-2xl font-bold mb-4 text-light-title dark:text-dark-title\">\n        {{ title }}\n      </h2>\n      <p class=\"mb-6 text-light-form-text dark:text-dark-form-text\">\n        {{ message }}\n      </p>\n      <p\n        v-if=\"isHardDelete && hardDeleteMessage\"\n        class=\"mb-4 text-light-form-error dark:text-dark-form-error\"\n      >\n        {{ hardDeleteMessage }}\n      </p>\n\n      <!-- Utilisation du FormComponent -->\n      <FormComponent\n        v-if=\"isHardDelete\"\n        v-model=\"formData\"\n        :fields=\"formFields\"\n        :isEditing=\"false\"\n        @form-submit=\"handleConfirm\"\n        @form-cancel=\"handleCancel\"\n      >\n        <!-- Personnalisation des boutons via un slot nommé -->\n        <template #buttons>\n          <div class=\"flex justify-end space-x-4\">\n            <ButtonComponent\n              variant=\"secondary\"\n              nativeType=\"button\"\n              @click=\"handleCancel\"\n            >\n              Annuler\n            </ButtonComponent>\n            <ButtonComponent\n              :variant=\"\n                formData.confirmationText === 'CONFIRM' ? 'danger' : 'gray'\n              \"\n              nativeType=\"submit\"\n              :disabled=\"formData.confirmationText !== 'CONFIRM'\"\n            >\n              {{ textButton }}\n            </ButtonComponent>\n          </div>\n        </template>\n      </FormComponent>\n\n      <!-- Si ce n'est pas un hard-delete, afficher les boutons directement -->\n      <div v-else class=\"flex justify-end space-x-4\">\n        <ButtonComponent variant=\"secondary\" @click=\"handleCancel\">\n          Annuler\n        </ButtonComponent>\n        <ButtonComponent variant=\"danger\" @click=\"handleConfirm\">\n          {{ textButton }}\n        </ButtonComponent>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { ref, watch, nextTick } from 'vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n\n  export default {\n    components: {\n      ButtonComponent,\n      FormComponent,\n    },\n    props: {\n      isVisible: {\n        type: Boolean,\n        required: true,\n      },\n      title: {\n        type: String,\n        default: 'Confirmation de suppression',\n      },\n      message: {\n        type: String,\n        default: 'Êtes-vous sûr de vouloir supprimer cet élément ?',\n      },\n      isHardDelete: {\n        type: Boolean,\n        default: false,\n      },\n      hardDeleteMessage: {\n        type: String,\n        default:\n          'Cette action est irréversible et entraîne des suppressions en cascade. Risque de pertes de données annexes.',\n      },\n      textButton: {\n        type: String,\n        default: 'Supprimer',\n      },\n    },\n    setup(props, { emit }) {\n      const modalContainer = ref(null);\n\n      const formData = ref({\n        confirmationText: '',\n      });\n\n      const formFields = [\n        {\n          name: 'confirmationText',\n          label: 'Tapez \"CONFIRM\" pour confirmer',\n          type: 'text',\n          required: true,\n        },\n      ];\n\n      const handleCancel = () => {\n        emit('form-cancel');\n      };\n\n      const handleConfirm = () => {\n        if (\n          !props.isHardDelete ||\n          formData.value.confirmationText === 'CONFIRM'\n        ) {\n          emit('confirm');\n          // Réinitialiser le champ après confirmation\n          formData.value.confirmationText = '';\n        }\n      };\n\n      watch(\n        () => props.isVisible,\n        (newVal) => {\n          if (newVal) {\n            nextTick(() => {\n              if (modalContainer.value) {\n                modalContainer.value.focus();\n              }\n            });\n          } else {\n            formData.value.confirmationText = '';\n          }\n        }\n      );\n\n      return {\n        modalContainer,\n        formData,\n        formFields,\n        handleCancel,\n        handleConfirm,\n      };\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles gérés par Tailwind CSS */\n</style>\n","<!-- FormComponent.vue \nEvent emis:\nupdate:modelValue: Pour la liaison bidirectionnelle des données (v-model)\nupdate-validation: Pour informer le parent de la validité du formulaire.\nform-submit: Lorsque le formulaire est soumis avec succès.\nfile-selected: Lorsqu'un fichier est sélectionné.\n-->\n\n<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <div :class=\"gridClass\">\n      <div v-for=\"field in fields\" :key=\"field.name\" class=\"mb-4\">\n        <component :is=\"$slots[field.name] ? 'slot' : 'div'\" :name=\"field.name\">\n          <template v-if=\"!$slots[field.name]\">\n            <label\n              :for=\"field.name\"\n              class=\"block text-light-form-text dark:text-dark-form-text font-semibold mb-2 flex items-center\"\n            >\n              {{ field.label }}\n              <span\n                v-if=\"field.required\"\n                class=\"text-light-form-error dark:text-dark-form-error\"\n                >*</span\n              >\n              <button\n                v-if=\"field.tooltip\"\n                type=\"button\"\n                @click=\"toggleTooltip(field.name)\"\n                class=\"ml-2 relative focus:outline-none\"\n              >\n                <font-awesome-icon\n                  icon=\"question-circle\"\n                  class=\"text-light-form-iconQuestion dark:text-dark-form-iconQuestion cursor-pointer\"\n                />\n                <div\n                  v-if=\"visibleTooltip === field.name\"\n                  class=\"absolute bottom-full mb-2 w-64 bg-gray-700 dark:bg-gray-600 text-white text-base rounded py-1 px-2 z-10 text-left\"\n                  style=\"left: 50%; transform: translateX(-50%)\"\n                >\n                  {{ field.tooltip }}\n                </div>\n              </button>\n            </label>\n\n            <!-- Utilisation du composant AutocompleteAddress pour le champ 'location' -->\n            <AutocompleteAddress\n              v-if=\"field.name === 'location'\"\n              v-model=\"formData.location\"\n              :disabled=\"!isEditable\"\n              :placeholder=\"field.placeholder\"\n              @input=\"validateField(field)\"\n            />\n\n            <!-- Champs de formulaire génériques -->\n            <input\n              v-if=\"\n                field.type !== 'textarea' &&\n                field.type !== 'select' &&\n                field.type !== 'file' &&\n                field.type !== 'radio' &&\n                field.type !== 'color' &&\n                field.name !== 'location'\n              \"\n              :type=\"field.type\"\n              :id=\"field.name\"\n              :disabled=\"!isEditable\"\n              v-model=\"formData[field.name]\"\n              :class=\"[\n                'w-full p-2 rounded-md border',\n                'bg-light-form-background dark:bg-dark-form-background',\n                'text-light-form-text dark:text-dark-form-text',\n                errors[field.name]\n                  ? 'border-light-form-error dark:border-dark-form-error'\n                  : 'border-light-form-border-default dark:border-dark-form-border-default',\n              ]\"\n              @input=\"validateField(field)\"\n              :placeholder=\"field.placeholder\"\n            />\n\n            <textarea\n              v-if=\"field.type === 'textarea'\"\n              :id=\"field.name\"\n              :disabled=\"!isEditable\"\n              v-model=\"formData[field.name]\"\n              :class=\"[\n                'w-full p-2 rounded-md border',\n                'bg-light-form-background dark:bg-dark-form-background',\n                'text-light-form-text dark:text-dark-form-text',\n                errors[field.name]\n                  ? 'border-light-form-error dark:border-dark-form-error'\n                  : 'border-light-form-border-default dark:border-dark-form-border-default',\n              ]\"\n              @input=\"validateField(field)\"\n            ></textarea>\n\n            <select\n              v-if=\"field.type === 'select'\"\n              :id=\"field.name\"\n              :disabled=\"!isEditable\"\n              v-model=\"formData[field.name]\"\n              class=\"w-full p-2 rounded-md bg-light-form-background dark:bg-dark-form-background border border-light-form-border-default dark:border-dark-form-border-default text-light-form-text dark:text-dark-form-text\"\n              @change=\"validateField(field)\"\n            >\n              <option\n                v-for=\"option in field.options\"\n                :key=\"option.value\"\n                :value=\"option.value\"\n              >\n                {{ option.label }}\n              </option>\n            </select>\n\n            <!-- Champ de type 'file' -->\n            <input\n              v-if=\"field.type === 'file'\"\n              type=\"file\"\n              :id=\"field.name\"\n              :disabled=\"!isEditable\"\n              @change=\"handleFileChange\"\n              @click.stop\n              accept=\"image/*\"\n              class=\"w-full p-2 rounded-md bg-light-form-background dark:bg-dark-form-background border border-light-form-border-default dark:border-dark-form-border-default text-light-form-text dark:text-dark-form-text\"\n            />\n\n            <div v-if=\"field.type === 'color'\" class=\"flex items-center\">\n              <input\n                type=\"color\"\n                :disabled=\"!isEditable\"\n                :id=\"field.name\"\n                v-model=\"formData[field.name]\"\n                class=\"w-16 h-16 p-0 border-none rounded-md\"\n                @input=\"validateField(field)\"\n              />\n              <div\n                class=\"w-8 h-8 ml-4 border border-light-form-border-default dark:border-dark-form-border-default rounded-md\"\n                :style=\"{ backgroundColor: formData[field.name] }\"\n              ></div>\n            </div>\n\n            <p\n              v-if=\"errors[field.name]\"\n              class=\"text-light-form-error dark:text-dark-form-error text-sm mt-1\"\n            >\n              {{ errors[field.name] }}\n            </p>\n          </template>\n        </component>\n      </div>\n    </div>\n    <!-- Slot pour les boutons -->\n    <slot name=\"buttons\">\n      <!-- Boutons par défaut -->\n      <div class=\"flex justify-between mt-4\">\n        <ButtonComponent\n          variant=\"secondary\"\n          nativeType=\"button\"\n          @click=\"handleCancel\"\n        >\n          Annuler\n        </ButtonComponent>\n        <ButtonComponent\n          v-if=\"isEditable\"\n          :variant=\"isFormValid ? 'primary' : 'disabled'\"\n          nativeType=\"submit\"\n          :disabled=\"!isFormValid\"\n        >\n          {{ isEditing ? 'Modifier' : 'Ajouter' }}\n        </ButtonComponent>\n      </div>\n    </slot>\n  </form>\n</template>\n\n<script>\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import AutocompleteAddress from '@/components/AutocompleteAddress.vue';\n\n  export default {\n    components: {\n      ButtonComponent,\n      AutocompleteAddress,\n    },\n    props: {\n      fields: {\n        type: Array,\n        required: true,\n      },\n      // Objet contenant les données du formulaire\n      modelValue: {\n        type: Object,\n        required: true,\n      },\n      isEditing: {\n        type: Boolean,\n        default: false,\n      },\n      minDate: {\n        type: String,\n        required: false,\n      },\n      maxDate: {\n        type: String,\n        required: false,\n      },\n      // Permet au parent de fournir une fonction de validation supplémentaire.\n      // fonction est appelée dans handleSubmit avant de soumettre le formulaire\n      customValidation: {\n        type: Function,\n        required: false,\n        default: null,\n      },\n      isEditable: {\n        type: Boolean,\n        default: true,\n      },\n      columns: {\n        type: Number,\n        default: 1,\n      },\n    },\n    data() {\n      return {\n        errors: {},\n        visibleTooltip: null,\n      };\n    },\n    computed: {\n      formData: {\n        get() {\n          return this.modelValue;\n        },\n        set(value) {\n          this.$emit('update:modelValue', value);\n        },\n      },\n      gridClass() {\n        return `grid grid-cols-1 sm:grid-cols-${this.columns} gap-4`;\n      },\n      isFormValid() {\n        return (\n          Object.keys(this.errors).length === 0 &&\n          this.fields.every(\n            (field) =>\n              !field.required ||\n              (this.formData[field.name] !== null &&\n                this.formData[field.name] !== undefined &&\n                this.formData[field.name] !== '')\n          )\n        );\n      },\n    },\n    watch: {\n      isFormValid(newVal) {\n        this.$emit('update-validation', newVal);\n      },\n    },\n    methods: {\n      validateField(field) {\n        if (field.name === 'location' && field.required) {\n          if (\n            !this.formData.location ||\n            !this.formData.location.address ||\n            !this.formData.location.latitude ||\n            !this.formData.location.longitude\n          ) {\n            this.errors.location = 'Veuillez sélectionner une adresse valide.';\n          } else {\n            delete this.errors.location;\n          }\n        }\n        if (\n          field.required &&\n          (this.formData[field.name] === null ||\n            this.formData[field.name] === undefined ||\n            this.formData[field.name] === '')\n        ) {\n          this.errors[field.name] = 'Ce champ est obligatoire';\n        } else if (field.type === 'date') {\n          const dateValue = new Date(this.formData[field.name]);\n          const minDate = this.minDate ? new Date(this.minDate) : null;\n          const maxDate = this.maxDate ? new Date(this.maxDate) : null;\n\n          if (minDate && dateValue < minDate) {\n            this.errors[\n              field.name\n            ] = `La date doit être après le ${this.minDate}`;\n          } else if (maxDate && dateValue > maxDate) {\n            this.errors[\n              field.name\n            ] = `La date doit être avant le ${this.maxDate}`;\n          } else {\n            delete this.errors[field.name];\n          }\n        } else {\n          delete this.errors[field.name];\n        }\n\n        // Emit validation update\n        this.$emit('update-validation', this.isFormValid);\n      },\n      toggleTooltip(fieldName) {\n        this.visibleTooltip =\n          this.visibleTooltip === fieldName ? null : fieldName;\n      },\n      handleFileChange(event) {\n        const file = event.target.files[0] || null;\n        if (file) {\n          const maxSize = 10 * 1024 * 1024; // 10MB\n          if (file.size > maxSize) {\n            this.errors.image =\n              \"La taille de l'image ne doit pas dépasser 10MB\";\n            return;\n          } else {\n            delete this.errors.image;\n            this.formData.image = file; // Mettre à jour le modèle de données\n            this.$emit('file-selected', file); // Émettre l'événement\n          }\n        } else {\n          // User canceled the file selection\n          this.formData.image = null; // Reset the image in form data\n          // Optionally, emit the file-selected event with null\n          this.$emit('file-selected', null);\n        }\n        // Bloquer toute action supplémentaire\n        event.stopPropagation();\n      },\n\n      handleSubmit() {\n        if (!this.isEditable) return; // Empêcher la soumission si non éditable\n\n        // Réinitialiser les erreurs\n        this.errors = {};\n\n        // Valider les champs requis\n        this.fields.forEach((field) => {\n          this.validateField(field);\n        });\n\n        // Appeler la validation personnalisée si définie\n        if (this.customValidation) {\n          const customErrors = this.customValidation() || {};\n\n          // Fusionner les erreurs personnalisées avec les erreurs existantes\n          this.errors = { ...this.errors, ...customErrors };\n        }\n\n        // Continuer si le formulaire est valide\n        if (this.isFormValid) {\n          this.$emit('form-submit', this.formData);\n        }\n      },\n\n      handleCancel() {\n        this.$emit('form-cancel');\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles gérés par Tailwind CSS */\n</style>\n","<!-- AutocompleteAddress.vue -->\n<!-- https://nominatim.openstreetmap.org/ui/search.html -->\n<template>\n  <div>\n    <input\n      v-model=\"inputValue\"\n      @input=\"onInput\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      class=\"w-full p-2 rounded-md border bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text border-light-form-border-default dark:border-dark-form-border-default\"\n    />\n    <ul\n      v-if=\"suggestions.length > 0\"\n      class=\"border border-light-form-border-default dark:border-dark-form-border-default bg-light-card dark:bg-dark-card rounded-md mt-2 max-h-40 overflow-auto\"\n    >\n      <li\n        v-for=\"(suggestion, index) in suggestions\"\n        :key=\"index\"\n        @click=\"selectSuggestion(suggestion)\"\n        class=\"p-2 cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-700\"\n      >\n        {{ suggestion.display_name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'AutocompleteAddress',\n    props: {\n      modelValue: {\n        type: Object, // { address: '', latitude: null, longitude: null }\n        default: () => ({ address: '', latitude: null, longitude: null }),\n      },\n      placeholder: {\n        type: String,\n        default: 'Entrez une adresse',\n      },\n      disabled: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data() {\n      return {\n        inputValue: this.modelValue.address || '',\n        suggestions: [],\n        query: '',\n        timeout: null,\n      };\n    },\n    watch: {\n      modelValue: {\n        handler(newVal) {\n          if (newVal.address !== this.inputValue) {\n            this.inputValue = newVal.address || '';\n          }\n        },\n        deep: true,\n      },\n    },\n    methods: {\n      onInput(event) {\n        const value = event.target.value;\n        this.inputValue = value;\n        this.query = value;\n\n        if (this.timeout) clearTimeout(this.timeout);\n\n        if (value.length > 2) {\n          this.timeout = setTimeout(() => {\n            this.fetchSuggestions();\n          }, 300);\n        } else {\n          this.suggestions = [];\n        }\n\n        // Émettre un objet avec l'adresse et des coordonnées nulles\n        this.$emit('update:modelValue', {\n          address: value,\n          latitude: null,\n          longitude: null,\n        });\n      },\n      async fetchSuggestions() {\n        try {\n          const response = await fetch(\n            `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\n              this.query\n            )}&addressdetails=1&limit=5`,\n            {\n              headers: {\n                'User-Agent': 'EasyTourney/1.0 (julienrichoz@outlook.com)',\n              },\n            }\n          );\n          const data = await response.json();\n          this.suggestions = data;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des suggestions:',\n            error\n          );\n        }\n      },\n      selectSuggestion(suggestion) {\n        const selected = {\n          address: suggestion.display_name,\n          latitude: parseFloat(suggestion.lat),\n          longitude: parseFloat(suggestion.lon),\n        };\n        this.inputValue = selected.address;\n        this.$emit('update:modelValue', selected); // Émettre l'objet complet\n        this.suggestions = [];\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles personnalisés si nécessaire */\n</style>\n","import { render } from \"./AutocompleteAddress.vue?vue&type=template&id=7d057fdd&scoped=true\"\nimport script from \"./AutocompleteAddress.vue?vue&type=script&lang=js\"\nexport * from \"./AutocompleteAddress.vue?vue&type=script&lang=js\"\n\nimport \"./AutocompleteAddress.vue?vue&type=style&index=0&id=7d057fdd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d057fdd\"]])\n\nexport default __exports__","import { render } from \"./FormComponent.vue?vue&type=template&id=69f566fe&scoped=true\"\nimport script from \"./FormComponent.vue?vue&type=script&lang=js\"\nexport * from \"./FormComponent.vue?vue&type=script&lang=js\"\n\nimport \"./FormComponent.vue?vue&type=style&index=0&id=69f566fe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-69f566fe\"]])\n\nexport default __exports__","import { render } from \"./DeleteConfirmationModal.vue?vue&type=template&id=62a69ed2&scoped=true\"\nimport script from \"./DeleteConfirmationModal.vue?vue&type=script&lang=js\"\nexport * from \"./DeleteConfirmationModal.vue?vue&type=script&lang=js\"\n\nimport \"./DeleteConfirmationModal.vue?vue&type=style&index=0&id=62a69ed2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-62a69ed2\"]])\n\nexport default __exports__","<!-- src/components/CardAddComponent.vue -->\n<template>\n  <div\n    @click=\"openAddElementModal\"\n    class=\"cursor-pointer bg-light-card dark:bg-dark-card p-4 rounded-lg shadow-md flex flex-col items-center justify-center hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground transition-transform transform hover:scale-105 min-h-[150px]\"\n  >\n    <PlusIcon\n      class=\"w-12 h-12 text-light-profileText dark:text-dark-profileText\"\n    />\n    <h2\n      class=\"text-md font-semibold mt-2 text-light-title dark:text-dark-title\"\n    >\n      Ajouter {{ title }}\n    </h2>\n  </div>\n</template>\n\n<script>\n  import { PlusIcon } from '@heroicons/vue/24/outline';\n\n  export default {\n    components: {\n      PlusIcon,\n    },\n    props: {\n      title: {\n        type: String,\n        required: true,\n      },\n    },\n    methods: {\n      openAddElementModal() {\n        this.$emit('openAddElementModal');\n      },\n    },\n  };\n</script>\n","import { render } from \"./CardAddComponent.vue?vue&type=template&id=1c555fb5\"\nimport script from \"./CardAddComponent.vue?vue&type=script&lang=js\"\nexport * from \"./CardAddComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- src/components/CardEditComponent.vue -->\n<template>\n  <div\n    class=\"cursor-pointer bg-light-card dark:bg-dark-card p-4 rounded-lg shadow-md hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground transition-transform transform hover:scale-105 flex flex-col justify-between h-auto min-h-[200px]\"\n    @click=\"$emit('click')\"\n  >\n    <!-- Affiche le compteur en haut à droite s'il est fourni -->\n    <div\n      v-if=\"cornerCount\"\n      class=\"absolute top-2 right-2 text-xs font-semibold text-gray-500\"\n    >\n      {{ cornerCount }}\n    </div>\n    <img\n      v-if=\"image\"\n      :src=\"image\"\n      class=\"w-full h-28 object-cover mb-4 rounded-lg\"\n    />\n\n    <!-- Vignette colorée à côté du titre -->\n    <div class=\"flex items-center mb-4\">\n      <span\n        v-if=\"titleColor\"\n        class=\"w-4 h-4 rounded-full mr-2\"\n        :style=\"{ backgroundColor: titleColor }\"\n      ></span>\n      <h2\n        class=\"text-2xl font-semibold truncate text-light-title dark:text-dark-title text-ellipsis overflow-hidden ...\"\n      >\n        {{ title }}\n      </h2>\n    </div>\n\n    <!-- Afficher le statut en texte -->\n    <div v-if=\"registrationStatus\" class=\"mb-4\">\n      <span\n        class=\"text-base font-medium text-light-form-text dark:text-dark-form-text\"\n      >\n        {{ statusText }}\n      </span>\n    </div>\n\n    <!-- Affichage de la liste des utilisateurs si le slot \"user-list\" est utilisé -->\n    <div v-if=\"$slots['user-list']\">\n      <slot name=\"user-list\"></slot>\n    </div>\n\n    <!-- Afficher la description si fournie -->\n    <div\n      v-if=\"description\"\n      class=\"text-base text-light-form-text dark:text-dark-form-text mb-2 text-ellipsis overflow-hidden ...\"\n    >\n      {{ description }}\n    </div>\n\n    <!-- Afficher les champs supplémentaires si les props sont fournies -->\n    <div class=\"space-y-2\">\n      <div v-if=\"location\" class=\"flex items-center\">\n        <font-awesome-icon\n          icon=\"map-marker-alt\"\n          class=\"mr-2 text-light-form-text dark:text-dark-form-text\"\n        />\n        <span\n          class=\"text-light-form-text dark:text-dark-form-text truncate ...\"\n        >\n          {{ location }}\n        </span>\n      </div>\n      <div v-if=\"date\" class=\"flex items-center\">\n        <font-awesome-icon\n          icon=\"calendar-alt\"\n          class=\"mr-2 text-light-form-text dark:text-dark-form-text\"\n        />\n        <span class=\"text-light-form-text dark:text-dark-form-text\">\n          {{ formattedDate }}\n        </span>\n      </div>\n      <div v-if=\"status\" class=\"flex items-center\">\n        <span\n          :class=\"getStatusClass(status)\"\n          class=\"px-2 py-1 rounded-full text-sm font-semibold\"\n        >\n          {{ getStatusLabel(status) }}\n        </span>\n      </div>\n      <!-- Slot pour contenu supplémentaire -->\n      <slot name=\"additional-content\"></slot>\n    </div>\n\n    <div class=\"flex justify-between mt-4 w-full\">\n      <ButtonComponent\n        v-if=\"showDeleteButton && isEditable\"\n        variant=\"danger\"\n        fontAwesomeIcon=\"trash\"\n        @click.stop=\"onDelete\"\n      />\n      <div class=\"flex justify-center mt-4 w-full\">\n        <slot name=\"button-actions\"></slot>\n      </div>\n      <ButtonComponent\n        v-if=\"showEditButton\"\n        variant=\"warning\"\n        fontAwesomeIcon=\"pen\"\n        @click.stop=\"onEdit\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n\n  export default {\n    components: {\n      ButtonComponent,\n    },\n    props: {\n      title: {\n        type: String,\n        required: true,\n      },\n      description: {\n        type: String,\n        default: '',\n      },\n      image: {\n        type: String,\n        default: '',\n      },\n      titleColor: {\n        type: String,\n        default: '',\n      },\n      showDeleteButton: {\n        type: Boolean,\n        default: false,\n      },\n      showEditButton: {\n        type: Boolean,\n        default: false,\n      },\n      location: {\n        type: String,\n        default: '',\n      },\n      date: {\n        type: [String, Date],\n        default: '',\n      },\n      status: {\n        type: String,\n        default: '',\n      },\n      registrationStatus: {\n        type: String,\n        required: false,\n        default: null,\n      },\n      isEditable: {\n        type: Boolean,\n        default: true,\n      },\n      cornerCount: String,\n    },\n    computed: {\n      formattedDate() {\n        if (this.date) {\n          return new Date(this.date).toLocaleDateString();\n        }\n        return '';\n      },\n      statusText() {\n        if (this.status === 'active') {\n          return 'Tournoi en cours';\n        } else if (this.status === 'completed') {\n          return 'Tournoi terminé';\n        } else {\n          if (this.registrationStatus === 'active') {\n            return 'Inscriptions ouvertes';\n          } else if (this.registrationStatus === 'notStarted') {\n            return 'Inscriptions fermées';\n          } else if (this.registrationStatus === 'completed') {\n            return 'Inscriptions terminées';\n          } else if (this.status === 'ready') {\n            return 'Tournoi prêt';\n          } else if (this.status === 'draft') {\n            return 'Tournoi en édition';\n          } else {\n            return 'Statut inconnu';\n          }\n        }\n      },\n    },\n    methods: {\n      onDelete() {\n        this.$emit('delete');\n      },\n      onEdit() {\n        this.$emit('edit');\n      },\n      getStatusClass(status) {\n        switch (status) {\n          case 'draft':\n            return 'bg-light-form-border-default dark:bg-dark-form-border-default text-light-form-text dark:text-dark-form-text';\n          case 'ready':\n            return 'bg-blue-200 dark:bg-blue-600 text-blue-800 dark:text-blue-200';\n          case 'active':\n            return 'bg-light-buttonVariants-primary-default dark:bg-dark-buttonVariants-primary-default text-white';\n          case 'completed':\n            return 'bg-yellow-200 dark:bg-yellow-600 text-yellow-800 dark:text-yellow-200';\n          default:\n            return 'bg-light-form-border-default dark:bg-dark-form-border-default text-light-form-text dark:text-dark-form-text';\n        }\n      },\n      getStatusLabel(status) {\n        switch (status) {\n          case 'draft':\n            return 'Brouillon';\n          case 'ready':\n            return 'Prêt';\n          case 'active':\n            return 'En cours';\n          case 'completed':\n            return 'Terminé';\n          default:\n            return status;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Les styles sont principalement gérés par Tailwind CSS */\n</style>\n","import { render } from \"./CardEditComponent.vue?vue&type=template&id=3c58d9e2&scoped=true\"\nimport script from \"./CardEditComponent.vue?vue&type=script&lang=js\"\nexport * from \"./CardEditComponent.vue?vue&type=script&lang=js\"\n\nimport \"./CardEditComponent.vue?vue&type=style&index=0&id=3c58d9e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3c58d9e2\"]])\n\nexport default __exports__","<!-- src/components/FilterComponent.vue -->\n<template>\n  <div class=\"flex flex-wrap items-center gap-4\">\n    <div\n      v-for=\"filter in filters\"\n      :key=\"filter.label\"\n      class=\"flex items-center\"\n    >\n      <!-- Icônes pour les filtres sur mobile -->\n      <font-awesome-icon\n        v-if=\"filter.label === 'Filtrer par statut'\"\n        :icon=\"['fas', 'filter']\"\n        class=\"block sm:hidden mr-2\"\n      />\n      <font-awesome-icon\n        v-if=\"filter.label === 'Filtrer par date'\"\n        :icon=\"['fas', 'calendar']\"\n        class=\"block sm:hidden mr-2\"\n      />\n\n      <!-- Label pour les filtres sur écran plus grand -->\n      <span\n        class=\"hidden sm:inline text-light-form-text dark:text-dark-form-text font-semibold mr-2\"\n      >\n        {{ filter.label }}:\n      </span>\n\n      <div class=\"relative inline-block\">\n        <select\n          v-model=\"filter.value\"\n          @change=\"onFilterChange(filter)\"\n          class=\"bg-light-form-background dark:bg-dark-form-background p-2 pr-8 border border-light-form-border-default dark:border-dark-form-border-default rounded-md shadow-sm hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground appearance-none focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-light-form-text dark:text-dark-form-text\"\n        >\n          <option\n            v-for=\"option in filter.options\"\n            :key=\"option.value\"\n            :value=\"option.value\"\n          >\n            {{ option.label }}\n          </option>\n        </select>\n\n        <!-- Petite icône flèche -->\n        <div\n          class=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\"\n        >\n          <svg\n            class=\"w-4 h-4 text-light-form-iconQuestion dark:text-dark-form-iconQuestion mr-2\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M19 9l-7 7-7-7\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {\n      filters: {\n        type: Array,\n        required: true,\n        // Exemple d'un élément de l'array:\n        // {\n        //   label: 'Filtrer par statut',\n        //   value: '', // la valeur actuelle du filtre (dynamique)\n        //   options: [\n        //     { label: 'Tous les statuts', value: '' },\n        //     { label: 'Brouillon', value: 'draft' },\n        //     { label: 'Prêt', value: 'ready' },\n        //     { label: 'En cours', value: 'active' },\n        //     { label: 'Terminé', value: 'completed' },\n        //   ],\n        //   placeholder: 'Choisir un statut'\n        // }\n      },\n    },\n    methods: {\n      onFilterChange(filter) {\n        // Émettre un événement vers le parent avec le filtre mis à jour\n        this.$emit('filter-change', filter);\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  select {\n    transition: all 0.2s ease-in-out;\n  }\n  select:hover {\n    transform: scale(1.02);\n  }\n</style>\n","import { render } from \"./FilterComponent.vue?vue&type=template&id=58f96d40&scoped=true\"\nimport script from \"./FilterComponent.vue?vue&type=script&lang=js\"\nexport * from \"./FilterComponent.vue?vue&type=script&lang=js\"\n\nimport \"./FilterComponent.vue?vue&type=style&index=0&id=58f96d40&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-58f96d40\"]])\n\nexport default __exports__","<!-- TitleComponent.vue -->\n\n<template>\n  <h1 :class=\"titleClass\">{{ title }}</h1>\n</template>\n\n<script>\n  export default {\n    props: {\n      title: {\n        type: String,\n        required: true, // Titre à afficher, obligatoire\n      },\n      titleClass: {\n        type: String,\n        default: 'text-2xl font-bold dark:bg-custom_light_1', // Classe CSS à appliquer au titre\n      },\n    },\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./TitleComponent.vue?vue&type=template&id=3fbf6932\"\nimport script from \"./TitleComponent.vue?vue&type=script&lang=js\"\nexport * from \"./TitleComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TourneysList.vue?vue&type=template&id=1f698e65\"\nimport script from \"./TourneysList.vue?vue&type=script&lang=js\"\nexport * from \"./TourneysList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <TourneySubMenu :tourneyId=\"tourneyId\" @selectTab=\"selectTab\" />\n\n    <!-- Avancement du Tournoi avec le stepper horizontal -->\n    <div\n      class=\"flex items-center gap-y-4 gap-x-2 sm:gap-y-6 sm:gap-x-4 max-w-screen-lg mx-auto px-4 font-sans mt-8 overflow-x-auto flex-nowrap\"\n    >\n      <div v-for=\"(step, index) in statusSteps\" :key=\"index\" class=\"flex-1\">\n        <!-- Barre de progression -->\n        <div\n          :class=\"[\n            'w-full',\n            'rounded',\n            'h-0.5 sm:h-1', // Hauteur réduite sur petits écrans\n            progressBarClass(step.status),\n          ]\"\n        ></div>\n        <!-- Informations sur l'étape -->\n        <div class=\"mt-1 sm:mt-2 mr-2 sm:mr-4 flex items-center\">\n          <!-- Icône de l'étape -->\n          <component\n            :is=\"stepIconComponent(step.status)\"\n            class=\"shrink-0 w-3 h-3 sm:w-4 sm:h-4 md:w-6 md:h-6\"\n          />\n          <div class=\"ml-1 sm:ml-2\">\n            <h6\n              :class=\"[\n                'text-sm sm:text-lg font-bold',\n                stepTextClass(step.status),\n              ]\"\n            >\n              {{ step.label }}\n            </h6>\n            <p :class=\"['text-xs sm:text-base', stepTextClass(step.status)]\">\n              {{ stepStatusText(step.status, step.label) }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Contenu principal avec deux colonnes -->\n    <div class=\"grid grid-cols-1 gap-8 p-8 md:grid-cols-2 md:items-start\">\n      <!-- Détails du tournoi et Statistiques -->\n      <div class=\"bg-light-card dark:bg-dark-card rounded-lg shadow-lg p-8\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h2\n            class=\"text-3xl font-bold text-light-subMenu-activeText dark:text-dark-subMenu-activeText\"\n          >\n            {{ tourney.name }}\n          </h2>\n          <StatusSelectorComponent\n            :tourneyId=\"tourneyId\"\n            statusKey=\"status\"\n            :statusOptions=\"[\n              { value: 'draft', label: 'Brouillon' },\n              { value: 'ready', label: 'Prêt' },\n              { value: 'active', label: 'En cours' },\n              { value: 'completed', label: 'Terminé' },\n            ]\"\n            :modelValue=\"tourney.status\"\n            @update:modelValue=\"(val) => (tourney.status = val)\"\n          />\n        </div>\n        <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-2\">\n          <strong>Lieu :</strong> {{ tourney.location }}\n        </p>\n        <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-2\">\n          <strong>Date :</strong> {{ formatDate(tourney.dateTourney) }}\n        </p>\n\n        <!-- Informations Supplémentaires sur deux colonnes -->\n        <div class=\"mt-6\">\n          <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n            <div>\n              <p\n                class=\"text-base text-light-form-text dark:text-dark-form-text\"\n              >\n                <strong>Utilisateurs Inscrits :</strong> {{ counts.users }}\n              </p>\n              <p\n                class=\"text-base text-light-form-text dark:text-dark-form-text\"\n              >\n                <strong>Terrains :</strong> {{ counts.fields }}\n              </p>\n              <p\n                class=\"text-base text-light-form-text dark:text-dark-form-text\"\n              >\n                <strong>Sports :</strong> {{ counts.sports }}\n              </p>\n            </div>\n            <div>\n              <p\n                class=\"text-base text-light-form-text dark:text-dark-form-text\"\n              >\n                <strong>Équipes :</strong> {{ counts.teams }}\n              </p>\n              <p\n                class=\"text-base text-light-form-text dark:text-dark-form-text\"\n              >\n                <strong>Pools :</strong> {{ counts.pools }}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Liste des Sports -->\n        <div class=\"mt-6\">\n          <h3\n            class=\"text-2xl font-semibold mb-2 text-light-form-text dark:text-dark-form-text\"\n          >\n            Liste des Sports\n          </h3>\n          <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div\n              v-for=\"sport in sports\"\n              :key=\"sport.id\"\n              class=\"flex items-center\"\n            >\n              <span\n                class=\"w-4 h-4 rounded-full mr-2\"\n                :style=\"{ backgroundColor: sport.color }\"\n              ></span>\n              <span\n                class=\"text-base text-light-form-text dark:text-dark-form-text\"\n                >{{ sport.name }}</span\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Carte OpenStreetMap -->\n      <div class=\"rounded-lg shadow-lg p-4 sm:h-[50vh] h-[300px] mt-8 md:mt-0\">\n        <div\n          v-if=\"!coordinatesAreValid\"\n          class=\"text-sm text-red-500 mt-2 text-center\"\n        >\n          Les coordonnées ne sont pas valides, la carte affiche un lieu par\n          défaut (FR) .\n        </div>\n        <l-map\n          v-if=\"mapIsReady\"\n          ref=\"map\"\n          :zoom=\"12\"\n          :center=\"[mapLatitude, mapLongitude]\"\n          class=\"h-full w-full\"\n        >\n          <l-tile-layer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            layer-type=\"base\"\n            name=\"OpenStreetMap\"\n          />\n          <l-marker :lat-lng=\"[mapLatitude, mapLongitude]\">\n            <l-popup>{{ tourney.location || 'Fribourg, Suisse' }}</l-popup>\n          </l-marker>\n        </l-map>\n        <!-- Bouton sous la carte -->\n        <div class=\"mt-4 flex justify-end relative z-30\">\n          <!-- Bouton Télécharger Excel -->\n          <ButtonComponent\n            v-if=\"tourney.status !== 'draft'\"\n            @click=\"downloadExcel\"\n            variant=\"success\"\n            fontAwesomeIcon=\"file-excel\"\n            class=\"flex items-center space-x-1\"\n          >\n            <span>Télécharger Planning</span>\n          </ButtonComponent>\n          <ButtonComponent\n            :variant=\"'info'\"\n            fontAwesomeIcon=\"map-marker-alt\"\n            @click=\"openGoogleMaps\"\n          >\n            Itinéraire\n            <span class=\"hidden sm:inline\"> Avec Google Maps</span>\n          </ButtonComponent>\n        </div>\n      </div>\n    </div>\n\n    <!-- Guide de configuration du tournoi -->\n    <div\n      class=\"bg-light-card dark:bg-dark-card rounded-lg shadow-lg p-8 mt-8 relative\"\n    >\n      <h3\n        class=\"text-2xl font-bold mb-4 text-light-subMenu-activeText dark:text-dark-subMenu-activeText\"\n      >\n        Guide de configuration du tournoi\n      </h3>\n      <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-4\">\n        Une bonne pratique pour une configuration fluide : Si N terrains, créez\n        N*4 Teams et N Pools afin d'avoir un bon tournus. Variez la taille des\n        équipes pour accueillir plus de monde.\n      </p>\n      <!-- Texte explicatif de base -->\n      <div v-if=\"!showExample\">\n        <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-4\">\n          Pour configurer votre tournoi, suivez ces étapes clés :\n        </p>\n        <ol\n          class=\"list-decimal list-inside mb-4 space-y-2 text-light-form-text dark:text-dark-form-text\"\n        >\n          <li>\n            <strong>Terrains</strong> : Ajoutez vos terrains dans l'onglet\n            Terrains.\n          </li>\n          <li>\n            <strong>Sports</strong> : Assignez les sports aux terrains dans\n            l'onglet Assignation.\n          </li>\n          <li>\n            <strong>Inscriptions</strong> : Configurez les équipes et ouvrez les\n            inscriptions.\n          </li>\n          <li>\n            <strong>Pools</strong> : Créez les pools et assignez les équipes.\n          </li>\n          <li><strong>Planning</strong> : Générez le planning des matchs.</li>\n        </ol>\n\n        <button\n          @click=\"showExample = true\"\n          class=\"text-blue-500 mt-4 flex items-center space-x-2\"\n        >\n          <span>Voir un exemple pratique</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M9 18l6-6-6-6\"></path>\n          </svg>\n        </button>\n      </div>\n\n      <!-- Exemple pratique de configuration -->\n      <div v-else>\n        <h4\n          class=\"font-semibold text-light-form-text dark:text-dark-form-text mt-4\"\n        >\n          Exemple Pratique :\n        </h4>\n        <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-4\">\n          Imaginons que vous avez 6 terrains disponibles :\n        </p>\n        <ol\n          class=\"list-decimal list-inside mb-4 space-y-2 text-light-form-text dark:text-dark-form-text\"\n        >\n          <li>\n            Allez dans l'onglet <strong>Terrains</strong> et créez vos 6\n            terrains.\n          </li>\n          <li>\n            Allez dans l'onglet <strong>Assignation</strong> et associez les\n            sports aux terrains pour un planning de base.\n          </li>\n          <li>\n            Dans l'onglet <strong>Inscriptions</strong> :\n            <ul class=\"list-disc list-inside ml-6\">\n              <li>\n                Configurez vos équipes via <strong>Config Équipe</strong>. Avec\n                6 terrains, vous pouvez créer environ 24 équipes (4 par terrain,\n                2 en repos).\n              </li>\n              <li>\n                Définissez la taille des équipes entre 3 à 6 joueurs, soit un\n                total max de 24 * 6 = 144 joueurs.\n              </li>\n              <li>\n                Utilisez le groupe assistant pour gérer les inscriptions\n                supplémentaires.\n              </li>\n              <li>\n                Générez les équipes manuellement ou automatiquement avec\n                <strong>Générer équipes</strong>.\n              </li>\n              <li>Activez les inscriptions et générez un lien d’invitation.</li>\n            </ul>\n          </li>\n          <li>\n            En mode <strong>Custom Round Robin</strong>, créez 6 pools (1 par\n            terrain). Configurez chaque pool pour contenir entre 3 et 4 équipes\n            pour un roulement fluide.\n          </li>\n          <li>\n            Une fois les pools créés, passez à l’onglet\n            <strong>Planning</strong> pour générer le planning des matchs, et\n            utilisez les outils de générations pour créer un planning équilibré.\n          </li>\n        </ol>\n\n        <button\n          @click=\"showExample = false\"\n          class=\"text-blue-500 mt-4 flex items-center space-x-2\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M15 18l-6-6 6-6\"></path>\n          </svg>\n          <span>Retourner au guide</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import 'leaflet/dist/leaflet.css';\n  import { mapState, mapActions } from 'vuex';\n  import { LMap, LTileLayer, LMarker, LPopup } from '@vue-leaflet/vue-leaflet';\n  import TourneySubMenu from '@/components/TourneySubMenu.vue';\n  import apiService from '@/services/apiService';\n\n  // Importation des composants\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n  import CompletedIcon from '@/components/icons/CompletedIcon.vue';\n  import PendingIcon from '@/components/icons/PendingIcon.vue';\n  import ActiveIcon from '@/components/icons/ActiveIcon.vue';\n  import DraftIcon from '@/components/icons/DraftIcon.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      LMap,\n      LTileLayer,\n      LMarker,\n      LPopup,\n      TourneySubMenu,\n      CompletedIcon,\n      PendingIcon,\n      ActiveIcon,\n      DraftIcon,\n      ButtonComponent,\n      StatusSelectorComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        tourney: {}, // Détails du tournoi récupérés du serveur\n        currentStepNumber: 1, // Pour gérer l'étape actuelle en nombre\n        mapIsReady: false,\n        showExample: false, // Affichage de l'exemple pratique\n        statusSteps: [\n          { label: 'Terrains', status: '' },\n          { label: 'Sports', status: '' },\n          { label: 'Inscriptions', status: '' },\n          { label: 'Pools', status: '' },\n          { label: 'Planning', status: '' },\n        ],\n        sports: [],\n        counts: {\n          users: 0,\n          fields: 0,\n          sports: 0,\n          teams: 0,\n          pools: 0,\n        },\n      };\n    },\n    async mounted() {\n      await this.fetchTourneyDetails(); // Récupère les détails du tournoi depuis l'API\n      this.mapIsReady = true; // Initialisation de la carte une fois les détails récupérés\n    },\n    methods: {\n      // Mapper les actions du module `tourney`\n      ...mapActions('tourney', ['fetchTourneyStatuses', 'setTournamentName']),\n\n      /**\n       * Récupère les détails du tournoi depuis l'API.\n       * Le backend calcule les statistiques et les détails du tournoi.\n       * @returns {Promise<void>}\n       */\n      async fetchTourneyDetails() {\n        try {\n          // Récupérer les statuts\n          await this.fetchTourneyStatuses(this.tourneyId);\n\n          // Récupérer les détails du tournoi\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/details`\n          );\n          this.tourney = response.data.tourney;\n          this.counts = response.data.counts;\n          this.sports = response.data.sports;\n\n          // Mettre à jour les statuts des étapes\n          this.updateStatusSteps();\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du tournoi:',\n            error\n          );\n          // Afficher un message d'erreur à l'utilisateur si nécessaire\n        }\n      },\n      /**\n       * Formate la date au format lisible.\n       * @param {String} dateString - La date en format ISO.\n       * @returns {String} - La date formatée.\n       */\n      formatDate(dateString) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(dateString).toLocaleDateString(undefined, options);\n      },\n      /**\n       * Gère le changement d'onglet si nécessaire.\n       * @param {String} tab - L'onglet sélectionné.\n       */\n      selectTab(tab) {\n        this.activeTab = tab;\n      },\n      /**\n       * Met à jour les statuts des étapes du tournoi.\n       */\n      updateStatusSteps() {\n        const {\n          fieldAssignmentStatus,\n          sportAssignmentStatus,\n          registrationStatus,\n          poolStatus,\n          planningStatus,\n        } = this.tourney;\n\n        this.statusSteps = [\n          { label: 'Terrains', status: fieldAssignmentStatus },\n          { label: 'Sports', status: sportAssignmentStatus },\n          { label: 'Inscriptions', status: registrationStatus },\n          { label: 'Pools', status: poolStatus },\n          { label: 'Planning', status: planningStatus },\n        ];\n      },\n      /**\n       * Détermine les classes CSS pour la barre de progression en fonction du statut de l'étape.\n       * @param {String} status - Le statut de l'étape.\n       * @returns {String} - Les classes CSS à appliquer.\n       */\n      progressBarClass(status) {\n        switch (status) {\n          case 'completed':\n            return 'bg-light-details-completed dark:bg-dark-details-completed';\n          case 'active':\n            return 'bg-light-details-active dark:bg-dark-details-active';\n          case 'draft':\n            return 'bg-light-details-inProgress dark:bg-dark-details-inProgress';\n          default:\n            return 'bg-light-details-notStarted dark:bg-dark-details-notStarted';\n        }\n      },\n      /**\n       * Détermine les classes CSS pour le texte de l'étape.\n       * @param {String} status - Le statut de l'étape.\n       * @returns {String} - Les classes CSS à appliquer.\n       */\n      stepTextClass(status) {\n        if (status === 'completed') {\n          return 'text-light-details-completed dark:text-dark-details-completed';\n        } else if (status === 'active') {\n          return 'text-light-details-active dark:text-dark-details-active';\n        } else if (status === 'draft') {\n          return 'text-light-details-inProgress dark:text-dark-details-inProgress';\n        } else {\n          return 'text-light-details-notStarted dark:text-dark-details-notStarted';\n        }\n      },\n      /**\n       * Retourne le texte du statut de l'étape.\n       * @param {String} status - Le statut de l'étape.\n       * @returns {String} - Le texte à afficher.\n       */\n      stepStatusText(status, label) {\n        if (status === 'completed') {\n          return 'Complété';\n        } else if (status === 'active') {\n          return 'En cours';\n        } else if (status === 'draft') {\n          if (label === 'Inscriptions') {\n            return 'Fermées';\n          }\n          return 'Brouillon';\n        } else {\n          return 'En attente';\n        }\n      },\n      /**\n       * Retourne le composant icône approprié en fonction du statut.\n       * @param {String} status - Le statut de l'étape.\n       * @returns {Component} - Le composant icône.\n       */\n      stepIconComponent(status) {\n        if (status === 'completed') {\n          return 'CompletedIcon';\n        } else if (status === 'active') {\n          return 'ActiveIcon';\n        } else if (status === 'draft') {\n          return 'DraftIcon';\n        } else {\n          return 'PendingIcon';\n        }\n      },\n      openGoogleMaps() {\n        const url = this.googleMapsLink;\n        window.open(url, '_blank');\n      },\n\n      /**\n       * Télécharge le planning du tournoi au format Excel.\n       * Utilise l'API pour récupérer le fichier Excel et le télécharger.\n       */\n      async downloadExcel() {\n        let toastId;\n        try {\n          // Afficher un toast indiquant que le téléchargement démarre\n          toastId = toast.info('Téléchargement du fichier en cours...', {\n            autoClose: false, // Empêche la fermeture automatique\n          });\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/export-data/excel`,\n            {\n              responseType: 'blob', // Demander un blob pour le téléchargement de fichiers\n            }\n          );\n\n          // Créer une URL temporaire pour le fichier\n          const blob = response.data; // Axios renvoie le blob dans `data`\n          const url = window.URL.createObjectURL(blob);\n\n          // Créer un lien pour déclencher le téléchargement\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `tournament_${this.tourneyId}.xlsx`; // Nom du fichier\n          document.body.appendChild(a);\n          a.click();\n\n          // Nettoyer l'URL temporaire après le téléchargement\n          window.URL.revokeObjectURL(url);\n          // Mettre à jour le toast pour indiquer que le téléchargement est terminé\n          toast.update(toastId, {\n            render: 'Téléchargement terminé avec succès !',\n            type: 'success',\n            autoClose: 2000, // Fermeture automatique après 2 secondes\n          });\n        } catch (error) {\n          toast.update(toastId, {\n            render:\n              error.message ||\n              \"Une erreur s'est produite lors du téléchargement.\",\n            type: 'error',\n            autoClose: 2000, // Fermeture automatique après 2 secondes\n          });\n          console.error('Erreur lors du téléchargement Excel :', error);\n        }\n      },\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n      }),\n\n      /**\n       * Latitude de la carte OpenStreetMap.\n       * @returns {Number} - La latitude.\n       * @default 46.8069\n       * @see https://www.openstreetmap.org/#map=12/46.8069/7.1611\n       */\n      coordinatesAreValid() {\n        const lat = this.tourney.latitude;\n        const lng = this.tourney.longitude;\n        return (\n          lat !== null &&\n          lng !== null &&\n          !isNaN(lat) &&\n          !isNaN(lng) &&\n          lat >= -90 &&\n          lat <= 90 &&\n          lng >= -180 &&\n          lng <= 180\n        );\n      },\n\n      /**\n       * Latitude de la carte OpenStreetMap.\n       * @returns {Number} - La latitude.\n       */\n      mapLatitude() {\n        return this.coordinatesAreValid ? this.tourney.latitude : 46.8065;\n      },\n\n      /**\n       * Longitude de la carte OpenStreetMap.\n       * @returns {Number} - La longitude.\n       */\n      mapLongitude() {\n        return this.coordinatesAreValid ? this.tourney.longitude : 7.1619;\n      },\n\n      /**\n       * Génère le lien Google Maps vers l'emplacement du tournoi.\n       * @returns {String} - L'URL vers Google Maps.\n       */\n      googleMapsLink() {\n        if (this.coordinatesAreValid) {\n          const lat = this.tourney.latitude;\n          const lng = this.tourney.longitude;\n          return `https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`;\n        } else {\n          // Lien vers Fribourg par défaut si les coordonnées ne sont pas valides\n          return 'https://www.google.com/maps/dir/?api=1&destination=46.8065,7.1619';\n        }\n      },\n\n      /**\n       * Vérifie si toutes les étapes sont complétées.\n       * @returns {Boolean} - Vrai si toutes les étapes sont complétées.\n       */\n      allStepsCompleted() {\n        return this.statusSteps.every((step) => step.status === 'completed');\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  .l-map {\n    height: 100%;\n    width: 100%;\n  }\n\n  .dark .leaflet-container {\n    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%);\n  }\n</style>\n","<!-- TourneySubMenu(Component).vue -->\n\n<template>\n  <div\n    :class=\"['tourney-nav', isNavVisible ? 'visible' : 'hidden']\"\n    class=\"tourney-nav w-full z-50 bg-light-subMenu-background dark:bg-dark-subMenu-background shadow-lg border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n  >\n    <!-- DETAILS -->\n    <router-link\n      :to=\"`/admin/tourneys/${tourneyId}`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{ active: $route.name === 'AdminTourneyDetails' }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'info-circle']\" />\n      <span class=\"hidden sm:inline\"> Détails</span>\n    </router-link>\n\n    <!-- TERRAINS -->\n    <router-link\n      :to=\"`/admin/tourneys/${tourneyId}/fields`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{ active: $route.name === 'AdminTourneyFieldsManagement' }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'map']\" />\n      <span class=\"hidden sm:inline\"> Terrains</span>\n    </router-link>\n\n    <!-- SPORT -->\n    <router-link\n      :to=\"`/admin/tourneys/${tourneyId}/sports-fields`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{ active: $route.name === 'AdminTourneySportsFields' }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'futbol']\" />\n      <span class=\"hidden sm:inline\"> Sport</span>\n    </router-link>\n\n    <!-- PLAYERS -->\n    <router-link\n      :to=\"`/admin/tourneys/${tourneyId}/teams`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{ active: $route.name === 'AdminTourneyTeams' }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'user']\" />\n      <span class=\"hidden sm:inline\"> Inscriptions</span>\n    </router-link>\n\n    <!-- POOLS -->\n    <router-link\n      :to=\"`/admin/tourneys/${tourneyId}/pools`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{ active: $route.name === 'AdminTourneyPools' }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'users']\" />\n      <span class=\"hidden sm:inline\"> Pools</span>\n    </router-link>\n\n    <!-- PLANNING -->\n    <router-link\n      :to=\"`/admin/tourneys/${tourneyId}/planning/pools`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{\n        active:\n          $route.name === 'AdminTourneyPlanningPools' ||\n          $route.name === 'AdminTourneyPlanningGames' ||\n          $route.name === 'AdminTourneyPlanningCompleted',\n      }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'calendar-alt']\" />\n      <span class=\"hidden sm:inline\"> Planning</span>\n    </router-link>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        activeTab: 'details', // Par défaut, on montre les détails du tournoi\n        isNavVisible: true, // Défini la visibilité par défaut du menu\n      };\n    },\n    methods: {\n      selectTab(tab) {\n        this.activeTab = tab;\n      },\n    },\n    props: {\n      tourneyId: {\n        type: String,\n        required: true,\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  .tourney-nav {\n    display: flex;\n    background-color: white; /* Un gris très léger pour tout le fond du sous-menu */\n    border-bottom: 1px solid #e2e8f0;\n    margin: 0; /* Coller au menu principal */\n  }\n\n  .tourney-nav-item {\n    cursor: pointer;\n    font-weight: 600;\n    color: #4a5568; /* Couleur gris foncé pour un bon contraste */\n    padding: 1.5rem 0; /* Plus de padding pour agrandir la zone cliquable */\n    text-align: center;\n    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;\n    flex: 1; /* Chaque item occupe 25% de la largeur */\n    position: relative;\n  }\n\n  .tourney-nav-item:hover {\n    background-color: #e2e8f0; /* Un gris légèrement plus foncé au hover */\n    color: #2f855a; /* Vert plus foncé au survol pour l’interaction */\n  }\n\n  .tourney-nav-item.active {\n    color: #2f855a; /* Vert pour indiquer que l’élément est actif */\n    font-weight: bold;\n  }\n  .tourney-nav-item div {\n    position: relative;\n  }\n\n  .tourney-nav-item.active::after {\n    content: '';\n    position: absolute;\n    bottom: 0; /* Barre verte en bas de l'élément */\n    left: 1%; /* La barre occupe le quart de la largeur de l'élément */\n    width: 98%; /* Barre qui prend environ 75% de la largeur de l'item */\n    height: 4px;\n    background-color: #38a169; /* Couleur verte élégante pour indiquer l'onglet actif */\n    border-radius: 4px; /* Barre arrondie pour plus de fluidité */\n  }\n</style>\n","import { render } from \"./TourneySubMenu.vue?vue&type=template&id=2263a89a&scoped=true\"\nimport script from \"./TourneySubMenu.vue?vue&type=script&lang=js\"\nexport * from \"./TourneySubMenu.vue?vue&type=script&lang=js\"\n\nimport \"./TourneySubMenu.vue?vue&type=style&index=0&id=2263a89a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2263a89a\"]])\n\nexport default __exports__","<!-- StatusSelectorComponent.vue -->\n<template>\n  <div v-if=\"shouldShow\" class=\"flex items-center ml-4 sm:ml-8 w-1/2 sm:w-auto\">\n    <label\n      :for=\"statusKey\"\n      class=\"hidden sm:block mr-2 text-light-title dark:text-dark-title\"\n    >\n      {{ label }}\n    </label>\n    <select\n      :id=\"statusKey\"\n      v-model=\"selectedStatus\"\n      class=\"bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text border border-light-form-border-default dark:border-dark-form-border-default rounded-md px-2 py-1\"\n    >\n      <option\n        v-for=\"option in statusOptions\"\n        :key=\"option.value\"\n        :value=\"option.value\"\n      >\n        {{ option.label }}\n      </option>\n    </select>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {\n      tourneyId: {\n        type: [Number, String],\n        required: true,\n      },\n      statusKey: {\n        type: String,\n        required: true,\n      },\n      statusOptions: {\n        type: Array,\n        required: true,\n      },\n      label: {\n        type: String,\n        default: 'État :',\n      },\n      hideWhenNotStarted: {\n        type: Boolean,\n        default: true,\n      },\n      modelValue: {\n        type: String,\n        default: '',\n      },\n      onStatusChange: {\n        type: Function,\n        required: false,\n      },\n    },\n    computed: {\n      currentStatus() {\n        return this.$store.state.tourney.statuses[this.statusKey];\n      },\n      shouldShow() {\n        // Ne pas afficher le sélecteur si le statut est 'notStarted' et que hideWhenNotStarted est vrai\n        if (this.hideWhenNotStarted) {\n          return this.currentStatus !== 'notStarted';\n        }\n        return true;\n      },\n      selectedStatus: {\n        get() {\n          return this.modelValue;\n        },\n        set(value) {\n          this.$emit('update:modelValue', value);\n          if (this.onStatusChange) {\n            this.onStatusChange(value);\n          } else {\n            this.$store.dispatch('tourney/updateStatus', {\n              tourneyId: this.tourneyId,\n              key: this.statusKey,\n              value: value,\n            });\n          }\n        },\n      },\n    },\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./StatusSelectorComponent.vue?vue&type=template&id=d0d56bb4\"\nimport script from \"./StatusSelectorComponent.vue?vue&type=script&lang=js\"\nexport * from \"./StatusSelectorComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- CompletedIcon.vue -->\n<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    class=\"fill-current text-green-500\"\n    viewBox=\"0 0 24 24\"\n  >\n    <!-- Icone SVG Completed -->\n    <path\n      d=\"M9.7 11.3c-.4-.4-1-.4-1.4 0s-.4 1 0 1.4l3 3c.2.2.4.3.7.3s.5-.1.7-.3l7-8c.3-.5.3-1.1-.2-1.4-.4-.3-1-.3-1.3.1L12 13.5z\"\n    />\n    <path\n      d=\"M21 11c-.6 0-1 .4-1 1 0 4.4-3.6 8-8 8s-8-3.6-8-8c0-2.1.8-4.1 2.3-5.6C7.8 4.8 9.8 4 12 4c.6 0 1.3.1 1.9.2.5.2 1.1-.1 1.3-.7s-.2-1-.7-1.2h-.1c-.8-.2-1.6-.3-2.4-.3C6.5 2 2 6.5 2 12.1c0 2.6 1.1 5.2 2.9 7 1.9 1.9 4.4 2.9 7 2.9 5.5 0 10-4.5 10-10 .1-.6-.4-1-.9-1z\"\n    />\n  </svg>\n</template>\n","import { render } from \"./CompletedIcon.vue?vue&type=template&id=cd245a68\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- PendingIcon.vue -->\n<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    class=\"fill-current text-gray-300\"\n    viewBox=\"0 0 24 24\"\n  >\n    <!-- Icone en attente-->\n    <path\n      d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n    />\n    <path\n      d=\"M7 13.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm5 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm5 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"\n    />\n  </svg>\n</template>\n","import { render } from \"./PendingIcon.vue?vue&type=template&id=71527341\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- ActiveIcon.vue -->\n<template>\n  <!-- Icône représentant une étape active -->\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"h-8 w-8 fill-current text-light-details-active dark:text-dark-details-active\"\n    viewBox=\"0 0 24 24\"\n  >\n    <!-- Exemple d'icône : un cercle avec une flèche indiquant l'activité -->\n    <circle\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M12 8v4l3 3\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      fill=\"none\"\n    />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'ActiveIcon',\n  };\n</script>\n\n<style scoped>\n  /* Styles personnalisés si nécessaire */\n</style>\n","import { render } from \"./ActiveIcon.vue?vue&type=template&id=9061817e&scoped=true\"\nimport script from \"./ActiveIcon.vue?vue&type=script&lang=js\"\nexport * from \"./ActiveIcon.vue?vue&type=script&lang=js\"\n\nimport \"./ActiveIcon.vue?vue&type=style&index=0&id=9061817e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9061817e\"]])\n\nexport default __exports__","<!-- DraftIcon.vue -->\n<template>\n  <!-- Icône représentant une étape en brouillon -->\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"h-8 w-8 fill-current text-light-details-inProgress dark:text-dark-details-inProgress\"\n    viewBox=\"0 0 24 24\"\n  >\n    <!-- Exemple d'icône : un crayon pour indiquer l'édition en cours -->\n    <path\n      d=\"M12 20h9\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M16.5 3.5a2.121 2.121 0 1 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      fill=\"none\"\n    />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'DraftIcon',\n  };\n</script>\n\n<style scoped>\n  /* Styles personnalisés si nécessaire */\n</style>\n","import { render } from \"./DraftIcon.vue?vue&type=template&id=cb1374f2&scoped=true\"\nimport script from \"./DraftIcon.vue?vue&type=script&lang=js\"\nexport * from \"./DraftIcon.vue?vue&type=script&lang=js\"\n\nimport \"./DraftIcon.vue?vue&type=style&index=0&id=cb1374f2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cb1374f2\"]])\n\nexport default __exports__","import { render } from \"./TourneyDetails.vue?vue&type=template&id=53b6aa43&scoped=true\"\nimport script from \"./TourneyDetails.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyDetails.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyDetails.vue?vue&type=style&index=0&id=53b6aa43&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-53b6aa43\"]])\n\nexport default __exports__","<!-- Gestion des Sports -->\n<template>\n  <div class=\"p-6\">\n    <div class=\"flex items-center mb-8\">\n      <TitleComponent title=\"Gestion des Sports\" />\n    </div>\n\n    <!-- Grille des sports -->\n    <div\n      class=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\"\n    >\n      <!-- Carte pour ajouter un nouveau sport -->\n      <CardAddComponent\n        title=\"Sport\"\n        @openAddElementModal=\"openAddSportModal\"\n      />\n\n      <!-- Cartes des sports existants -->\n      <CardEditComponent\n        v-for=\"sport in sports\"\n        :key=\"sport.id\"\n        :title=\"sport.name\"\n        :image=\"getImageUrl(sport.image)\"\n        :showEditButton=\"true\"\n        :showDeleteButton=\"true\"\n        :titleColor=\"sport.color\"\n        @click=\"editSport(sport)\"\n        @delete=\"confirmDeleteSport(sport.id)\"\n        @edit=\"editSport(sport)\"\n      />\n    </div>\n\n    <!-- Modale pour ajouter/modifier un sport -->\n    <ModalComponent\n      :isVisible=\"showModal\"\n      :title=\"editingSportId ? 'Modifier le Sport' : 'Ajouter un Nouveau Sport'\"\n      @close=\"closeModal\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"newSport\"\n          :fields=\"formFields\"\n          :isEditing=\"!!editingSportId\"\n          @file-selected=\"handleFileUpload\"\n          @form-submit=\"handleFormSubmit\"\n          @form-cancel=\"closeModal\"\n          :customValidation=\"validateForm\"\n        />\n      </template>\n    </ModalComponent>\n\n    <!-- Confirmation de suppression -->\n    <DeleteConfirmationModal\n      :isVisible=\"showDeleteConfirmation\"\n      :isHardDelete=\"true\"\n      @form-cancel=\"closeDeleteConfirmation\"\n      @confirm=\"deleteSport(confirmedDeleteSportId)\"\n    />\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import CardAddComponent from '@/components/CardAddComponent.vue';\n  import CardEditComponent from '@/components/CardEditComponent.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ModalComponent,\n      DeleteConfirmationModal,\n      CardAddComponent,\n      CardEditComponent,\n      FormComponent,\n      TitleComponent,\n    },\n\n    data() {\n      return {\n        sports: [],\n        showModal: false,\n        showDeleteConfirmation: false,\n        confirmedDeleteSportId: null,\n        newSport: {\n          name: '',\n          rule: '',\n          scoreSystem: 'DESC',\n          color: '#000000',\n          image: null,\n        },\n        editingSportId: null,\n        selectedFile: null,\n        isFormValid: false,\n        formErrors: {}, // Ajout de cette propriété pour les erreurs du formulaire\n      };\n    },\n    computed: {\n      formFields() {\n        return [\n          {\n            name: 'name',\n            label: 'Nom du sport',\n            type: 'text',\n            required: true,\n          },\n          {\n            name: 'rule',\n            label: 'Règles du sport',\n            type: 'textarea',\n            required: true,\n          },\n          {\n            name: 'scoreSystem',\n            label: 'Système de score',\n            type: 'select',\n            options: [\n              { value: 'ASC', label: 'ASC' },\n              { value: 'DESC', label: 'DESC' },\n            ],\n            tooltip:\n              \"'ASC': Un score faible est le meilleur (temps). 'DESC': Un score élevé est le meilleur (nombre de points).\",\n            required: true,\n          },\n          {\n            name: 'image',\n            label: 'Image du sport',\n            type: 'file',\n            required: false,\n          },\n          {\n            name: 'color',\n            label: 'Couleur (Hexadecimal)',\n            type: 'color',\n            required: false,\n          },\n        ];\n      },\n    },\n\n    methods: {\n      validateForm() {\n        const { name, rule } = this.newSport;\n        const trimmedName = name.trim(); // Supprime les espaces en début et fin\n\n        // Initialiser les erreurs\n        const errors = {};\n\n        // Vérifier si le nom est vide\n        if (!trimmedName) {\n          errors.name = 'Le nom du sport est obligatoire.';\n        } else {\n          // Vérifier l'unicité du nom en ignorant les espaces\n          const nameExists = this.sports.some(\n            (sport) =>\n              sport.name.trim().toLowerCase() === trimmedName.toLowerCase() &&\n              sport.id !== this.editingSportId\n          );\n          if (nameExists) {\n            errors.name = 'Un sport avec ce nom existe déjà.';\n          }\n        }\n\n        // Vérifier si les règles sont vides\n        if (!rule) {\n          errors.rule = 'Les règles du sport sont obligatoires.';\n        }\n\n        // Mettre à jour les erreurs du formulaire\n        this.formErrors = errors;\n\n        // Mettre à jour la validité du formulaire\n        this.isFormValid = Object.keys(errors).length === 0;\n        // Retourner l'objet errors, même s'il est vide\n        return errors;\n      },\n\n      getImageUrl(imagePath) {\n        const baseUrl =\n          process.env.VUE_APP_IMAGE_URL ||\n          'https://easy-tourney-backend-6cdfc7a64550.herokuapp.com';\n        return `${baseUrl}${imagePath}`;\n      },\n      getFileName(filePath) {\n        if (!filePath) return '';\n        const parts = filePath.split('/');\n        return parts[parts.length - 1];\n      },\n\n      async fetchSports() {\n        try {\n          const response = await apiService.get('/sports');\n          this.sports = response.data;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des sports:', error);\n        }\n      },\n\n      handleFileUpload(file) {\n        if (file === null) {\n          this.selectedFile = null;\n          return;\n        }\n\n        if (file) {\n          const maxSizeInMB = 10;\n          const maxSizeInBytes = maxSizeInMB * 1024 * 1024;\n\n          if (file.size > maxSizeInBytes) {\n            alert(\n              `L'image dépasse la taille maximale autorisée de ${maxSizeInMB} Mo.`\n            );\n            this.selectedFile = null;\n          } else {\n            this.selectedFile = file;\n          }\n        } else {\n          // File selection was canceled\n          this.selectedFile = null;\n        }\n        this.validateForm();\n      },\n\n      openAddSportModal() {\n        this.editingSportId = null;\n        this.newSport = {\n          name: '',\n          rule: '',\n          scoreSystem: 'DESC',\n          color: '#000000',\n          image: null,\n        };\n        this.selectedFile = null;\n        this.isFormValid = false;\n        this.formErrors = {};\n        this.showModal = true;\n      },\n\n      editSport(sport) {\n        this.editingSportId = sport.id;\n        this.newSport = { ...sport };\n        this.selectedFile = null;\n        this.isFormValid = true;\n        this.formErrors = {};\n        this.showModal = true;\n      },\n\n      async handleFormSubmit() {\n        this.validateForm();\n        if (!this.isFormValid) return;\n\n        const formData = new FormData();\n        formData.append('name', this.newSport.name);\n        formData.append('rule', this.newSport.rule);\n        formData.append('scoreSystem', this.newSport.scoreSystem);\n        formData.append('color', this.newSport.color);\n\n        if (this.newSport.image instanceof File) {\n          formData.append('image', this.newSport.image);\n        } else if (this.newSport.image) {\n          // Si l'image est déjà une URL ou un nom de fichier\n          formData.append('image', this.getFileName(this.newSport.image));\n        }\n\n        try {\n          if (this.editingSportId) {\n            // Requête PUT pour mettre à jour le sport existant\n            await apiService.put(`/sports/${this.editingSportId}`, formData, {\n              headers: { 'Content-Type': 'multipart/form-data' },\n            });\n            toast.success('Sport modifié avec succès!');\n          } else {\n            // Requête POST pour créer un nouveau sport\n            await apiService.post('/sports', formData, {\n              headers: { 'Content-Type': 'multipart/form-data' },\n            });\n            toast.success('Nouveau sport ajouté avec succès!');\n          }\n          this.closeModal();\n          this.fetchSports();\n        } catch (error) {\n          console.error(\"Erreur lors de l'enregistrement du sport :\", error);\n          toast.error(\"Erreur lors de l'enregistrement du sport!\");\n        }\n      },\n\n      confirmDeleteSport(id) {\n        this.confirmedDeleteSportId = id;\n        this.showDeleteConfirmation = true;\n      },\n\n      async deleteSport(id) {\n        try {\n          await apiService.delete(`/sports/${id}`);\n          toast.success('Sport supprimé avec succès!');\n          this.closeDeleteConfirmation();\n          this.fetchSports();\n        } catch (error) {\n          toast.error('Erreur lors de la suppression du sport!');\n        }\n      },\n\n      closeModal() {\n        this.showModal = false;\n      },\n\n      closeDeleteConfirmation() {\n        this.showDeleteConfirmation = false;\n        this.confirmedDeleteSportId = null;\n      },\n    },\n\n    watch: {\n      newSport: {\n        handler() {\n          this.validateForm();\n        },\n        deep: true,\n      },\n    },\n\n    mounted() {\n      this.fetchSports();\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles gérés par Tailwind CSS */\n</style>\n","import { render } from \"./SportsManagement.vue?vue&type=template&id=0bf6de45&scoped=true\"\nimport script from \"./SportsManagement.vue?vue&type=script&lang=js\"\nexport * from \"./SportsManagement.vue?vue&type=script&lang=js\"\n\nimport \"./SportsManagement.vue?vue&type=style&index=0&id=0bf6de45&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0bf6de45\"]])\n\nexport default __exports__","<!-- src/views/admin/AdminUsers.vue -->\n<template>\n  <div class=\"mx-auto p-4\">\n    <ListUsersTable\n      :users=\"users\"\n      :enableAddUser=\"true\"\n      :enableEditUser=\"true\"\n      :enableAssignTourney=\"true\"\n      :enableRemoveUserFromTourney=\"true\"\n      :tournaments=\"tournaments\"\n      :showTourney=\"true\"\n      :showAssignTourney=\"true\"\n      :enableAssignTeam=\"false\"\n      :showEmailButton=\"false\"\n      :showBackButton=\"false\"\n      :showPhone=\"false\"\n      :showFilters=\"true\"\n      :editUserFunction=\"editUser\"\n      :addUserFunction=\"addUser\"\n      @assign-tourney=\"handleAssignTourney\"\n      @remove-user-from-tourney=\"handleRemoveUserFromTourney\"\n      @delete-user=\"handleDeleteUser\"\n      @user-updated=\"fetchData\"\n    />\n    <div v-if=\"isLoading\" class=\"flex justify-center items-center h-64\">\n      <i\n        class=\"fas fa-spinner fa-spin fa-3x text-light-menuActive dark:text-light-menuActive\"\n      ></i>\n      <span\n        class=\"ml-4 text-light-profileText dark:text-light-profileText text-lg\"\n        >Chargement...</span\n      >\n    </div>\n\n    <!-- Modale pour éditer un utilisateur -->\n    <ModalComponent\n      :isVisible=\"showEditUserModal\"\n      title=\"Modifier l'utilisateur\"\n      @close=\"closeEditUserModal\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"newUser\"\n          :fields=\"userFormFields\"\n          :isEditing=\"true\"\n          @form-submit=\"handleUserFormSubmit\"\n          @form-cancel=\"closeEditUserModal\"\n          :customValidation=\"validateUserForm\"\n        />\n      </template>\n    </ModalComponent>\n\n    <!-- Modale pour ajouter un nouvel utilisateur -->\n    <ModalComponent\n      :isVisible=\"showAddUserModal\"\n      title=\"Ajouter un utilisateur\"\n      @close=\"closeAddUserModal\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"newUser\"\n          :fields=\"userFormFields\"\n          :isEditing=\"false\"\n          @form-submit=\"handleAddUserSubmit\"\n          @form-cancel=\"closeAddUserModal\"\n          :customValidation=\"validateUserForm\"\n        />\n      </template>\n    </ModalComponent>\n  </div>\n</template>\n\n<script>\n  // Importation des composants nécessaires\n  import ListUsersTable from '@/components/ListUsersTable.vue';\n  import apiService from '@/services/apiService';\n  import { toast } from 'vue3-toastify';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n\n  export default {\n    components: {\n      ListUsersTable,\n      ModalComponent,\n      FormComponent,\n    },\n    data() {\n      return {\n        users: [],\n        tournaments: [],\n        showEditUserModal: false,\n        showAddUserModal: false, // État pour la modale d'ajout\n        editingUser: null,\n        newUser: {\n          name: '',\n          email: '',\n          phone: '',\n          password: '',\n          roleId: 2, // Par défaut, rôle utilisateur\n        },\n        formErrors: {},\n        isFormValid: false,\n        isLoading: false, // État pour le chargement\n      };\n    },\n    async created() {\n      await this.fetchData();\n    },\n    methods: {\n      /**\n       * Récupère les données des utilisateurs et des tournois depuis l'API.\n       * @returns {Promise<void>}\n       */\n      async fetchData() {\n        this.isLoading = true; // Début du chargement\n        try {\n          const [usersResponse, tourneysResponse] = await Promise.all([\n            apiService.get('/users/all/details'),\n            apiService.get('/tourneys'),\n          ]);\n          this.users = usersResponse.data;\n          this.tournaments = tourneysResponse.data;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des utilisateurs:',\n            error\n          );\n          toast.error(\n            'Une erreur est survenue lors de la récupération des données.'\n          );\n        } finally {\n          this.isLoading = false; // Fin du chargement\n        }\n      },\n      /**\n       * Ouvre la modale d'édition avec les données de l'utilisateur sélectionné.\n       * @param {Object} user - L'utilisateur à éditer.\n       */\n      editUser(user) {\n        this.editingUser = user;\n        this.newUser = {\n          name: user.name || '',\n          email: user.email || '',\n          phone: user.phone || '',\n          password: '',\n          roleId: Number(user.roleId || user.role?.id || 2), // Valeur par défaut à 2 (Utilisateur)\n        };\n        this.showEditUserModal = true;\n        this.formErrors = {};\n        this.isFormValid = true;\n      },\n      /**\n       * Ferme la modale d'édition et réinitialise les données.\n       */\n      closeEditUserModal() {\n        this.showEditUserModal = false;\n        this.editingUser = null;\n        this.resetNewUser();\n      },\n      /**\n       * Ouvre la modale d'ajout d'un nouvel utilisateur.\n       */\n      addUser() {\n        this.resetNewUser();\n        this.showAddUserModal = true;\n        this.formErrors = {};\n        this.isFormValid = true;\n      },\n      /**\n       * Ferme la modale d'ajout et réinitialise les données.\n       */\n      closeAddUserModal() {\n        this.showAddUserModal = false;\n        this.resetNewUser();\n      },\n      /**\n       * Réinitialise les données du nouvel utilisateur.\n       */\n      resetNewUser() {\n        this.newUser = {\n          name: '',\n          email: '',\n          phone: '',\n          password: '',\n          roleId: 2, // Par défaut, rôle utilisateur\n        };\n      },\n      /**\n       * Valide le formulaire d'utilisateur.\n       * @returns {Object} - Les erreurs de validation.\n       */\n      validateUserForm() {\n        const errors = {};\n        if (!this.newUser.name) {\n          errors.name = 'Le nom est obligatoire.';\n        }\n        if (!this.newUser.email) {\n          errors.email = \"L'email est obligatoire.\";\n        }\n        if (!this.newUser.password && !this.editingUser) {\n          errors.password = 'Le mot de passe est obligatoire.';\n        }\n        // ... autres validations si nécessaire ...\n        this.formErrors = errors;\n        this.isFormValid = Object.keys(errors).length === 0;\n        return errors;\n      },\n      /**\n       * Soumet le formulaire d'édition d'un utilisateur.\n       * @returns {Promise<void>}\n       */\n      async handleUserFormSubmit() {\n        this.validateUserForm();\n        if (!this.isFormValid) return;\n        try {\n          await apiService.put(`/users/${this.editingUser.id}`, this.newUser);\n          toast.success('Utilisateur mis à jour avec succès!');\n          this.closeEditUserModal();\n          await this.fetchData();\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la mise à jour de l'utilisateur:\",\n            error\n          );\n          toast.error(\"Erreur lors de la mise à jour de l'utilisateur!\");\n        }\n      },\n      /**\n       * Soumet le formulaire d'ajout d'un nouvel utilisateur.\n       * @returns {Promise<void>}\n       */\n      async handleAddUserSubmit() {\n        this.validateUserForm();\n        if (!this.isFormValid) return;\n        try {\n          await apiService.post('/users', this.newUser);\n          toast.success('Utilisateur créé avec succès!');\n          this.closeAddUserModal();\n          await this.fetchData();\n        } catch (error) {\n          console.error(\"Erreur lors de la création de l'utilisateur:\", error);\n          toast.error(\"Erreur lors de la création de l'utilisateur!\");\n        }\n      },\n      async handleAssignTourney({ userId, tourneyId }) {\n        try {\n          await apiService.post(`/users/${userId}/tourneys/${tourneyId}`);\n          await this.fetchData();\n          toast.success('Utilisateur assigné au tournoi avec succès.');\n        } catch (error) {\n          console.error(\"Erreur lors de l'assignation au tournoi:\", error);\n          toast.error(\n            \"Une erreur est survenue lors de l'assignation au tournoi.\"\n          );\n        }\n      },\n      async handleRemoveUserFromTourney({ userId, tourneyId }) {\n        try {\n          await apiService.delete(`/users/${userId}/tourneys/${tourneyId}`);\n          await this.fetchData();\n          toast.success('Utilisateur retiré du tournoi avec succès.');\n        } catch (error) {\n          console.error('Erreur lors du retrait du tournoi:', error);\n          toast.error(\n            \"Une erreur est survenue lors du retrait de l'utilisateur du tournoi.\"\n          );\n        }\n      },\n      async handleDeleteUser(userId) {\n        try {\n          await apiService.delete(`/users/${userId}`);\n          toast.success('Utilisateur supprimé avec succès.');\n\n          // Vérifier si l'utilisateur supprimé est l'utilisateur actuel\n          if (userId === this.$store.state.user.id) {\n            // Déconnecter l'utilisateur et le rediriger vers la page de connexion\n            this.$store.dispatch('logout');\n            this.$router.push('/login');\n          } else {\n            await this.fetchData();\n          }\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la suppression de l'utilisateur:\",\n            error\n          );\n          toast.error(\n            \"Une erreur est survenue lors de la suppression de l'utilisateur.\"\n          );\n        }\n      },\n    },\n    computed: {\n      /**\n       * Définit les champs du formulaire d'utilisateur.\n       * @returns {Array} - Les champs du formulaire.\n       */\n      userFormFields() {\n        return [\n          {\n            name: 'name',\n            label: 'Nom',\n            type: 'text',\n            required: true,\n          },\n          {\n            name: 'email',\n            label: 'Email',\n            type: 'email',\n            required: true,\n          },\n          {\n            name: 'phone',\n            label: 'Téléphone',\n            type: 'text',\n            required: false,\n          },\n          {\n            name: 'password',\n            label: 'Mot de passe',\n            type: 'password',\n            required: !this.editingUser, // Le mot de passe est requis uniquement lors de la création\n          },\n          {\n            name: 'roleId',\n            label: 'Rôle',\n            type: 'select',\n            required: true,\n            options: [\n              { value: 1, label: 'Administrateur' },\n              { value: 2, label: 'Utilisateur' },\n            ],\n          },\n        ];\n      },\n    },\n  };\n</script>\n\n<style scoped></style>\n","<!-- ListUsersTable.vue -->\n<template>\n  <div\n    class=\"p-4 bg-light-background dark:bg-dark-background rounded-md shadow-lg\"\n  >\n    <!-- En-tête avec les boutons et le titre -->\n    <div class=\"flex items-center justify-between mb-4\">\n      <div class=\"flex items-center space-x-2\">\n        <TitleComponent :title=\"title\" />\n\n        <!-- Bouton Ajouter Utilisateur -->\n        <ButtonComponent\n          v-if=\"enableAddUser\"\n          variant=\"primary\"\n          fontAwesomeIcon=\"fa-user\"\n          @click=\"handleAddUserClick\"\n        >\n          <span class=\"hidden sm:inline\"> Nouvel utilisateur</span>\n        </ButtonComponent>\n\n        <!-- Bouton Envoyer Email -->\n        <ButtonComponent\n          v-if=\"showEmailButton\"\n          variant=\"info\"\n          fontAwesomeIcon=\"envelope\"\n          @click=\"sendEmailToAll\"\n          :disabled=\"users.length === 0\"\n        >\n          <span class=\"hidden sm:inline\">Envoyer Email</span>\n        </ButtonComponent>\n\n        <!-- Slot pour les boutons supplémentaires -->\n        <slot name=\"header-buttons\"></slot>\n      </div>\n\n      <!-- Bouton Retour -->\n      <ButtonComponent\n        v-if=\"showBackButton\"\n        variant=\"secondary\"\n        fontAwesomeIcon=\"arrow-left\"\n        @click=\"goBack\"\n      >\n        <span class=\"hidden sm:inline\">{{ backButtonText }}</span>\n      </ButtonComponent>\n    </div>\n\n    <!-- FILTRES -->\n    <div v-if=\"showFilters\" class=\"flex items-center space-x-4 mb-4\">\n      <!-- Filtre par tournoi -->\n      <div>\n        <v-select\n          v-model=\"selectedTournamentFilter\"\n          :options=\"tournamentOptions\"\n          placeholder=\"Filtrer par tournoi\"\n          label=\"name\"\n          :reduce=\"(tourney) => tourney.id\"\n          appendToBody\n          clearable\n          class=\"w-full sm:w-64\"\n        />\n      </div>\n      <!-- Filtre de recherche -->\n      <div>\n        <input\n          v-model=\"searchQuery\"\n          type=\"text\"\n          placeholder=\"Rechercher par nom ou email\"\n          class=\"border border-light-form-border dark:border-dark-form-border rounded-md p-2 w-full sm:w-64 bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text\"\n        />\n      </div>\n      <!-- Filtre utilisateurs sans tournoi -->\n      <div class=\"mt-2\">\n        <label class=\"inline-flex items-center\">\n          <input\n            type=\"checkbox\"\n            v-model=\"filterNoTournament\"\n            class=\"form-checkbox h-5 w-5 text-indigo-600\"\n          />\n          <span class=\"ml-2 text-light-form-text dark:text-dark-form-text\">\n            Sans tournoi\n          </span>\n        </label>\n      </div>\n    </div>\n\n    <!-- Message d'information si tous les groupes sont complets -->\n    <p\n      v-if=\"!hasAvailableTeams && enableAssignTeam\"\n      class=\"text-light-errorMessage dark:text-dark-errorMessage mb-4 font-bold\"\n    >\n      Pas d'équipe disponible. Veuillez en créer de nouvelles ou réassigner des\n      utilisateurs.\n    </p>\n\n    <!-- Table pour afficher les utilisateurs -->\n    <div class=\"overflow-x-auto overflow-y-auto max-h-[70vh] mt-4\">\n      <table\n        class=\"min-w-full bg-light-card dark:bg-dark-card shadow rounded-lg\"\n      >\n        <thead>\n          <tr>\n            <!-- Colonne Edit -->\n            <th\n              class=\"px-2 py-2 text-center text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Edit\n            </th>\n            <!-- Colonne Nom -->\n            <th\n              class=\"px-4 py-2 text-left text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Nom\n            </th>\n            <!-- Colonne Email -->\n            <th\n              class=\"px-4 py-2 text-left text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Email\n            </th>\n            <!-- Colonne Téléphone -->\n            <th\n              v-if=\"showPhone\"\n              class=\"px-4 py-2 text-left text-light-title dark:text-dark-title hidden md:table-cell border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Téléphone\n            </th>\n            <!-- Colonne Tournois -->\n            <th\n              v-if=\"showTourney\"\n              class=\"px-4 py-2 text-left text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Tournois\n            </th>\n            <!-- Colonne Ajouter au Tournoi -->\n            <th\n              v-if=\"showAssignTourney\"\n              class=\"px-4 py-2 text-left text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Ajouter au Tournoi\n            </th>\n            <!-- Colonne Équipe (affichée uniquement si enableAssignTeam est true) -->\n            <th\n              v-if=\"enableAssignTeam\"\n              class=\"px-4 py-2 text-center text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Équipe\n            </th>\n            <!-- Colonne Suppression -->\n            <th\n              class=\"px-2 py-2 text-center text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n            >\n              Del\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            v-for=\"user in displayedUsers\"\n            :key=\"user.id\"\n            class=\"hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground\"\n          >\n            <!-- Colonne Edit -->\n            <td class=\"px-2 py-2 text-center\">\n              <SoftButtonComponent\n                fontAwesomeIcon=\"pen\"\n                iconClass=\"w-5 h-5 text-light-buttonVariants-warning-default hover:text-light-buttonVariants-warning-hover dark:text-dark-buttonVariants-warning-default hover:dark:text-dark-buttonVariants-warning-hover\"\n                aria-label=\"Éditer l'utilisateur\"\n                @click=\"handleEditClick(user)\"\n              />\n            </td>\n            <!-- Colonne Username -->\n            <td class=\"px-4 py-2\">\n              <span\n                v-if=\"user.role.id === 1\"\n                class=\"mr-1 px-2 py-1 text-xs font-semibold text-white bg-light-buttonVariants-info-default dark:bg-dark-buttonVariants-info-default rounded-full\"\n              >\n                Admin\n              </span>\n              <router-link\n                :to=\"`/admin/users/${user.id}`\"\n                class=\"text-blue-600 dark:text-blue-400 hover:underline\"\n              >\n                {{ user.name || 'N/A' }}\n              </router-link>\n            </td>\n            <!-- Colonne Email -->\n            <td class=\"px-4 py-2 truncate\">\n              <a\n                :href=\"`mailto:${user.email}`\"\n                class=\"text-blue-500 dark:text-blue-400 hover:underline\"\n              >\n                {{ user.email || '-' }}\n              </a>\n            </td>\n\n            <!-- Colonne Tournois -->\n            <td v-if=\"showTourney\" class=\"px-4 py-2 max-h-24 overflow-y-auto\">\n              <ul>\n                <li\n                  v-for=\"userTourney in user.usersTourneys || []\"\n                  :key=\"userTourney.tourney.id\"\n                  class=\"flex items-center space-x-2\"\n                >\n                  <span>{{ userTourney.tourney.name }}</span>\n                  <SoftButtonComponent\n                    fontAwesomeIcon=\"fa-times\"\n                    iconClass=\"w-4 h-4 text-light-logoutButton-default hover:text-light-logoutButton-hover dark:text-dark-logoutButton-default hover:dark:text-dark-logoutButton-hover\"\n                    aria-label=\"Retirer du tournoi\"\n                    @click=\"\n                      confirmRemoveFromTourney(user.id, userTourney.tourney.id)\n                    \"\n                  />\n                </li>\n              </ul>\n            </td>\n            <!-- Colonne Ajouter au Tournoi -->\n            <td\n              v-if=\"showAssignTourney\"\n              class=\"px-4 py-2 flex items-center space-x-2\"\n            >\n              <v-select\n                v-model=\"selectedTourneyIds[user.id]\"\n                :options=\"availableTourneys[user.id]\"\n                placeholder=\"Tournoi\"\n                label=\"name\"\n                :reduce=\"(tourney) => tourney.id\"\n                appendToBody\n                clearable\n                class=\"w-full sm:w-48\"\n              />\n              <ButtonComponent\n                variant=\"primary\"\n                size=\"sm\"\n                heroIcon=\"PlusIcon\"\n                @click=\"assignTourney(user.id)\"\n                :disabled=\"!selectedTourneyIds[user.id]\"\n              />\n            </td>\n            <!-- Colonne Phone -->\n            <td v-if=\"showPhone\" class=\"px-4 py-2 hidden md:table-cell\">\n              {{ user.phone || '-' }}\n            </td>\n            <!-- Colonne Équipe -->\n            <td\n              v-if=\"enableAssignTeam\"\n              class=\"px-4 py-2 flex items-center justify-center space-x-2\"\n            >\n              <!-- Sélecteur d'équipe -->\n              <v-select\n                v-if=\"\n                  availableTeams.length > 0 &&\n                  teamSetup &&\n                  allowAssignToOtherTeams\n                \"\n                v-model=\"localSelectedTeamIds[user.id]\"\n                :options=\"teamOptions\"\n                placeholder=\"Select Team\"\n                appendToBody\n                :reduce=\"(team) => team.id\"\n                label=\"teamName\"\n                :styles=\"{\n                  dropdown: {\n                    'max-height': '200px',\n                    'overflow-y': 'auto',\n                  },\n                }\"\n                :class=\"[\n                  'border border-light-form-border dark:border-dark-form-border rounded-md p-1 w-48 sm:w-56',\n                  'bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text ring-indigo-500',\n                  'cursor-pointer',\n                ]\"\n                @update:modelValue=\"onTeamSelectionChange(user.id, $event)\"\n              />\n              <!-- Bouton Assigner -->\n              <ButtonComponent\n                fontAwesomeIcon=\"add\"\n                v-if=\"availableTeams.length > 0 && allowAssignToOtherTeams\"\n                variant=\"primary\"\n                @click=\"assignTeam(user.id)\"\n                :disabled=\"localSelectedTeamIds[user.id] === user.teamId\"\n              >\n                <span class=\"hidden md:inline\">Assigner</span>\n              </ButtonComponent>\n              <!-- Bouton Désactivé si aucune équipe disponible -->\n              <ButtonComponent\n                v-else\n                :fontAwesomeIcon=\"'ban'\"\n                variant=\"gray\"\n                :disabled=\"true\"\n              >\n                <span class=\"hidden sm:inline\">Aucune équipe</span>\n              </ButtonComponent>\n            </td>\n            <!-- Colonne Supprimer -->\n            <td class=\"px-2 py-2 text-center\">\n              <SoftButtonComponent\n                v-if=\"enableRemoveUser\"\n                fontAwesomeIcon=\"trash\"\n                iconClass=\"w-5 h-5 text-light-buttonVariants-danger-default hover:text-light-buttonVariants-danger-hover dark:text-dark-buttonVariants-danger-default hover:dark:text-dark-buttonVariants-danger-hover\"\n                aria-label=\"Supprimer l'utilisateur\"\n                @click=\"confirmDelete(user.id)\"\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Confirmation modal pour suppression -->\n    <DeleteConfirmationModal\n      :isVisible=\"showDeleteModal\"\n      :title=\"deleteModalTitle\"\n      :message=\"deleteModalMessage\"\n      @confirm=\"deleteUser\"\n      @form-cancel=\"closeDeleteModal\"\n    />\n\n    <!-- Confirmation modal pour retirer un utilisateur d'un tournoi -->\n    <DeleteConfirmationModal\n      :isVisible=\"showRemoveFromTourneyModal\"\n      title=\"Confirmer le retrait\"\n      message=\"Êtes-vous sûr de vouloir retirer cet utilisateur du tournoi?\"\n      @confirm=\"removeUserFromTourney\"\n      @form-cancel=\"closeRemoveFromTourneyModal\"\n    />\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import SoftButtonComponent from '@/components/SoftButtonComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      TitleComponent,\n      ButtonComponent,\n      SoftButtonComponent,\n      DeleteConfirmationModal,\n    },\n    props: {\n      title: {\n        type: String,\n        default: 'Liste des utilisateurs',\n      },\n      users: {\n        type: Array,\n        required: true,\n        default: () => [],\n      },\n      teams: {\n        type: Array,\n        required: false,\n        default: () => [],\n      },\n      teamSetup: {\n        type: Object,\n        required: false,\n        default: null,\n      },\n      enableAssignTeam: {\n        type: Boolean,\n        default: true,\n      },\n      allowAssignToOtherTeams: {\n        type: Boolean,\n        default: true,\n      },\n      enableRemoveUser: {\n        type: Boolean,\n        default: true,\n      },\n      backButtonText: {\n        type: String,\n        default: 'Retour',\n      },\n      deleteModalTitle: {\n        type: String,\n        default: 'Confirmer la suppression',\n      },\n      deleteModalMessage: {\n        type: String,\n        default: 'Êtes-vous sûr de vouloir supprimer cet utilisateur?',\n      },\n      showEmailButton: {\n        type: Boolean,\n        default: true,\n      },\n      showBackButton: {\n        type: Boolean,\n        default: true,\n      },\n      showPhone: {\n        type: Boolean,\n        default: true,\n      },\n      showFilters: {\n        type: Boolean,\n        default: false,\n      },\n      showTourney: {\n        type: Boolean,\n        default: false,\n      },\n      showAssignTourney: {\n        type: Boolean,\n        default: false,\n      },\n      tournaments: {\n        type: Array,\n        required: false,\n        default: () => [],\n      },\n      editUserFunction: {\n        type: Function,\n        default: null,\n      },\n      addUserFunction: {\n        type: Function,\n        default: null,\n      },\n      enableAddUser: {\n        type: Boolean,\n        default: false,\n      },\n      selectedTeamIds: {\n        type: Object,\n        default: () => ({}),\n      },\n    },\n    emits: [\n      'go-back',\n      'assign-team',\n      'delete-user',\n      'validate-assignments',\n      'assign-tourney',\n      'remove-user-from-tourney',\n      'user-updated',\n      'update:selectedTeamIds',\n    ],\n    data() {\n      return {\n        showDeleteModal: false,\n        userIdToDelete: null,\n        isAutoFilled: false,\n        initialSelectedTeamIds: {},\n        selectedTournamentFilter: null,\n        searchQuery: '',\n        filterNoTournament: false,\n        tournamentOptions: [],\n        selectedTourneyIds: {},\n        localSelectedTeamIds: {},\n        availableTourneys: {},\n        showRemoveFromTourneyModal: false,\n        userIdToRemoveFromTourney: null,\n        tourneyIdToRemove: null,\n\n        // Handle form edit for user creation/update\n        showEditUserModal: false,\n        editingUser: null,\n        newUser: {\n          name: '',\n          email: '',\n          phone: '',\n          password: '',\n          roleId: '',\n        },\n        formErrors: {},\n        isFormValid: false,\n      };\n    },\n    computed: {\n      /**\n       * Retourne les équipes disponibles pour l'assignation.\n       * @returns {Array}\n       */\n      availableTeams() {\n        if (!this.teamSetup) return [];\n\n        const currentTeamIds = this.users\n          .map((user) => user.teamId)\n          .filter((teamId) => teamId != null);\n\n        return this.teams.filter((team) => {\n          const isCurrentTeam = currentTeamIds.includes(team.id);\n          const hasSpace =\n            (team.usersTourneys ? team.usersTourneys.length : 0) <\n            this.getTeamCapacity(team);\n          return isCurrentTeam || hasSpace;\n        });\n      },\n\n      /**\n       * Options pour le sélecteur d'équipes.\n       * @returns {Array}\n       */\n      teamOptions() {\n        return this.availableTeams.map((team) => {\n          const capacity = this.getTeamCapacity(team);\n          return {\n            id: team.id,\n            teamName: `${team.teamName} (${team.usersTourneys.length}/${capacity})`,\n          };\n        });\n      },\n\n      /**\n       * Indique s'il y a des équipes disponibles.\n       * @returns {Boolean}\n       */\n      hasAvailableTeams() {\n        return this.availableTeams.length > 0;\n      },\n\n      /**\n       * Utilisateurs à afficher en fonction des filtres.\n       * @returns {Array}\n       */\n      displayedUsers() {\n        return this.showFilters ? this.filteredUsers : this.users;\n      },\n\n      /**\n       * Utilisateurs filtrés.\n       * @returns {Array}\n       */\n      filteredUsers() {\n        let filtered = this.users;\n\n        if (this.selectedTournamentFilter) {\n          filtered = filtered.filter((user) =>\n            user.usersTourneys?.some(\n              (ut) => ut.tourney.id === this.selectedTournamentFilter\n            )\n          );\n        }\n\n        if (this.filterNoTournament) {\n          filtered = filtered.filter(\n            (user) => !user.usersTourneys || user.usersTourneys.length === 0\n          );\n        }\n\n        if (this.searchQuery) {\n          const query = this.searchQuery.toLowerCase();\n          filtered = filtered.filter(\n            (user) =>\n              (user.name && user.name.toLowerCase().includes(query)) ||\n              (user.email && user.email.toLowerCase().includes(query))\n          );\n        }\n\n        return filtered;\n      },\n      userFormFields() {\n        return [\n          {\n            name: 'name',\n            label: 'Nom',\n            type: 'text',\n            required: true,\n          },\n          {\n            name: 'email',\n            label: 'Email',\n            type: 'email',\n            required: true,\n          },\n          {\n            name: 'phone',\n            label: 'Téléphone',\n            type: 'text',\n            required: false,\n          },\n          {\n            name: 'password',\n            label: 'Mot de passe',\n            type: 'password',\n            required: false,\n          },\n          {\n            name: 'roleId',\n            label: 'Rôle',\n            type: 'select',\n            required: true,\n            options: [\n              { value: 1, label: 'Admin' },\n              { value: 2, label: 'Utilisateur' },\n            ],\n          },\n        ];\n      },\n    },\n    methods: {\n      /**\n       * Retourne la capacité maximale d'une équipe.\n       * @param {Object} team - L'équipe.\n       * @returns {Number}\n       */\n      getTeamCapacity(team) {\n        if (team.type === 'assistant') {\n          return this.teamSetup.playerPerTeam * this.teamSetup.maxTeamNumber;\n        }\n        return this.teamSetup.playerPerTeam;\n      },\n\n      /**\n       * Émet l'événement pour retourner en arrière.\n       */\n      goBack() {\n        this.$emit('go-back');\n      },\n\n      /**\n       * Assigne un utilisateur à une équipe.\n       * @param {Number} userId - ID de l'utilisateur.\n       */\n      assignTeam(userId) {\n        const teamId = this.localSelectedTeamIds[userId];\n        if (teamId) {\n          this.$emit('assign-team', { userId, teamId });\n          // Remove the entry after assignment\n          const newSelectedTeamIds = { ...this.localSelectedTeamIds };\n          delete newSelectedTeamIds[userId];\n          this.localSelectedTeamIds = newSelectedTeamIds;\n          this.$emit('update:selectedTeamIds', this.localSelectedTeamIds);\n        } else {\n          toast.info('Veuillez sélectionner une équipe pour cet utilisateur.');\n        }\n      },\n\n      /**\n       * Ouvre la modale de confirmation de suppression d'un utilisateur.\n       * @param {Number} userId - ID de l'utilisateur à supprimer.\n       */\n      confirmDelete(userId) {\n        const user = this.users.find((u) => u.id == userId);\n        const currentUserId = this.$store.state.user.id;\n        // Vérifier si l'utilisateur est un admin et si le super admin est le seul à pouvoir le supprimer\n        if (user && user.role.id === 1 && currentUserId !== 1) {\n          toast.error(\n            'Seul le super admin peut supprimer un autre administrateur.'\n          );\n          return;\n        }\n\n        this.userIdToDelete = userId;\n        this.showDeleteModal = true;\n      },\n\n      onTeamSelectionChange(userId, teamId) {\n        this.localSelectedTeamIds[userId] = teamId;\n        this.$emit('update:selectedTeamIds', { ...this.localSelectedTeamIds });\n      },\n\n      /**\n       * Supprime l'utilisateur après confirmation.\n       */\n      deleteUser() {\n        if (this.userIdToDelete !== null) {\n          this.$emit('delete-user', this.userIdToDelete);\n          this.closeDeleteModal();\n        }\n      },\n\n      /**\n       * Ferme la modale de suppression.\n       */\n      closeDeleteModal() {\n        this.showDeleteModal = false;\n        this.userIdToDelete = null;\n      },\n\n      /**\n       * Envoie un email à tous les utilisateurs.\n       */\n      sendEmailToAll() {\n        const emails = this.users\n          .map((user) => user.email)\n          .filter((email) => email);\n        if (emails.length === 0) {\n          toast.error(\"Il n'y a aucun utilisateur pour envoyer un email.\");\n          return;\n        }\n        const mailtoLink = `mailto:${emails.join(',')}`;\n        window.location.href = mailtoLink;\n      },\n\n      /**\n       * Gère le clic sur le bouton d'édition d'un utilisateur.\n       * @param {Object} user - L'utilisateur à éditer.\n       */\n      handleEditClick(user) {\n        if (this.editUserFunction) {\n          this.editUserFunction(user);\n        } else {\n          this.navigateToEdit(user.id);\n        }\n      },\n\n      /**\n       * Ouvre la modale d'ajout d'un utilisateur.\n       */\n      handleAddUserClick() {\n        if (this.addUserFunction) {\n          this.addUserFunction();\n        }\n      },\n\n      /**\n       * Navigation vers la page d'édition.\n       * @param {Number} userId - ID de l'utilisateur.\n       */\n      navigateToEdit(userId) {\n        this.$router.push(`/admin/users/${userId}`);\n      },\n\n      validateAssignments() {\n        const assignments = Object.entries(this.selectedTeamIds)\n          .filter(([teamId]) => teamId !== null && teamId !== undefined)\n          .map(([userId, teamId]) => ({\n            userId: Number(userId),\n            teamId,\n          }));\n        this.$emit('validate-assignments', assignments);\n        this.isAutoFilled = false;\n        this.initialSelectedTeamIds = {};\n      },\n      updateSelectedTeamId(userId, teamId) {\n        this.localSelectedTeamIds = {\n          ...this.localSelectedTeamIds,\n          [userId]: teamId,\n        };\n        this.$emit('update:selectedTeamIds', this.localSelectedTeamIds);\n      },\n\n      /**\n       * Charge les tournois disponibles pour chaque utilisateur.\n       * @returns {Promise<void>}\n       */\n      async loadAvailableTourneys() {\n        const allTourneys = this.tournaments;\n        this.users.forEach((user) => {\n          const userTourneys = (user.usersTourneys || []).map(\n            (ut) => ut.tourney.id\n          );\n          this.availableTourneys[user.id] = allTourneys.filter(\n            (tourney) => !userTourneys.includes(tourney.id)\n          );\n        });\n      },\n\n      /**\n       * Assigne un utilisateur à un tournoi.\n       * @param {Number} userId - ID de l'utilisateur.\n       */\n      assignTourney(userId) {\n        const tourneyId = this.selectedTourneyIds[userId];\n        if (tourneyId) {\n          this.$emit('assign-tourney', { userId, tourneyId });\n          this.selectedTourneyIds[userId] = null;\n          this.loadAvailableTourneys();\n        } else {\n          toast.info('Veuillez sélectionner un tournoi.');\n        }\n      },\n\n      /**\n       * Ouvre la modale de confirmation pour retirer un utilisateur d'un tournoi.\n       * @param {Number} userId - ID de l'utilisateur.\n       * @param {Number} tourneyId - ID du tournoi.\n       */\n      confirmRemoveFromTourney(userId, tourneyId) {\n        this.userIdToRemoveFromTourney = userId;\n        this.tourneyIdToRemove = tourneyId;\n        this.showRemoveFromTourneyModal = true;\n      },\n\n      /**\n       * Retire un utilisateur d'un tournoi après confirmation.\n       */\n      removeUserFromTourney() {\n        if (\n          this.userIdToRemoveFromTourney !== null &&\n          this.tourneyIdToRemove !== null\n        ) {\n          this.$emit('remove-user-from-tourney', {\n            userId: this.userIdToRemoveFromTourney,\n            tourneyId: this.tourneyIdToRemove,\n          });\n          this.closeRemoveFromTourneyModal();\n          this.loadAvailableTourneys();\n        }\n      },\n\n      closeRemoveFromTourneyModal() {\n        this.showRemoveFromTourneyModal = false;\n        this.userIdToRemoveFromTourney = null;\n        this.tourneyIdToRemove = null;\n      },\n\n      /*\n       * Fonctions pour la gestion des erreurs de formulaire\n       */\n      editUser(user) {\n        this.editingUser = user;\n        this.newUser = { ...user };\n        this.showEditUserModal = true;\n        this.formErrors = {};\n        this.isFormValid = true;\n      },\n\n      closeEditUserModal() {\n        this.showEditUserModal = false;\n        this.editingUser = null;\n        this.newUser = {\n          name: '',\n          email: '',\n          phone: '',\n        };\n      },\n\n      validateUserForm() {\n        const errors = {};\n        if (!this.newUser.name) {\n          errors.name = 'Le nom est obligatoire.';\n        }\n        if (!this.newUser.email) {\n          errors.email = \"L'email est obligatoire.\";\n        }\n        this.formErrors = errors;\n        this.isFormValid = Object.keys(errors).length === 0;\n        return errors;\n      },\n\n      async handleUserFormSubmit() {\n        this.validateUserForm();\n        if (!this.isFormValid) return;\n\n        try {\n          await apiService.put(`/users/${this.editingUser.id}`, this.newUser);\n          toast.success('Utilisateur mis à jour avec succès!');\n          this.closeEditUserModal();\n          this.$emit('user-updated');\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la mise à jour de l'utilisateur :\",\n            error\n          );\n          toast.error(\"Erreur lors de la mise à jour de l'utilisateur!\");\n        }\n      },\n    },\n    watch: {\n      /**\n       * Surveille les changements dans la liste des utilisateurs.\n       */\n      users: {\n        handler() {\n          if (this.showAssignTourney) {\n            this.loadAvailableTourneys();\n          }\n        },\n        immediate: true,\n      },\n\n      /**\n       * Surveille les changements dans la liste des tournois.\n       */\n      tournaments: {\n        handler(newTournaments) {\n          this.tournamentOptions = newTournaments;\n        },\n        immediate: true,\n      },\n\n      selectedTeamIds: {\n        handler(newVal) {\n          this.localSelectedTeamIds = { ...newVal };\n        },\n        deep: true,\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Remplacement des styles en ligne par des classes Tailwind */\n  table th,\n  table td {\n    padding: 0.5rem;\n    white-space: nowrap;\n  }\n</style>\n","<template>\n  <span\n    :class=\"[\n      'inline-flex items-center justify-center cursor-pointer transition-opacity',\n      disabled ? 'opacity-50 cursor-not-allowed' : '',\n    ]\"\n    :style=\"{ color: iconColor, fontSize: iconSize }\"\n    @click=\"!disabled && handleClick\"\n    role=\"button\"\n    :aria-label=\"ariaLabel\"\n  >\n    <font-awesome-icon\n      v-if=\"fontAwesomeIcon\"\n      :icon=\"['fas', fontAwesomeIcon]\"\n      :class=\"iconClass\"\n    />\n    <component v-if=\"heroIcon\" :is=\"icons[heroIcon]\" :class=\"iconClass\" />\n  </span>\n</template>\n\n<script>\n  import { TrashIcon, PencilIcon } from '@heroicons/vue/24/outline';\n\n  export default {\n    props: {\n      heroIcon: {\n        type: String,\n        default: null, // Utilisé pour HeroIcons\n      },\n      fontAwesomeIcon: {\n        type: String,\n        default: null, // Utilisé pour FontAwesome\n      },\n      iconColor: {\n        type: String,\n        default: 'currentColor',\n      },\n      iconSize: {\n        type: String,\n        default: '1em',\n      },\n      iconClass: {\n        type: String,\n        default: 'w-5 h-5',\n      },\n      ariaLabel: {\n        type: String,\n        default: '',\n      },\n      disabled: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data() {\n      return {\n        icons: {\n          TrashIcon,\n          PencilIcon,\n        },\n      };\n    },\n    methods: {\n      handleClick() {\n        this.$emit('click');\n      },\n    },\n  };\n</script>\n","import { render } from \"./SoftButtonComponent.vue?vue&type=template&id=00779708\"\nimport script from \"./SoftButtonComponent.vue?vue&type=script&lang=js\"\nexport * from \"./SoftButtonComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ListUsersTable.vue?vue&type=template&id=3762bf68&scoped=true\"\nimport script from \"./ListUsersTable.vue?vue&type=script&lang=js\"\nexport * from \"./ListUsersTable.vue?vue&type=script&lang=js\"\n\nimport \"./ListUsersTable.vue?vue&type=style&index=0&id=3762bf68&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3762bf68\"]])\n\nexport default __exports__","import { render } from \"./AdminUserList.vue?vue&type=template&id=d918a320\"\nimport script from \"./AdminUserList.vue?vue&type=script&lang=js\"\nexport * from \"./AdminUserList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div v-if=\"userId !== null\">\n    <ProfilePageComponent :userId=\"userId\" :isAdmin=\"true\" />\n  </div>\n  <div v-else>\n    <p>Vous avez été déconnecté.</p>\n  </div>\n</template>\n\n<script>\n  import ProfilePageComponent from '@/components/ProfilePageComponent.vue';\n  export default {\n    components: {\n      ProfilePageComponent,\n    },\n    computed: {\n      userId() {\n        const id = this.$route.params.userId;\n        const userId = id ? Number(id) : null;\n        if (isNaN(userId)) {\n          return null;\n        }\n        return userId;\n      },\n    },\n  };\n</script>\n","<template>\n  <div class=\"max-w-5xl mx-auto p-4\">\n    <h1 class=\"text-3xl font-bold mb-6\">{{ pageTitle }}</h1>\n    <div class=\"flex flex-col md:flex-row\">\n      <!-- Colonne gauche : Informations utilisateur -->\n      <div class=\"w-full md:w-1/2 md:pr-4\">\n        <h2 class=\"text-2xl font-semibold mb-4\">Informations</h2>\n        <div class=\"space-y-6\">\n          <!-- Champ Nom -->\n          <div>\n            <div class=\"flex items-center\">\n              <label class=\"block text-lg font-medium\">Nom</label>\n              <SoftButtonComponent\n                fontAwesomeIcon=\"fa-pen-alt\"\n                iconClass=\"w-4 h-4 ml-2\"\n                @click=\"toggleEdit('name')\"\n                v-if=\"!editingField.name\"\n              />\n            </div>\n            <div class=\"flex items-center\">\n              <span v-if=\"!editingField.name\" @click=\"toggleEdit('name')\">\n                {{ userData.name }}\n              </span>\n              <div v-else class=\"flex items-center w-full\">\n                <input\n                  v-model=\"userData.name\"\n                  type=\"text\"\n                  class=\"form-input mt-1 block w-full\"\n                />\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"fa-check\"\n                  iconClass=\"w-5 h-5 text-green-500 ml-2\"\n                  @click=\"saveField('name')\"\n                />\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"times\"\n                  iconClass=\"w-5 h-5 text-red-500 ml-2\"\n                  @click=\"cancelEdit('name')\"\n                />\n              </div>\n            </div>\n          </div>\n          <!-- Champ Email -->\n          <div>\n            <div class=\"flex items-center\">\n              <label class=\"block text-lg font-medium\">Email</label>\n              <SoftButtonComponent\n                v-if=\"canEditEmail && !editingField.email\"\n                fontAwesomeIcon=\"fa-pen-alt\"\n                iconClass=\"w-4 h-4 ml-2\"\n                @click=\"toggleEdit('email')\"\n              />\n            </div>\n            <div class=\"flex items-center\">\n              <span\n                v-if=\"!editingField.email\"\n                @click=\"canEditEmail ? toggleEdit('email') : null\"\n              >\n                {{ userData.email }}\n              </span>\n              <div v-else class=\"flex items-center w-full\">\n                <input\n                  v-model=\"userData.email\"\n                  type=\"email\"\n                  class=\"form-input mt-1 block w-full\"\n                  :disabled=\"!canEditEmail\"\n                />\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"check\"\n                  iconClass=\"w-5 h-5 text-green-500 ml-2\"\n                  @click=\"saveField('email')\"\n                />\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"times\"\n                  iconClass=\"w-5 h-5 text-red-500 ml-2\"\n                  @click=\"cancelEdit('email')\"\n                />\n              </div>\n            </div>\n          </div>\n          <!-- Champ Téléphone -->\n          <div>\n            <div class=\"flex items-center\">\n              <label class=\"block text-lg font-medium\">Téléphone</label>\n              <SoftButtonComponent\n                fontAwesomeIcon=\"fa-pen-alt\"\n                iconClass=\"w-4 h-4 ml-2 cursor-pointer\"\n                @click=\"toggleEdit('phone')\"\n                v-if=\"!editingField.phone\"\n              />\n            </div>\n            <div class=\"flex items-center\">\n              <span v-if=\"!editingField.phone\" @click=\"toggleEdit('phone')\">\n                {{ userData.phone || 'Non renseigné' }}\n              </span>\n              <div v-else class=\"flex items-center w-full\">\n                <input\n                  v-model=\"userData.phone\"\n                  type=\"text\"\n                  class=\"form-input mt-1 block w-full\"\n                />\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"check\"\n                  iconClass=\"w-5 h-5 text-green-500 ml-2\"\n                  @click=\"saveField('phone')\"\n                />\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"times\"\n                  iconClass=\"w-5 h-5 text-red-500 ml-2\"\n                  @click=\"cancelEdit('phone')\"\n                />\n              </div>\n            </div>\n          </div>\n          <!-- Changement de mot de passe -->\n          <div>\n            <div class=\"flex items-center\">\n              <label class=\"block text-lg font-medium\">Mot de passe</label>\n              <SoftButtonComponent\n                fontAwesomeIcon=\"fa-pen-alt\"\n                iconClass=\"w-4 h-4 ml-2\"\n                @click=\"toggleEdit('password')\"\n                v-if=\"!editingField.password\"\n              />\n            </div>\n            <div class=\"flex items-center\">\n              <span\n                v-if=\"!editingField.password\"\n                @click=\"toggleEdit('password')\"\n              >\n                ••••••••\n              </span>\n              <div v-else class=\"w-full\">\n                <!-- Ancien mot de passe (uniquement pour les utilisateurs non-admin) -->\n                <input\n                  v-if=\"!isAdmin\"\n                  v-model=\"passwordData.oldPassword\"\n                  type=\"password\"\n                  placeholder=\"Ancien mot de passe\"\n                  class=\"form-input block w-full mt-1\"\n                />\n                <input\n                  v-model=\"passwordData.newPassword\"\n                  type=\"password\"\n                  placeholder=\"Nouveau mot de passe\"\n                  class=\"form-input block w-full mt-1\"\n                />\n                <input\n                  v-model=\"passwordData.confirmPassword\"\n                  type=\"password\"\n                  placeholder=\"Confirmer le nouveau mot de passe\"\n                  class=\"form-input block w-full mt-1\"\n                />\n                <div class=\"flex space-x-2 mt-2\">\n                  <SoftButtonComponent\n                    fontAwesomeIcon=\"check\"\n                    iconClass=\"w-5 h-5 text-green-500\"\n                    @click=\"updatePassword\"\n                  />\n                  <SoftButtonComponent\n                    fontAwesomeIcon=\"times\"\n                    iconClass=\"w-5 h-5 text-red-500\"\n                    @click=\"cancelEdit('password')\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- Changer le rôle (uniquement pour les administrateurs) -->\n          <div v-if=\"isAdmin\">\n            <div class=\"flex items-center\">\n              <label\n                class=\"block text-lg font-medium text-light-form-text dark:text-dark-form-text\"\n                >Rôle</label\n              >\n              <SoftButtonComponent\n                fontAwesomeIcon=\"fa-pen-alt\"\n                iconClass=\"w-4 h-4 ml-2 cursor-pointer\"\n                @click=\"toggleEdit('role')\"\n                v-if=\"!editingField.role\"\n              />\n            </div>\n            <div class=\"flex items-center\">\n              <span\n                v-if=\"!editingField.role\"\n                class=\"text-gray-900 dark:text-gray-100\"\n                @click=\"toggleEdit('role')\"\n              >\n                {{ userData.roleName }}\n              </span>\n              <div v-else class=\"flex items-center w-full\">\n                <select\n                  v-model=\"userData.roleId\"\n                  class=\"form-select mt-1 block w-full\"\n                >\n                  <option v-for=\"role in roles\" :key=\"role.id\" :value=\"role.id\">\n                    {{ role.name }}\n                  </option>\n                </select>\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"check\"\n                  iconClass=\"w-5 h-5 text-green-500 ml-2 cursor-pointer\"\n                  @click=\"saveField('roleId')\"\n                />\n                <SoftButtonComponent\n                  fontAwesomeIcon=\"times\"\n                  iconClass=\"w-5 h-5 text-red-500 ml-2 cursor-pointer\"\n                  @click=\"cancelEdit('role')\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Colonne droite : Tournois -->\n      <div class=\"w-full md:w-1/2 md:pl-4 mt-8 md:mt-0\">\n        <h2 class=\"text-2xl font-semibold mb-4\">Tournois Inscrits</h2>\n        <!-- Si l'utilisateur n'est pas admin, on affiche simplement la liste des tournois -->\n        <div v-if=\"!isAdmin\">\n          <ul>\n            <li\n              v-for=\"tourney in userTournaments\"\n              :key=\"tourney.id\"\n              class=\"border-b border-gray-300 py-2\"\n            >\n              {{ tourney.name }}\n            </li>\n          </ul>\n        </div>\n        <!-- Si l'utilisateur est admin, on affiche les tournois avec possibilité d'assigner/retirer -->\n        <div v-else>\n          <!-- Assignation à un tournoi -->\n          <div class=\"mb-4\">\n            <label\n              class=\"block text-lg font-medium text-light-form-text dark:text-dark-form-text\"\n              >Ajouter au tournoi</label\n            >\n            <div class=\"flex items-center\">\n              <v-select\n                v-model=\"selectedTourneyId\"\n                :options=\"availableTourneys\"\n                placeholder=\"Sélectionnez un tournoi\"\n                label=\"name\"\n                :reduce=\"(t) => t.id\"\n                clearable\n                class=\"w-full sm:w-64\"\n              />\n              <ButtonComponent\n                class=\"ml-2\"\n                variant=\"success\"\n                size=\"sm\"\n                @click=\"assignTourney\"\n                :disabled=\"!selectedTourneyId\"\n              >\n                Ajouter\n              </ButtonComponent>\n            </div>\n          </div>\n          <!-- Liste des tournois avec option de retrait -->\n          <ul>\n            <li\n              v-for=\"tourney in userTournaments\"\n              :key=\"tourney.id\"\n              class=\"border-b py-2 flex justify-between items-center\"\n            >\n              <span>{{ tourney.name }}</span>\n              <SoftButtonComponent\n                fontAwesomeIcon=\"trash\"\n                iconClass=\"w-5 h-5 text-red-500 hover:text-red-700\"\n                aria-label=\"Retirer du tournoi\"\n                @click=\"confirmRemoveFromTourney(tourney.id)\"\n              />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <!-- Actions administrateur (uniquement pour les administrateurs) -->\n    <div v-if=\"isAdmin && userId !== currentUserId\" class=\"mt-8\">\n      <h2 class=\"text-2xl font-semibold mb-4\">Actions administrateur</h2>\n      <ButtonComponent variant=\"danger\" size=\"sm\" @click=\"confirmDeleteUser\">\n        Supprimer l'utilisateur\n      </ButtonComponent>\n    </div>\n\n    <!-- Modale de confirmation pour la suppression -->\n    <DeleteConfirmationModal\n      :isVisible=\"showDeleteModal\"\n      title=\"Confirmer la suppression\"\n      message=\"Êtes-vous sûr de vouloir supprimer cet utilisateur ?\"\n      @confirm=\"deleteUser\"\n      @form-cancel=\"closeDeleteModal\"\n    />\n\n    <!-- Modale de confirmation pour retirer du tournoi -->\n    <DeleteConfirmationModal\n      :isVisible=\"showRemoveFromTourneyModal\"\n      title=\"Confirmer le retrait\"\n      message=\"Êtes-vous sûr de vouloir retirer l'utilisateur de ce tournoi ?\"\n      @confirm=\"removeUserFromTourney\"\n      @form-cancel=\"closeRemoveFromTourneyModal\"\n    />\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import { toast } from 'vue3-toastify';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import SoftButtonComponent from '@/components/SoftButtonComponent.vue';\n\n  export default {\n    components: {\n      DeleteConfirmationModal,\n      ButtonComponent,\n      SoftButtonComponent,\n    },\n    props: {\n      userId: {\n        type: Number,\n        required: true,\n      },\n      isAdmin: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data() {\n      return {\n        userData: {\n          name: '',\n          email: '',\n          phone: '',\n          roleId: null,\n          roleName: '',\n        },\n        originalUserData: {}, // Pour stocker les données originales\n        passwordData: {\n          oldPassword: '',\n          newPassword: '',\n          confirmPassword: '',\n        },\n        userTournaments: [],\n        availableTourneys: [],\n        selectedTourneyId: null,\n        roles: [],\n        editingField: {\n          name: false,\n          email: false,\n          phone: false,\n          password: false,\n          role: false,\n        },\n        showDeleteModal: false,\n        showRemoveFromTourneyModal: false,\n        tourneyIdToRemove: null,\n      };\n    },\n    computed: {\n      pageTitle() {\n        return this.isAdmin ? \"Profil de l'utilisateur\" : 'Mon Profil';\n      },\n      canEditEmail() {\n        // Pour permettre aux utilisateurs de modifier leur email, changer cette valeur\n        return this.isAdmin;\n      },\n      currentUserId() {\n        return this.$store.state.user ? this.$store.state.user.id : null;\n      },\n    },\n    async created() {\n      await this.fetchUserData();\n      if (this.userNotFound) {\n        // Ne pas exécuter le reste du code si l'utilisateur n'existe pas\n        return;\n      }\n      if (this.isAdmin) {\n        await this.fetchAvailableTourneys();\n        await this.fetchRoles();\n      }\n    },\n    methods: {\n      /**\n       * Récupère les données de l'utilisateur depuis l'API.\n       */\n      async fetchUserData() {\n        try {\n          const response = await apiService.get(`/users/${this.userId}`);\n          const user = response.data;\n          this.userData = {\n            name: user.name || '',\n            email: user.email || '',\n            phone: user.phone || '',\n            roleId: user.roleId,\n            roleName: user.role ? user.role.name : '',\n          };\n          this.userTournaments = user.usersTourneys\n            ? user.usersTourneys.map((ut) => ut.tourney)\n            : [];\n          // Stocker une copie des données originales pour annuler les modifications\n          this.originalUserData = { ...this.userData };\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des données utilisateur:',\n            error\n          );\n          if (error.response && error.response.status === 404) {\n            // Rediriger vers la page 404\n            this.$router.push('/404');\n          } else {\n            // Afficher un message d'erreur général\n            toast.error(\n              'Une erreur est survenue lors de la récupération des données.'\n            );\n          }\n        }\n      },\n      /**\n       * Récupère les tournois disponibles pour l'assignation.\n       */\n      async fetchAvailableTourneys() {\n        try {\n          const response = await apiService.get('/tourneys');\n          const userTourneyIds = this.userTournaments.map((t) => t.id);\n          this.availableTourneys = response.data.filter(\n            (t) => !userTourneyIds.includes(t.id)\n          );\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des tournois disponibles:',\n            error\n          );\n        }\n      },\n      /**\n       * Récupère les rôles disponibles.\n       */\n      async fetchRoles() {\n        try {\n          const response = await apiService.get('/roles');\n          this.roles = response.data;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des rôles:', error);\n        }\n      },\n      /**\n       * Basculer le mode édition pour un champ donné.\n       * @param {String} field - Le champ à éditer.\n       */\n      toggleEdit(field) {\n        this.editingField[field] = true;\n      },\n      /**\n       * Enregistre les modifications pour un champ.\n       * @param {String} field - Le champ à sauvegarder.\n       */\n      async saveField(field) {\n        await this.updateField(field);\n        this.editingField[field] = false;\n      },\n      /**\n       * Annule les modifications pour un champ.\n       * @param {String} field - Le champ à annuler.\n       */\n      cancelEdit(field) {\n        this.userData[field] = this.originalUserData[field];\n        this.editingField[field] = false;\n      },\n      /**\n       * Met à jour un champ individuel de l'utilisateur.\n       * @param {String} field - Le champ à mettre à jour.\n       */\n      async updateField(field) {\n        try {\n          const payload = {\n            [field]: this.userData[field],\n          };\n          await apiService.put(`/users/${this.userId}`, payload);\n          toast.success('Informations mises à jour avec succès!');\n\n          // Si le champ modifié est le nom et que l'utilisateur est le même que celui du store\n          if (field === 'name' && this.$store.state.user.id === this.userId) {\n            this.$store.commit('UPDATE_USER_NAME', this.userData.name);\n          }\n\n          if (field === 'roleId') {\n            // Mettre à jour le nom du rôle\n            const selectedRole = this.roles.find(\n              (role) => role.id === this.userData.roleId\n            );\n            this.userData.roleName = selectedRole ? selectedRole.name : '';\n          }\n          // Mettre à jour les données originales\n          this.originalUserData[field] = this.userData[field];\n        } catch (error) {\n          console.error(\n            'Erreur lors de la mise à jour des informations:',\n            error\n          );\n          toast.error('Une erreur est survenue lors de la mise à jour.');\n          // Restaurer la valeur originale en cas d'erreur\n          this.userData[field] = this.originalUserData[field];\n        }\n      },\n      /**\n       * Met à jour le mot de passe de l'utilisateur.\n       */\n      async updatePassword() {\n        if (\n          this.passwordData.newPassword !== this.passwordData.confirmPassword\n        ) {\n          toast.error('Les mots de passe ne correspondent pas.');\n          return;\n        }\n        try {\n          const payload = {\n            password: this.passwordData.newPassword,\n          };\n          if (!this.isAdmin) {\n            payload.oldPassword = this.passwordData.oldPassword;\n          }\n          await apiService.put(`/users/${this.userId}`, payload);\n          toast.success('Mot de passe mis à jour avec succès!');\n          // Réinitialiser les champs de mot de passe\n          this.passwordData.oldPassword = '';\n          this.passwordData.newPassword = '';\n          this.passwordData.confirmPassword = '';\n          this.editingField.password = false;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la mise à jour du mot de passe:',\n            error\n          );\n          if (\n            error.response &&\n            error.response.data &&\n            error.response.data.message\n          ) {\n            toast.error(error.response.data.message);\n          } else {\n            toast.error(\n              'Une erreur est survenue lors de la mise à jour du mot de passe.'\n            );\n          }\n        }\n      },\n      /**\n       * Confirme la suppression de l'utilisateur.\n       */\n      confirmDeleteUser() {\n        this.showDeleteModal = true;\n      },\n      /**\n       * Supprime l'utilisateur après confirmation.\n       */\n      async deleteUser() {\n        try {\n          await apiService.delete(`/users/${this.userId}`);\n          toast.success('Utilisateur supprimé avec succès.');\n          this.$router.push('/admin/users');\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la suppression de l'utilisateur:\",\n            error\n          );\n          toast.error(\n            \"Une erreur est survenue lors de la suppression de l'utilisateur.\"\n          );\n        }\n      },\n      closeDeleteModal() {\n        this.showDeleteModal = false;\n      },\n      /**\n       * Assigne l'utilisateur à un tournoi.\n       */\n      async assignTourney() {\n        try {\n          await apiService.post(\n            `/users/${this.userId}/tourneys/${this.selectedTourneyId}`\n          );\n          toast.success('Utilisateur assigné au tournoi avec succès.');\n          await this.fetchUserData();\n          await this.fetchAvailableTourneys();\n          this.selectedTourneyId = null;\n        } catch (error) {\n          console.error(\"Erreur lors de l'assignation au tournoi:\", error);\n          toast.error(\n            \"Une erreur est survenue lors de l'assignation au tournoi.\"\n          );\n        }\n      },\n      /**\n       * Confirme le retrait de l'utilisateur d'un tournoi.\n       * @param {Number} tourneyId - ID du tournoi.\n       */\n      confirmRemoveFromTourney(tourneyId) {\n        this.tourneyIdToRemove = tourneyId;\n        this.showRemoveFromTourneyModal = true;\n      },\n      /**\n       * Retire l'utilisateur du tournoi.\n       */\n      async removeUserFromTourney() {\n        try {\n          await apiService.delete(\n            `/users/${this.userId}/tourneys/${this.tourneyIdToRemove}`\n          );\n          toast.success('Utilisateur retiré du tournoi avec succès.');\n          await this.fetchUserData();\n          await this.fetchAvailableTourneys();\n          this.showRemoveFromTourneyModal = false;\n          this.tourneyIdToRemove = null;\n        } catch (error) {\n          console.error('Erreur lors du retrait du tournoi:', error);\n          toast.error('Une erreur est survenue lors du retrait du tournoi.');\n        }\n      },\n      closeRemoveFromTourneyModal() {\n        this.showRemoveFromTourneyModal = false;\n        this.tourneyIdToRemove = null;\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles personnalisés */\n  .form-input,\n  .form-select {\n    background-color: #f9fafb; /* Couleur de fond claire */\n    border: 1px solid #d1d5db; /* Bordure grise */\n    border-radius: 0.375rem; /* Rayon des coins */\n    padding: 0.5rem; /* Padding */\n    color: #111827; /* Couleur du texte */\n  }\n  .dark .form-input,\n  .dark .form-select {\n    background-color: #1f2937; /* Couleur de fond foncée */\n    border-color: #374151; /* Bordure foncée */\n    color: #f9fafb; /* Couleur du texte */\n  }\n</style>\n","import { render } from \"./ProfilePageComponent.vue?vue&type=template&id=e2acaaaa&scoped=true\"\nimport script from \"./ProfilePageComponent.vue?vue&type=script&lang=js\"\nexport * from \"./ProfilePageComponent.vue?vue&type=script&lang=js\"\n\nimport \"./ProfilePageComponent.vue?vue&type=style&index=0&id=e2acaaaa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e2acaaaa\"]])\n\nexport default __exports__","import { render } from \"./AdminUserProfile.vue?vue&type=template&id=26901522\"\nimport script from \"./AdminUserProfile.vue?vue&type=script&lang=js\"\nexport * from \"./AdminUserProfile.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- TourneyFields.vue -->\n<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <TourneySubMenu :tourneyId=\"tourneyId\" />\n\n    <div class=\"p-4 sm:p-6\">\n      <div class=\"flex items-center justify-between mb-4 sm:mb-8\">\n        <TitleComponent title=\"Gestion Terrains\" />\n\n        <!-- Boutons alignés à droite, utilisation d'icônes sur mobile -->\n        <div class=\"flex items-center space-x-2 sm:space-x-4 mr-auto\">\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"cog\"\n            @click=\"openAddMultipleFieldsModal\"\n            variant=\"algo\"\n          >\n            <span class=\"hidden sm:inline\">Générer terrains</span>\n          </ButtonComponent>\n          <ButtonComponent\n            v-if=\"isEditable && fields.length > 0\"\n            @click=\"openDeleteAllFieldsModal\"\n            variant=\"danger\"\n            fontAwesomeIcon=\"trash\"\n          >\n            <span class=\"hidden sm:inline\">Tous les terrains</span>\n          </ButtonComponent>\n        </div>\n\n        <!-- Sélecteur de statut compact sur mobile -->\n        <StatusSelectorComponent\n          :tourneyId=\"tourneyId\"\n          statusKey=\"fieldAssignmentStatus\"\n          :statusOptions=\"fieldAssignmentStatusOptions\"\n          v-model=\"currentStatus\"\n        />\n      </div>\n\n      <!-- Grille des terrains -->\n      <div\n        class=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\"\n      >\n        <!-- Carte pour ajouter un nouveau terrain (affichée uniquement si isEditable) -->\n        <CardAddComponent\n          v-if=\"isEditable\"\n          title=\"Terrain\"\n          @openAddElementModal=\"openAddFieldModal\"\n        />\n\n        <!-- Cartes des terrains existants -->\n        <CardEditComponent\n          v-for=\"field in fields\"\n          :key=\"field.id\"\n          :title=\"field.name\"\n          :description=\"field.description\"\n          :showDeleteButton=\"isEditable\"\n          :showEditButton=\"true\"\n          :isEditable=\"isEditable\"\n          @delete=\"confirmDeleteField(field.id)\"\n          @edit=\"editField(field)\"\n          @click=\"editField(field)\"\n        />\n      </div>\n\n      <!-- Modale pour ajouter/modifier un terrain -->\n      <ModalComponent\n        :isVisible=\"showModal\"\n        :title=\"\n          editingFieldId ? 'Modifier le Terrain' : 'Ajouter un Nouveau Terrain'\n        \"\n        @close=\"closeModal\"\n      >\n        <template #content>\n          <FormComponent\n            v-model=\"newField\"\n            :fields=\"formFields\"\n            :isEditing=\"!!editingFieldId\"\n            :isEditable=\"isEditable\"\n            @form-submit=\"handleFormSubmit\"\n            @form-cancel=\"closeModal\"\n          />\n        </template>\n      </ModalComponent>\n\n      <!-- Modale pour ajouter plusieurs terrains -->\n      <ModalComponent\n        :isVisible=\"showMultipleFieldsModal\"\n        title=\"Ajouter plusieurs terrains\"\n        @close=\"closeMultipleFieldsModal\"\n      >\n        <template #content>\n          <FormComponent\n            v-model=\"multipleFieldsData\"\n            :fields=\"multipleFieldsFormFields\"\n            :isFormValid=\"multipleFieldsData.numberOfFields > 0\"\n            :isEditing=\"!!editingFieldId\"\n            :isEditable=\"isEditable\"\n            @form-submit=\"handleMultipleFieldsSubmit\"\n            @form-cancel=\"closeMultipleFieldsModal\"\n          />\n        </template>\n      </ModalComponent>\n\n      <!-- Modale pour confirmer la suppression de tous les terrains (affichée uniquement si isEditable) -->\n      <DeleteConfirmationModal\n        v-if=\"isEditable\"\n        :isVisible=\"showDeleteAllFieldsModal\"\n        @form-cancel=\"closeDeleteAllFieldsModal\"\n        @confirm=\"handleDeleteAllFieldsSubmit\"\n        :isHardDelete=\"true\"\n        hardDeleteMessage=\"Cette action supprimera définitivement tous les terrains et les sports associés.\"\n      />\n\n      <!-- Confirmation de suppression individuelle (affichée uniquement si isEditable) -->\n      <DeleteConfirmationModal\n        v-if=\"isEditable\"\n        :isVisible=\"showDeleteConfirmation\"\n        @form-cancel=\"closeDeleteConfirmation\"\n        @confirm=\"deleteField(confirmedDeleteFieldId)\"\n      />\n    </div>\n  </div>\n</template>\n<script>\n  import { mapState, mapActions } from 'vuex';\n  import apiService from '@/services/apiService';\n  import CardAddComponent from '@/components/CardAddComponent.vue';\n  import CardEditComponent from '@/components/CardEditComponent.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import TourneySubMenu from '@/components/TourneySubMenu.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ModalComponent,\n      ButtonComponent,\n      DeleteConfirmationModal,\n      TourneySubMenu,\n      CardAddComponent,\n      CardEditComponent,\n      FormComponent,\n      TitleComponent,\n      StatusSelectorComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        fields: [],\n        showModal: false,\n        showMultipleFieldsModal: false,\n        showDeleteConfirmation: false,\n        confirmedDeleteFieldId: null,\n        showDeleteAllFieldsModal: false,\n        deleteAllConfirmation: '',\n        newField: {\n          name: '',\n          description: '',\n          tourneyId: this.tourneyId,\n        },\n        multipleFieldsData: {\n          numberOfFields: 1,\n        },\n        editingFieldId: null,\n        isSubmitting: false,\n        isDeleting: false,\n        isFormValid: false,\n        fieldAssignmentStatusOptions: [\n          { value: 'draft', label: 'Edition' },\n          { value: 'completed', label: 'Terminé' },\n        ],\n      };\n    },\n    computed: {\n      formFields() {\n        return [\n          {\n            name: 'name',\n            label: 'Nom du terrain',\n            type: 'text',\n            required: true,\n          },\n          {\n            name: 'description',\n            label: 'Description du terrain',\n            type: 'textarea',\n            required: false,\n          },\n        ];\n      },\n      multipleFieldsFormFields() {\n        return [\n          {\n            name: 'numberOfFields',\n            label: 'Nombre de terrains',\n            type: 'number',\n            required: true,\n            min: 1,\n          },\n        ];\n      },\n      // Mapper l'état du module `tourney`\n      ...mapState('tourney', {\n        currentTournamentName: (state) => state.currentTournamentName,\n        statuses: (state) => state.statuses,\n      }),\n      shouldShowStatusSelector() {\n        // Ne pas afficher le sélecteur si le statut est 'notStarted'\n        return this.statuses.fieldAssignmentStatus !== 'notStarted';\n      },\n\n      isEditable() {\n        // Vérifie si le statut est différent de 'completed'\n        return this.statuses.fieldAssignmentStatus !== 'completed';\n      },\n      // Définir `currentStatus` comme une propriété calculée liée au store\n      currentStatus: {\n        get() {\n          return this.statuses.fieldAssignmentStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'fieldAssignmentStatus',\n            value: newStatus,\n          });\n        },\n      },\n    },\n    methods: {\n      // Mapper les actions du module `tourney`\n      ...mapActions('tourney', [\n        'fetchTourneyStatuses',\n        'setTournamentName',\n        'clearTournamentName',\n      ]),\n\n      async fetchFieldDetails() {\n        try {\n          // Charger les statuts du tournoi\n          await this.fetchTourneyStatuses(this.tourneyId);\n\n          // Charger les détails des terrains\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/fields`\n          );\n          this.fields = response.data || [];\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du terrain:',\n            error\n          );\n        }\n      },\n      openDeleteAllFieldsModal() {\n        this.showDeleteAllFieldsModal = true;\n      },\n      closeDeleteAllFieldsModal() {\n        this.showDeleteAllFieldsModal = false;\n      },\n      async handleDeleteAllFieldsSubmit() {\n        if (this.isDeleting) return;\n        this.isDeleting = true;\n\n        try {\n          await apiService.delete(`/tourneys/${this.tourneyId}/fields`);\n          toast.success('Tous les terrains ont été supprimés avec succès!');\n          this.fetchFieldDetails();\n          this.closeDeleteAllFieldsModal();\n        } catch (error) {\n          toast.error('Erreur lors de la suppression de tous les terrains.');\n          console.error(\n            'Erreur lors de la suppression de tous les terrains:',\n            error\n          );\n        } finally {\n          this.isDeleting = false;\n        }\n      },\n      confirmDeleteField(id) {\n        this.confirmedDeleteFieldId = id;\n        this.showDeleteConfirmation = true;\n      },\n      closeDeleteConfirmation() {\n        this.showDeleteConfirmation = false;\n        this.confirmedDeleteFieldId = null;\n      },\n      async deleteField(id) {\n        if (this.isDeleting) return;\n        this.isDeleting = true;\n\n        try {\n          await apiService.delete(`/tourneys/${this.tourneyId}/fields/${id}`);\n          toast.success('Terrain supprimé avec succès!');\n          this.fetchFieldDetails();\n          this.closeDeleteConfirmation();\n        } catch (error) {\n          toast.error('Erreur lors de la suppression du terrain!');\n          console.error('Erreur lors de la suppression du terrain:', error);\n        } finally {\n          this.isDeleting = false;\n        }\n      },\n      openAddMultipleFieldsModal() {\n        this.multipleFieldsData.numberOfFields = 1;\n        this.showMultipleFieldsModal = true;\n      },\n      closeMultipleFieldsModal() {\n        this.showMultipleFieldsModal = false;\n      },\n      async handleMultipleFieldsSubmit() {\n        if (this.isSubmitting) return;\n        this.isSubmitting = true;\n\n        try {\n          const numberOfFields = this.multipleFieldsData.numberOfFields;\n\n          if (numberOfFields < 1) {\n            toast.error(\n              'Veuillez entrer un nombre valide de terrains à ajouter.'\n            );\n            return;\n          }\n\n          // Créer plusieurs terrains en 1 requête post\n          await apiService.post(`/tourneys/${this.tourneyId}/fields/multiple`, {\n            numberOfFields,\n          });\n          toast.success(`${numberOfFields} terrains créés avec succès !`);\n\n          this.fetchFieldDetails();\n          this.closeMultipleFieldsModal();\n        } catch (error) {\n          console.error('Erreur lors de la création des terrains:', error);\n          toast.error('Erreur lors de la création des terrains.');\n        } finally {\n          this.isSubmitting = false;\n        }\n      },\n      openAddFieldModal() {\n        this.editingFieldId = null;\n        this.newField = {\n          name: '',\n          description: '',\n          tourneyId: this.tourneyId,\n        };\n        this.isFormValid = false;\n        this.showModal = true;\n      },\n      editField(field) {\n        this.editingFieldId = field.id;\n        this.newField = { ...field };\n        this.isFormValid = true;\n        this.showModal = true;\n      },\n      validateForm() {\n        this.isFormValid = !!this.newField.name;\n      },\n\n      handleFormSubmit() {\n        this.validateForm();\n        if (!this.isFormValid) return;\n        this.isSubmitting = true;\n        this.saveField();\n      },\n      async saveField() {\n        try {\n          if (this.editingFieldId) {\n            // Mettre à jour un terrain existant\n            await apiService.put(\n              `/tourneys/${this.tourneyId}/fields/${this.editingFieldId}`,\n              this.newField\n            );\n            toast.success('Terrain modifié avec succès!');\n          } else {\n            // Créer un nouveau terrain\n            await apiService.post(\n              `/tourneys/${this.tourneyId}/fields`,\n              this.newField\n            );\n            toast.success('Nouveau terrain ajouté avec succès!');\n          }\n          this.closeModal();\n          this.fetchFieldDetails();\n        } catch (error) {\n          toast.error(\"Erreur lors de l'enregistrement du terrain!\");\n          console.error(\"Erreur lors de l'enregistrement du terrain:\", error);\n        } finally {\n          this.isSubmitting = false;\n        }\n      },\n      closeModal() {\n        this.showModal = false;\n        this.isSubmitting = false;\n      },\n    },\n    watch: {\n      newField: {\n        handler() {\n          this.validateForm();\n        },\n        deep: true,\n      },\n    },\n    mounted() {\n      this.fetchFieldDetails();\n    },\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./TourneyFieldsManagement.vue?vue&type=template&id=ad913fa6\"\nimport script from \"./TourneyFieldsManagement.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyFieldsManagement.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <TourneySubMenu :tourneyId=\"tourneyId\" />\n\n    <!-- Liste des sports en haut, sticky sans fond gris -->\n    <div\n      id=\"external-events\"\n      class=\"p-2 rounded-lg shadow-lg sticky top-0 z-50 overflow-x-auto flex items-center justify-between bg-white dark:bg-dark-background\"\n    >\n      <!-- Conteneur pour les sports -->\n      <div class=\"flex space-x-4\">\n        <!-- Sports que l'on peut glisser -->\n        <div\n          v-for=\"sport in sports\"\n          :key=\"sport.id\"\n          :data-id=\"sport.id\"\n          :style=\"{ backgroundColor: sport.color }\"\n          :class=\"[\n            'sport-item',\n            'p-3',\n            'mb-3',\n            'rounded-lg',\n            'text-center',\n            'text-light-menuText',\n            'dark:text-dark-menuText',\n            'font-semibold',\n            'transform',\n            'transition',\n            'duration-100',\n            'w-28',\n            'shadow-md',\n            'flex',\n            'items-center',\n            'justify-center',\n            isEditable\n              ? 'cursor-pointer external-event hover:scale-110 active:scale-95'\n              : 'opacity-50',\n          ]\"\n        >\n          {{ sport.name }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Si aucun terrain n'est trouvé, afficher un message d'avertissement -->\n    <div v-if=\"!fields.length\">\n      <ErrorMessageComponent\n        message=\"Aucun terrain trouvé. Veuillez créer des terrains avant d'assigner des sports.\"\n      ></ErrorMessageComponent>\n    </div>\n\n    <!-- Pagination et calendrier -->\n    <div class=\"flex items-center justify-between gap-4 my-2 px-4\">\n      <!-- Pagination au centre ou légèrement à gauche -->\n      <div class=\"flex items-center gap-2 mx-auto\">\n        <button\n          v-if=\"currentPage > 1\"\n          @click=\"currentPage--\"\n          class=\"text-2xl px-2 py-1 rounded navigation-button\"\n        >\n          &lt;\n        </button>\n        <select\n          v-model=\"currentPage\"\n          class=\"bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text border border-light-form-border-default dark:border-dark-form-border-default rounded-md px-2 py-1\"\n        >\n          <option v-for=\"page in totalPages\" :key=\"page\" :value=\"page\">\n            Page {{ page }} / {{ totalPages }}\n          </option>\n        </select>\n        <button\n          v-if=\"currentPage < totalPages\"\n          @click=\"currentPage++\"\n          class=\"text-2xl px-2 py-1 rounded navigation-button\"\n        >\n          &gt;\n        </button>\n\n        <!-- Bouton Show All Fields -->\n        <button\n          @click=\"\n            showAllTerrains = !showAllTerrains;\n            currentPage = 1;\n          \"\n          class=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n        >\n          {{ showAllTerrains ? 'Reduce' : 'All Fields' }}\n        </button>\n      </div>\n\n      <!-- Sélecteur de statut complètement à droite -->\n      <div class=\"ml-auto\">\n        <StatusSelectorComponent\n          :tourneyId=\"tourneyId\"\n          statusKey=\"sportAssignmentStatus\"\n          :statusOptions=\"sportAssignmentStatusOptions\"\n          v-model=\"currentStatus\"\n        />\n      </div>\n    </div>\n\n    <!-- Calendrier avec les ressources (terrains) -->\n    <div v-if=\"tourney.dateTourney && fields.length\">\n      <FullCalendar\n        ref=\"fullCalendar\"\n        :options=\"calendarOptions\"\n        :key=\"tourney.dateTourney\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  // Importations nécessaires\n  import { mapState, mapActions } from 'vuex';\n  import FullCalendar from '@fullcalendar/vue3';\n  import timeGridPlugin from '@fullcalendar/timegrid';\n  import interactionPlugin, { Draggable } from '@fullcalendar/interaction';\n  import resourceTimeGridPlugin from '@fullcalendar/resource-timegrid';\n  import apiService from '@/services/apiService';\n  import TourneySubMenu from '@/components/TourneySubMenu.vue';\n  import ErrorMessageComponent from '@/components/ErrorMessageComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n\n  export default {\n    components: {\n      FullCalendar,\n      TourneySubMenu,\n      ErrorMessageComponent,\n      StatusSelectorComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId, // ID du tournoi courant\n        tourney: {}, // Détails du tournoi\n        fields: [], // Liste des terrains du tournoi\n        sports: [], // Liste des sports disponibles\n        sportAssignmentStatusOptions: [\n          { value: 'draft', label: 'Edition' },\n          { value: 'completed', label: 'Terminé' },\n        ],\n        externalDraggableInstance: null,\n        currentPage: 1,\n        terrainsPerPage: 10,\n        showAllTerrains: false,\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n      }),\n      isEditable() {\n        return this.statuses.sportAssignmentStatus !== 'completed';\n      },\n      // Définir `currentStatus` comme une propriété calculée liée au store\n      currentStatus: {\n        get() {\n          return this.statuses.sportAssignmentStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'sportAssignmentStatus',\n            value: newStatus,\n          });\n        },\n      },\n      totalPages() {\n        if (this.showAllTerrains) {\n          return 1; // Si tous les terrains sont affichés, une seule \"page\"\n        }\n        return Math.ceil(this.fields.length / this.terrainsPerPage);\n      },\n      paginatedFields() {\n        if (this.showAllTerrains) {\n          return this.fields; // Affiche tous les terrains si l'option est activée\n        }\n        const start = (this.currentPage - 1) * this.terrainsPerPage;\n        const end = start + this.terrainsPerPage;\n        return this.fields.slice(start, end);\n      },\n      /**\n       * Options du calendrier FullCalendar avec les ressources (terrains)\n       */\n      calendarOptions() {\n        if (!this.tourney.dateTourney) {\n          console.error('La date du tournoi n’est pas disponible');\n          return {};\n        }\n\n        const events = [];\n\n        // Ajouter les sportsFields en tant qu'événements\n        this.fields.forEach((field) => {\n          if (field.sportsFields && field.sportsFields.length > 0) {\n            field.sportsFields.forEach((sportsField) => {\n              events.push({\n                id: sportsField.id.toString(),\n                title: sportsField.sport.name,\n                start: `${this.tourney.dateTourney}T${sportsField.startTime}`,\n                end: `${this.tourney.dateTourney}T${sportsField.endTime}`,\n                resourceId: field.id.toString(),\n                backgroundColor: sportsField.sport.color || '#cccccc',\n                extendedProps: {\n                  fieldId: field.id,\n                  sportId: sportsField.sport.id,\n                },\n              });\n            });\n          }\n        });\n\n        return {\n          plugins: [timeGridPlugin, interactionPlugin, resourceTimeGridPlugin],\n          schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives', // Clé pour usage non-commercial\n          initialView: 'resourceTimeGridDay',\n          timeZone: 'local',\n          initialDate: this.tourney.dateTourney,\n          editable: this.isEditable,\n          droppable: true,\n          headerToolbar: false,\n          height: '600px',\n          defaultTimedEventDuration: '04:00',\n          slotMinTime: '00:00:00',\n          slotMaxTime: '24:00:00',\n          slotLabelFormat: {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false,\n          },\n          allDaySlot: false,\n          resources: this.paginatedFields.map((field) => ({\n            id: field.id.toString(),\n            title: field.name,\n          })),\n          events: events,\n          eventReceive: this.handleEventReceive,\n          eventDrop: this.handleEventDrop,\n          eventResize: this.handleEventResize,\n          eventContent: this.renderEventContent,\n        };\n      },\n    },\n    watch: {\n      currentPage() {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.refetchResources();\n        }\n      },\n    },\n    beforeUnmount() {\n      if (this.externalDraggableInstance) {\n        this.externalDraggableInstance.destroy();\n      }\n    },\n    methods: {\n      // Mapper les actions du module `tourney`\n      ...mapActions('tourney', [\n        'fetchTourneyStatuses',\n        'setTournamentName',\n        'clearTournamentName',\n      ]),\n      /**\n       * Récupère les terrains et les sports associés du tournoi depuis l'API.\n       * Met à jour la liste des terrains et les détails du tournoi.\n       */\n      async fetchTourneySportsFields() {\n        try {\n          // Charger les statuts du tournoi\n          await this.fetchTourneyStatuses(this.tourneyId);\n\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/sports-fields`\n          );\n          this.fields = response.data;\n\n          const tourneyResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}`\n          );\n          this.tourney = tourneyResponse.data;\n\n          if (!this.fields.length) {\n            console.warn('Aucun terrain trouvé');\n          }\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du tournoi:',\n            error\n          );\n        }\n      },\n\n      /**\n       * Récupère la liste de tous les sports disponibles depuis l'API.\n       * Met à jour la liste des sports.\n       */\n      async fetchSports() {\n        try {\n          const response = await apiService.get('/sports');\n          this.sports = response.data;\n          if (!this.sports.length) {\n            console.warn('Aucun sport trouvé');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la récupération des sports:', error);\n        }\n      },\n\n      /**\n       * Initialise les éléments de sports pour qu'ils soient \"draggables\".\n       * Permet de glisser les sports vers le calendrier pour les assigner à un terrain.\n       */\n      initializeExternalEvents() {\n        if (!this.isEditable) return; // Ne pas initialiser le drag-and-drop si non éditable\n\n        // Détruire l'instance précédente si elle existe\n        if (this.externalDraggableInstance) {\n          this.externalDraggableInstance.destroy();\n          this.externalDraggableInstance = null;\n        }\n\n        const containerEl = document.getElementById('external-events');\n        this.externalDraggableInstance = new Draggable(containerEl, {\n          itemSelector: '.external-event',\n          eventData(eventEl) {\n            return {\n              title: eventEl.innerText.trim(),\n              backgroundColor: eventEl.style.backgroundColor,\n              duration: '04:00',\n              extendedProps: {\n                sportId: eventEl.getAttribute('data-id'),\n              },\n            };\n          },\n        });\n      },\n\n      /**\n       * Contenu personnalisé pour chaque événement dans FullCalendar,\n       * avec un bouton de suppression.\n       * @param {Object} arg - Détails de l'événement\n       * @returns {Object} Contenu DOM pour l'événement\n       */\n      renderEventContent(arg) {\n        const container = document.createElement('div');\n        container.classList.add('flex', 'flex-col', 'space-y-1');\n\n        const headerContainer = document.createElement('div');\n        headerContainer.classList.add(\n          'flex',\n          'justify-between',\n          'items-center'\n        );\n\n        const title = document.createElement('span');\n        title.innerText = arg.event.title;\n        title.classList.add('font-semibold', 'text-white');\n\n        headerContainer.appendChild(title);\n\n        if (this.isEditable) {\n          const deleteIcon = document.createElement('span');\n          deleteIcon.innerHTML = '&#10060;';\n          deleteIcon.classList.add('delete-icon');\n          deleteIcon.style.float = 'right';\n          deleteIcon.style.color = 'white';\n          deleteIcon.style.cursor = 'pointer';\n          deleteIcon.style.padding = '0 5px';\n\n          deleteIcon.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            this.deleteEvent(arg.event);\n          });\n\n          let pressTimer;\n          deleteIcon.addEventListener('touchstart', (e) => {\n            e.stopPropagation();\n            pressTimer = setTimeout(() => {\n              this.deleteEvent(arg.event);\n            }, 600);\n          });\n          deleteIcon.addEventListener('touchend', () => {\n            clearTimeout(pressTimer);\n          });\n\n          headerContainer.appendChild(deleteIcon);\n        }\n\n        const startTime = this.formatDisplayTime(arg.event.start);\n        const endTime = this.formatDisplayTime(arg.event.end);\n        const timeRange = document.createElement('div');\n        timeRange.innerText = `${startTime} - ${endTime}`;\n        timeRange.classList.add('text-sm', 'text-white');\n\n        container.appendChild(headerContainer);\n        container.appendChild(timeRange);\n\n        return { domNodes: [container] };\n      },\n\n      // Les méthodes handleEventReceive, handleEventDrop, handleEventResize, deleteEvent sont celles modifiées précédemment\n\n      async handleEventReceive(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n        const event = info.event;\n        try {\n          const sportId = event.extendedProps.sportId;\n          const newFieldId = event.getResources()[0]?.id;\n\n          if (!newFieldId) {\n            console.error(\"Problème d'ID : Terrain mal identifié.\");\n            info.revert();\n            return;\n          }\n\n          if (!event.end) {\n            const startDate = new Date(event.start);\n            const endDate = new Date(startDate);\n            endDate.setHours(endDate.getHours() + 2);\n            event.setEnd(endDate);\n          }\n\n          const data = {\n            fieldId: newFieldId,\n            sportId: sportId,\n            startTime: this.formatTime(event.start),\n            endTime: this.formatTime(event.end),\n          };\n\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/sports-fields`,\n            data\n          );\n\n          event.setProp('id', response.data.id);\n\n          // Mettre à jour les propriétés de l'événement\n          event.setExtendedProp('fieldId', newFieldId);\n          event.setExtendedProp('sportId', sportId);\n          event.setProp('backgroundColor', event.backgroundColor);\n        } catch (error) {\n          console.error(\"Erreur lors du traitement de l'événement :\", error);\n          info.revert();\n        }\n      },\n\n      async handleEventDrop(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n        const event = info.event;\n        try {\n          const eventId = event.id;\n          const newFieldId = event.getResources()[0]?.id;\n\n          if (!eventId || !newFieldId) {\n            console.error(\n              \"Problème d'ID : Terrain ou événement mal identifié.\"\n            );\n            info.revert();\n            return;\n          }\n\n          const data = {\n            fieldId: newFieldId,\n            startTime: this.formatTime(event.start),\n            endTime: this.formatTime(event.end),\n          };\n\n          await apiService.put(\n            `/tourneys/${this.tourneyId}/sports-fields/${eventId}`,\n            data\n          );\n\n          // Mettre à jour les propriétés de l'événement\n          event.setExtendedProp('fieldId', newFieldId);\n        } catch (error) {\n          console.error(\"Erreur lors du déplacement de l'événement :\", error);\n          info.revert();\n        }\n      },\n\n      async handleEventResize(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n        const event = info.event;\n        try {\n          const eventId = event.id;\n          const fieldId = event.extendedProps.fieldId;\n\n          if (!eventId || !fieldId) {\n            console.error(\n              \"Problème d'ID : Terrain ou événement mal identifié.\"\n            );\n            info.revert();\n            return;\n          }\n\n          const data = {\n            startTime: this.formatTime(event.start),\n            endTime: this.formatTime(event.end),\n          };\n\n          await apiService.put(\n            `/tourneys/${this.tourneyId}/sports-fields/${eventId}`,\n            data\n          );\n        } catch (error) {\n          console.error(\n            \"Erreur lors du redimensionnement de l'événement :\",\n            error\n          );\n          info.revert();\n        }\n      },\n\n      /**\n       * Formatte l'affichage des heures d'un événement.\n       * @param {Date} date - La date à formater\n       * @returns {string} Heure formatée (HH:MM)\n       */\n      formatDisplayTime(date) {\n        const d = new Date(date);\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        return `${hours}:${minutes}`;\n      },\n\n      async deleteEvent(event) {\n        if (!this.isEditable) return;\n        try {\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/sports-fields/${event.id}`\n          );\n          event.remove();\n        } catch (error) {\n          console.error('Erreur lors de la suppression du sport :', error);\n        }\n      },\n      /**\n       * Formatte une date en format HH:MM:SS.\n       * @param {Date} date - La date à formater\n       * @returns {string} Heure formatée (HH:MM:SS)\n       */\n      formatTime(date) {\n        const d = new Date(date);\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        const seconds = d.getSeconds().toString().padStart(2, '0');\n        return `${hours}:${minutes}:${seconds}`;\n      },\n\n      /**\n       * Ajuste le nombre de terrains à afficher par page en fonction de la largeur de l'écran.\n       */\n      adjustTerrainsPerPage() {\n        const screenWidth = window.innerWidth;\n\n        if (screenWidth >= 1200) {\n          this.terrainsPerPage = 10; // 1200px et plus : 10 terrains\n        } else if (screenWidth >= 1000) {\n          this.terrainsPerPage = 8; // 1000px - 1200px : 8 terrains\n        } else if (screenWidth >= 800) {\n          this.terrainsPerPage = 7; // 800px - 1000px : 7 terrains\n        } else if (screenWidth >= 600) {\n          this.terrainsPerPage = 5; // 600px - 800px : 5 terrains\n        } else {\n          this.terrainsPerPage = 3; // Moins de 600px : 3 terrains\n        }\n      },\n    },\n\n    async mounted() {\n      // Méthode appelée lorsque le composant est monté\n      await this.fetchTourneySportsFields(); // Récupérer les sports associés aux terrains du tournoi\n      await this.fetchSports(); // Récupérer tous les sports pour la sport list drag n drop\n\n      // Rendre les éléments de sport externes \"draggables\"\n      this.initializeExternalEvents();\n\n      // Ajuster la pagination\n      this.adjustTerrainsPerPage();\n      window.addEventListener('resize', this.adjustTerrainsPerPage);\n    },\n  };\n</script>\n\n<style scoped>\n  .sport-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .navigation-button {\n    transition: transform 0.2s;\n  }\n\n  .navigation-button:hover {\n    transform: scale(1.2);\n  }\n\n  @import '@/assets/fullcalendar.css';\n</style>\n","<!-- ErrorMessageComponent.vue -->\n\n<template>\n  <div v-if=\"message\" :class=\"errorClass\">\n    <span>{{ message }}</span>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {\n      message: {\n        type: String,\n        required: true, // Le message d'erreur à afficher, obligatoire\n      },\n      errorClass: {\n        type: String,\n        default:\n          'p-2 text-center text-xl rounded-lg font-semibold text-light-errorMessage dark:text-errorMessage', // Classe CSS par défaut\n      },\n    },\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./ErrorMessageComponent.vue?vue&type=template&id=ee426b32\"\nimport script from \"./ErrorMessageComponent.vue?vue&type=script&lang=js\"\nexport * from \"./ErrorMessageComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TourneySportsFields.vue?vue&type=template&id=08d0af18&scoped=true\"\nimport script from \"./TourneySportsFields.vue?vue&type=script&lang=js\"\nexport * from \"./TourneySportsFields.vue?vue&type=script&lang=js\"\n\nimport \"./TourneySportsFields.vue?vue&type=style&index=0&id=08d0af18&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-08d0af18\"]])\n\nexport default __exports__","<!-- TourneyTeams.vue -->\n<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <TourneySubMenu :tourneyId=\"tourneyId\" />\n\n    <div class=\"p-6\">\n      <div class=\"flex items-center mb-8 justify-between\">\n        <div class=\"flex items-center\">\n          <TitleComponent title=\"Gestion des équipes\"></TitleComponent>\n          <!-- Bouton Réglages -->\n          <ButtonComponent\n            v-if=\"!isRegistrationActive && isEditable\"\n            fontAwesomeIcon=\"cog\"\n            @click=\"openTeamSetupModal\"\n            variant=\"secondary\"\n          >\n            <span class=\"hidden sm:md:inline\">Config Equipes</span>\n          </ButtonComponent>\n\n          <!-- Bouton pour générer les équipes, visible uniquement si teamSetup existe et si le nombre max d'équipe n'est pas atteint -->\n          <ButtonComponent\n            v-if=\"\n              !isRegistrationActive &&\n              isEditable &&\n              teamSetupConfigured &&\n              playerTeams.length < teamSetup.maxTeamNumber\n            \"\n            @click=\"openGenerateConfirmationModal\"\n            variant=\"algo\"\n            fontAwesomeIcon=\"people-group\"\n            class=\"ml-2\"\n          >\n            <span class=\"hidden sm:md:inline\">Générer équipes</span>\n          </ButtonComponent>\n        </div>\n\n        <!-- Affichage Reset/InvitationLink/Status -->\n        <div class=\"flex items-center ml-auto\">\n          <!-- Sélecteur de statut et bouton Reset -->\n          <ButtonComponent\n            v-if=\"\n              isEditable &&\n              invalidTeams.length > 0 &&\n              !isRegistrationActive &&\n              filters[0].value === 'invalid'\n            \"\n            @click=\"openDeleteInvalidTeamsModal\"\n            variant=\"danger\"\n            fontAwesomeIcon=\"trash\"\n            class=\"ml-2\"\n          >\n            <span class=\"hidden sm:inline\"\n              >Supprimer les équipes invalides</span\n            >\n          </ButtonComponent>\n          <ButtonComponent\n            v-if=\"\n              isEditable &&\n              playerTeams.length > 0 &&\n              !isRegistrationActive &&\n              filters[0].value !== 'invalid'\n            \"\n            @click=\"openModalResetTeams\"\n            variant=\"danger\"\n            fontAwesomeIcon=\"trash\"\n          >\n            <span class=\"hidden sm:inline mr-auto\">Toutes les équipes</span>\n          </ButtonComponent>\n\n          <!-- Champ pour afficher le lien d'invitation et bouton pour le générer -->\n          <div\n            v-if=\"isRegistrationActive\"\n            class=\"flex items-center space-x-2 ml-4\"\n          >\n            <ButtonComponent\n              @click=\"openInviteTokenModal\"\n              variant=\"success\"\n              fontAwesomeIcon=\"link\"\n            >\n              Lien d'invitation\n            </ButtonComponent>\n          </div>\n\n          <!-- Modale pour gérer les liens d'invitation -->\n          <ModalComponent\n            :isVisible=\"showInviteTokenModal\"\n            title=\"Gestion des liens d'invitation\"\n            @close=\"closeInviteTokenModal\"\n          >\n            <template #content>\n              <div class=\"flex justify-between items-center mb-4\">\n                <label class=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    v-model=\"showValidOnly\"\n                    class=\"form-checkbox\"\n                  />\n                  <span class=\"ml-2\">Afficher liens valides</span>\n                </label>\n                <ButtonComponent\n                  @click=\"showAddTokenForm = !showAddTokenForm\"\n                  variant=\"primary\"\n                  fontAwesomeIcon=\"plus\"\n                >\n                  Générer un lien\n                </ButtonComponent>\n              </div>\n\n              <!-- Formulaire pour générer un nouveau token -->\n              <div v-if=\"showAddTokenForm\" class=\"mb-4\">\n                <FormComponent\n                  v-model=\"inviteTokenForm\"\n                  :fields=\"inviteTokenFields\"\n                  @form-submit=\"handleGenerateInviteToken\"\n                  @form-cancel=\"showAddTokenForm = false\"\n                />\n              </div>\n\n              <!-- Liste des tokens d'invitation -->\n              <ul class=\"space-y-2\">\n                <li\n                  v-for=\"token in filteredSortedInviteTokens\"\n                  :key=\"token.id\"\n                  class=\"p-4 border rounded-md flex justify-between items-center\"\n                  :class=\"{\n                    'bg-light-token-valid dark:bg-dark-token-valid':\n                      token.isValid &&\n                      new Date(token.expiresAt) >\n                        new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n\n                    'bg-light-token-expiring dark:bg-dark-token-expiring':\n                      token.isValid &&\n                      new Date(token.expiresAt) <=\n                        new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n\n                    'bg-light-token-invalid dark:bg-dark-token-invalid':\n                      !token.isValid || new Date(token.expiresAt) <= new Date(),\n                  }\"\n                >\n                  <div class=\"flex-1\">\n                    <label class=\"font-semibold\">Lien d'invitation :</label>\n                    <font-awesome-icon\n                      icon=\"copy\"\n                      class=\"ml-2 cursor-pointer text-gray-600 hover:text-gray-800 dark:text-gray-300 dark:hover:text-gray-200\"\n                      @click=\"copyToClipboard(token.token)\"\n                      title=\"Copier le lien\"\n                    />\n                    <div class=\"flex items-center\">\n                      <input\n                        type=\"text\"\n                        :value=\"`${BASE_URL}/register?inviteToken=${token.token}`\"\n                        readonly\n                        class=\"w-full p-1 border text-gray-800 dark:text-gray-200 bg-white dark:bg-gray-800 rounded-md overflow-x-auto\"\n                        style=\"max-width: 100%\"\n                      />\n                    </div>\n                    <p class=\"text-light-form-text dark:text-dark-form-text\">\n                      Expire le :\n                      {{ new Date(token.expiresAt).toLocaleDateString() }}\n                    </p>\n                    <p>\n                      Statut :\n                      <span\n                        :class=\"{\n                          'text-green-600 dark:text-green-300': token.isValid,\n                          'text-red-600 dark:text-red-300': !token.isValid,\n                        }\"\n                      >\n                        {{ token.isValid ? 'Valide' : 'Invalide' }}\n                      </span>\n                    </p>\n                  </div>\n                  <div class=\"flex flex-col items-end\">\n                    <ButtonComponent\n                      v-if=\"token.isValid\"\n                      @click=\"invalidateToken(token.id)\"\n                      variant=\"danger\"\n                    >\n                      Invalider\n                    </ButtonComponent>\n                    <ButtonComponent\n                      v-else\n                      @click=\"validateToken(token.id)\"\n                      variant=\"success\"\n                    >\n                      Valider\n                    </ButtonComponent>\n                  </div>\n                </li>\n              </ul>\n            </template>\n            <template #footer>\n              <div class=\"flex mt-4\">\n                <ButtonComponent\n                  @click=\"closeInviteTokenModal\"\n                  variant=\"secondary\"\n                >\n                  Fermer\n                </ButtonComponent>\n              </div>\n            </template>\n          </ModalComponent>\n\n          <!-- Sélecteur de statut pour les inscriptions -->\n          <StatusSelectorComponent\n            :tourneyId=\"tourneyId\"\n            label=\"Inscriptions:\"\n            statusKey=\"registrationStatus\"\n            :statusOptions=\"registrationStatusOptions\"\n            v-model=\"currentStatus\"\n          />\n        </div>\n      </div>\n\n      <!-- Message d'erreur si teamSetup n'est pas configuré -->\n      <ErrorMessageComponent\n        v-if=\"!teamSetupConfigured\"\n        :message=\"\n          fieldCount > 0\n            ? 'Aucune configuration d\\'équipe n\\'est définie. Cliquez sur <Config Equipes> pour configurer les équipes. Recommandation : Nombre max d\\'équipes: ' +\n              fieldCount * 4 +\n              ' équipes pour ' +\n              fieldCount +\n              ' terrains.'\n            : 'Aucune configuration d\\'équipe n\\'est définie. Veuillez cliquer sur <Config Equipes> pour configurer les équipes.'\n        \"\n      ></ErrorMessageComponent>\n\n      <!-- Message informant de la nécessité de créer des équipes \"player\" si aucune n'existe -->\n      <div v-if=\"teamSetupConfigured && playerTeams.length === 0\" class=\"mt-4\">\n        <ErrorMessageComponent\n          class=\"text-sm\"\n          message=\"Aucune équipe n'a été créée. Veuillez créer des équipes pour assigner les utilisateurs.\"\n        ></ErrorMessageComponent>\n      </div>\n\n      <div v-if=\"teamSetupConfigured\">\n        <!-- Filtres et Informations -->\n        <div\n          class=\"flex flex-col md:flex-row items-start md:items-center justify-between space-y-4 md:space-y-0\"\n        >\n          <div class=\"flex items-center space-x-2 w-full md:w-auto\">\n            <!-- Filtres pour les équipes -->\n            <FilterComponent\n              :filters=\"filters\"\n              @filter-change=\"handleFilterChange\"\n            />\n            <!--Filtres pour chercher par nom -->\n            <div v-if=\"allDisplayedTeams.length > 0\">\n              <input\n                v-model=\"searchQuery\"\n                type=\"text\"\n                placeholder=\"Rechercher par nom ou mail\"\n                class=\"border border-light-form-border dark:border-dark-form-border rounded-md p-2 w-full sm:w-64 bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text\"\n              />\n            </div>\n            <!-- Bouton pour Utilisateurs Non Assignés -->\n            <ButtonComponent\n              v-if=\"unassignedUsers.length > 0\"\n              @click=\"navigateToUnassignedUsers\"\n              variant=\"primary\"\n              class=\"flex items-left space-x-2\"\n              fontAwesomeIcon=\"user\"\n            >\n              <span>Joueurs sans groupe ({{ unassignedUsers.length }})</span>\n            </ButtonComponent>\n            <!-- Bouton Envoyer Email -->\n            <ButtonComponent\n              v-if=\"allUsers.length > 0\"\n              variant=\"info\"\n              fontAwesomeIcon=\"envelope\"\n              @click=\"sendEmailToAll\"\n              :disabled=\"allUsers.length === 0\"\n            >\n              <span class=\"hidden sm:inline\"></span>\n            </ButtonComponent>\n          </div>\n          <!-- Informations supplémentaires -->\n          <div\n            class=\"flex flex-wrap justify-end space-x-6 text-right w-full md:w-auto\"\n          >\n            <div class=\"text-sm\">\n              <strong>Inscrits :</strong> {{ allUsers.length }}\n            </div>\n            <div class=\"text-sm\">\n              <strong>Equipes affichées :</strong>\n              {{ allDisplayedTeams.length }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Message selon le nombre d'utilisateurs -->\n        <div class=\"mt-4\">\n          <div v-if=\"allUsers.length === 0\">\n            <span class=\"text-sm text-gray-600\">\n              Pas d'utilisateurs inscrits au tournoi.\n            </span>\n          </div>\n          <div v-else>\n            <span\n              v-if=\"unassignedUsers.length === 0\"\n              class=\"text-sm text-gray-600\"\n            >\n              Tous les utilisateurs inscrits sont dans des équipes.\n            </span>\n          </div>\n        </div>\n\n        <!-- Grille d'affichage des équipes -->\n        <div\n          class=\"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-6 gap-4 mt-6\"\n        >\n          <!-- Carte pour ajouter une nouvelle équipe (affichée si isEditable) -->\n          <CardAddComponent\n            v-if=\"isEditable && playerTeams.length < teamSetup.maxTeamNumber\"\n            title=\"Equipe\"\n            @openAddElementModal=\"openAddTeamModal\"\n          />\n\n          <!-- Cartes des équipes existantes -->\n          <CardEditComponent\n            v-for=\"team in allDisplayedTeams\"\n            :key=\"team.id\"\n            :title=\"team.teamName || 'Nom manquant'\"\n            :cornerCount=\"\n              team.type === 'assistant'\n                ? `${team.usersTourneys.length}`\n                : `${team.usersTourneys.length}/${teamSetup.playerPerTeam}`\n            \"\n            :titleColor=\"getStatusColor(team)\"\n            :showDeleteButton=\"isEditable\"\n            :showEditButton=\"isEditable\"\n            @delete=\"confirmDeleteTeam(team.id)\"\n            @edit=\"editTeam(team)\"\n            @click=\"openTeamDetails(team)\"\n          >\n            <!-- Liste des membres en deux colonnes -->\n            <template #user-list>\n              <ul class=\"grid grid-cols-2 gap-2 mt-2\">\n                <li\n                  v-for=\"userTourney in team.usersTourneys.slice(0, 4)\"\n                  :key=\"userTourney.userId\"\n                  class=\"flex items-center text-sm text-light-form-text dark:text-dark-form-text truncate\"\n                >\n                  <font-awesome-icon icon=\"user\" class=\"mr-2 text-gray-500\" />\n                  <span class=\"truncate\">{{ userTourney.user.name }}</span>\n                </li>\n                <li\n                  v-if=\"team.usersTourneys.length > 4\"\n                  class=\"text-sm text-gray-500\"\n                >\n                  + {{ team.usersTourneys.length - 4 }} autres\n                </li>\n              </ul>\n            </template>\n          </CardEditComponent>\n        </div>\n      </div>\n\n      <!-- Modale pour modifier teamSetup -->\n      <ModalComponent\n        v-if=\"isEditable\"\n        :isVisible=\"showTeamSetupModal\"\n        :title=\"\n          teamSetup\n            ? 'Modifier la configuration des équipes'\n            : 'Configurer les équipes'\n        \"\n        @close=\"closeTeamSetupModal\"\n      >\n        <template #content>\n          <!-- Formulaire de configuration des équipes -->\n          <!-- Message de recommandation basé sur le nombre de terrains -->\n          <p class=\"text-sm mb-4\" v-if=\"fieldCount > 0\">\n            Il y a actuellement {{ fieldCount }} terrain(s). Nous recommandons\n            de créer environ {{ fieldCount * 4 }} équipes (soit 4 équipes par\n            terrain).\n          </p>\n          <FormComponent\n            v-model=\"localTeamSetup\"\n            :fields=\"teamSetupFields\"\n            :isEditing=\"!!teamSetup\"\n            @form-submit=\"handleTeamSetupSubmit\"\n            @form-cancel=\"closeTeamSetupModal\"\n            :customValidation=\"customTeamSetupValidation\"\n          />\n        </template>\n      </ModalComponent>\n\n      <!-- Modale pour ajouter/modifier une équipe -->\n      <ModalComponent\n        :isVisible=\"showModal\"\n        :title=\"\n          editingTeamId ? 'Modifier équipe' : 'Ajouter une nouvelle équipe'\n        \"\n        @close=\"closeModal\"\n      >\n        <template #content>\n          <FormComponent\n            v-model=\"newTeam\"\n            :fields=\"formFields\"\n            :isEditing=\"!!editingTeamId\"\n            @form-submit=\"handleFormSubmit\"\n            @form-cancel=\"closeModal\"\n          />\n        </template>\n      </ModalComponent>\n\n      <!-- Modale de confirmation pour générer les équipes -->\n      <ConfirmationModal\n        :isVisible=\"showGenerateConfirmationModal\"\n        title=\"Confirmer la Génération des Équipes\"\n        message=\"Êtes-vous sûr de vouloir générer les équipes automatiquement ?\"\n        @cancel=\"closeGenerateConfirmationModal\"\n        @confirm=\"confirmGenerateTeams\"\n      />\n\n      <!-- Confirmation de suppression -->\n      <DeleteConfirmationModal\n        :isVisible=\"showDeleteConfirmation\"\n        :isHardDelete=\"false\"\n        @form-cancel=\"closeDeleteConfirmation\"\n        @confirm=\"deleteTeam(confirmedDeleteTeamId)\"\n      />\n\n      <!-- Modale pour confirmer le reset des teams (affichée si isEditable) -->\n      <DeleteConfirmationModal\n        v-if=\"isEditable\"\n        :isVisible=\"showModalResetTeams\"\n        @form-cancel=\"closeModalResetTeams\"\n        @confirm=\"handleResetAllTeamsSubmit\"\n        :isHardDelete=\"true\"\n        hardDeleteMessage=\"Toutes les équipes seront supprimées et les utilisateurs n'auront plus d'équipe (reset complet). Il ne sera pas possible de revenir en arrière. Êtes-vous sûr de vouloir continuer ?\"\n      />\n      <!-- Modale pour confirmer la suppression des équipes invalides -->\n      <DeleteConfirmationModal\n        :isVisible=\"showDeleteInvalidTeamsModal\"\n        @form-cancel=\"closeDeleteInvalidTeamsModal\"\n        @confirm=\"deleteInvalidTeams\"\n        :isHardDelete=\"false\"\n        message=\"Êtes-vous sûr de vouloir supprimer toutes les équipes invalides ? Cette action est irréversible.\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState, mapActions } from 'vuex';\n  import apiService, { BASE_URL } from '@/services/apiService';\n  import CardAddComponent from '@/components/CardAddComponent.vue';\n  import CardEditComponent from '@/components/CardEditComponent.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import ConfirmationModal from '@/components/ConfirmationModal.vue';\n  import TourneySubMenu from '@/components/TourneySubMenu.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import FilterComponent from '@/components/FilterComponent.vue';\n  import ErrorMessageComponent from '@/components/ErrorMessageComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ModalComponent,\n      ButtonComponent,\n      DeleteConfirmationModal,\n      ConfirmationModal,\n      TourneySubMenu,\n      CardAddComponent,\n      CardEditComponent,\n      FormComponent,\n      FilterComponent,\n      TitleComponent,\n      ErrorMessageComponent,\n      StatusSelectorComponent,\n    },\n    data() {\n      return {\n        BASE_URL,\n        tourneyId: this.$route.params.tourneyId, // Récupération du tourneyId depuis les params\n        teams: [], // Liste des équipes\n        unassignedUsers: [], // Utilisateurs non assignés\n        allUsers: [], // Tous les utilisateurs inscrits (hors admin)\n        inviteLink: '', // Stocke le lien d'invitation\n        fieldCount: 0,\n        showUnassignedModal: false,\n        showModal: false,\n        showDeleteConfirmation: false,\n        showGenerateConfirmationModal: false, // Ajouté\n        showTeamSetupModal: false,\n        showModalResetTeams: false,\n        confirmedDeleteTeamId: null,\n        showDeleteInvalidTeamsModal: false,\n        newTeam: {\n          teamName: '',\n          type: 'player',\n          tourneyId: this.$route.params.tourneyId,\n        },\n        editingTeamId: null,\n        isSubmitting: false,\n        teamSetupConfigured: false,\n        filters: [\n          {\n            label: 'Equipes',\n            value: '',\n            options: [\n              { label: 'Toutes les équipes', value: '' },\n              { label: 'Valides', value: 'valid' },\n              { label: 'Non valides', value: 'invalid' },\n              { label: 'Sans pool', value: 'noPool' },\n            ],\n          },\n        ],\n        teamSetup: null,\n        localTeamSetup: null,\n        teamSetupFields: [\n          {\n            name: 'maxTeamNumber',\n            label: \"Nombre maximum d'équipes\",\n            type: 'number',\n            required: true,\n          },\n          {\n            name: 'playerPerTeam',\n            label: 'Nombre de joueurs par équipe',\n            type: 'number',\n            required: true,\n          },\n          {\n            name: 'minPlayerPerTeam',\n            label: 'Nombre minimum de joueurs par équipe',\n            type: 'number',\n            required: true,\n          },\n        ],\n        registrationStatusOptions: [\n          { value: 'draft', label: 'Fermées' },\n          { value: 'active', label: 'Ouvertes' },\n          { value: 'completed', label: 'Terminées' },\n        ],\n        // TOKEN INVITATION\n        showInviteTokenModal: false,\n        inviteTokens: [], // Liste des tokens récupérés\n        showValidOnly: true, // Pour filtrer uniquement les tokens valides\n        showAddTokenForm: false,\n        inviteTokenForm: {\n          expiresInDays: 7, // Durée par défaut en jours\n        },\n        inviteTokenFields: [\n          {\n            name: 'expiresInDays',\n            label: 'Durée de validité (jours)',\n            type: 'number',\n            required: true,\n            min: 1, // Valeur minimale\n          },\n        ],\n        searchQuery: '',\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n      }),\n      // Définir `currentStatus` comme une propriété calculée liée au store\n      currentStatus: {\n        get() {\n          return this.statuses.registrationStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'registrationStatus',\n            value: newStatus,\n          });\n        },\n      },\n      isEditable() {\n        return this.statuses.registrationStatus !== 'completed';\n      },\n      isRegistrationActive() {\n        return this.statuses.registrationStatus === 'active';\n      },\n      // Sépare les équipes \"player\"\n      playerTeams() {\n        return this.teams.filter((team) => team.type === 'player');\n      },\n      // Sépare les équipes \"assistant\"\n      assistantTeams() {\n        return this.teams.filter((team) => team.type === 'assistant');\n      },\n      // Computed property pour obtenir les équipes non valides\n      invalidTeams() {\n        if (!this.teamSetupConfigured) return [];\n\n        return this.playerTeams.filter(\n          (team) => team.usersTourneys.length < this.teamSetup.minPlayerPerTeam\n        );\n      },\n\n      /**\n       * Computed property pour obtenir les équipes filtrées selon le filtre sélectionné.\n       */\n      filteredPlayerTeams() {\n        if (!this.teamSetupConfigured) return [];\n\n        let filteredTeams = this.playerTeams.filter((team) => {\n          const minPlayers = this.teamSetup.minPlayerPerTeam;\n\n          if (this.filters[0].value === 'valid') {\n            return team.usersTourneys.length >= minPlayers;\n          }\n          if (this.filters[0].value === 'invalid') {\n            return team.usersTourneys.length < minPlayers;\n          }\n          if (this.filters[0].value === 'noPool') {\n            return team.poolId === null;\n          }\n          return true; // 'Toutes les équipes'\n        });\n\n        // Appliquer le filtre de recherche par nom de joueur\n        if (this.searchQuery) {\n          const query = this.searchQuery.toLowerCase();\n          filteredTeams = filteredTeams.filter((team) =>\n            team.usersTourneys.some(\n              (userTourney) =>\n                userTourney.user.name.toLowerCase().includes(query) ||\n                (userTourney.user.email &&\n                  userTourney.user.email.toLowerCase().includes(query))\n            )\n          );\n        }\n\n        return filteredTeams;\n      },\n\n      // Combine les équipes \"player\" filtrées et les équipes \"assistant\"\n      allDisplayedTeams() {\n        return [...this.assistantTeams, ...this.filteredPlayerTeams];\n      },\n      formFields() {\n        return [\n          {\n            name: 'teamName',\n            label: \"Nom de l'équipe\",\n            type: 'text',\n            required: true,\n          },\n          {\n            name: 'type',\n            label: \"Type d'équipe\",\n            type: 'select',\n            options: [\n              { label: 'Assistant', value: 'assistant' },\n              { label: 'Player', value: 'player' },\n            ],\n            required: true,\n          },\n        ];\n      },\n      filteredSortedInviteTokens() {\n        let tokens = this.inviteTokens;\n\n        // Filtrer les tokens si l'option est cochée\n        if (this.showValidOnly) {\n          tokens = tokens.filter(\n            (t) => t.isValid && new Date(t.expiresAt) > new Date()\n          );\n        }\n\n        // Trier les tokens : valides en premier\n        return tokens.sort((a, b) => {\n          const aValid = a.isValid && new Date(a.expiresAt) > new Date();\n          const bValid = b.isValid && new Date(b.expiresAt) > new Date();\n          return bValid - aValid;\n        });\n      },\n    },\n    methods: {\n      // Mapper les actions du module `tourney`\n      ...mapActions('tourney', ['fetchTourneyStatuses', 'setTournamentName']),\n      // Méthode pour récupérer toutes les données nécessaires en une seule requête\n      async fetchTourneyDetails() {\n        try {\n          this.fetchTourneyStatuses(this.tourneyId);\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/teams-details`\n          );\n          const { teamSetup, teams, unassignedUsers, allUsers, fieldCount } =\n            response.data;\n\n          this.fieldCount = fieldCount || 0; // Stocker le nombre de terrains\n\n          // Mise à jour de teamSetup et teamSetupConfigured\n          if (\n            teamSetup &&\n            teamSetup.maxTeamNumber !== null &&\n            teamSetup.playerPerTeam !== null &&\n            teamSetup.minPlayerPerTeam !== null\n          ) {\n            this.teamSetup = teamSetup;\n            this.teamSetupConfigured = true;\n          } else {\n            this.teamSetup = null;\n            this.teamSetupConfigured = false;\n          }\n\n          // Mise à jour des équipes, des utilisateurs non assignés et de tous les utilisateurs\n          this.teams = teams;\n          this.unassignedUsers = unassignedUsers;\n          this.allUsers = allUsers;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du tournoi:',\n            error\n          );\n          toast.error('Erreur lors de la récupération des détails du tournoi.');\n        }\n      },\n      async generateTeams() {\n        try {\n          await apiService.post(\n            `/tourneys/${this.tourneyId}/teams/generate-teams`\n          );\n          toast.success(\n            'Les équipes manquantes ont été générées avec succès !'\n          );\n          this.fetchTourneyDetails(); // Récupérer les données mises à jour\n        } catch (error) {\n          toast.error('Erreur lors de la génération des équipes.');\n        }\n      },\n      async resetTeams() {\n        try {\n          await apiService.delete(`/tourneys/${this.tourneyId}/teams/reset`);\n          toast.success('Les équipes ont été réinitialisées avec succès !');\n          this.fetchTourneyDetails(); // Récupérer les données mises à jour\n        } catch (error) {\n          toast.error('Erreur lors de la réinitialisation des équipes.');\n        }\n      },\n\n      /*\n       * GESTION TOKEN INVITATION\n       */\n\n      openInviteTokenModal() {\n        this.showInviteTokenModal = true;\n      },\n      closeInviteTokenModal() {\n        this.showInviteTokenModal = false;\n        this.showAddTokenForm = false; // Réinitialiser le formulaire\n      },\n      async handleGenerateInviteToken() {\n        try {\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/invite-token`,\n            {\n              expiresInDays: this.inviteTokenForm.expiresInDays,\n            }\n          );\n          this.inviteLink = `${BASE_URL}/register?inviteToken=${response.data.token}`;\n          toast.success(\"Lien d'invitation généré avec succès !\");\n          this.showAddTokenForm = false;\n          this.inviteTokenForm.expiresInDays = 7; // Réinitialiser le formulaire\n          this.fetchInviteTokens(); // Récupère les tokens après la création\n        } catch (error) {\n          console.error('Erreur lors de la génération du token:', error);\n          toast.error('Erreur lors de la génération du token.');\n        }\n      },\n\n      async invalidateToken(tokenId) {\n        try {\n          await apiService.patch(\n            `/tourneys/${this.tourneyId}/invite-token/${tokenId}/invalidate`\n          );\n          toast.success('Token invalidé avec succès.');\n          this.fetchInviteTokens(); // Actualiser la liste\n        } catch (error) {\n          console.error(\"Erreur lors de l'invalidation du token:\", error);\n          toast.error(\"Erreur lors de l'invalidation du token.\");\n        }\n      },\n      async validateToken(tokenId) {\n        try {\n          await apiService.patch(\n            `/tourneys/${this.tourneyId}/invite-token/${tokenId}/validate`\n          );\n          toast.success('Token validé avec succès.');\n          this.fetchInviteTokens(); // Actualiser la liste\n        } catch (error) {\n          console.error('Erreur lors de la validation du token:', error);\n          toast.error('Erreur lors de la validation du token.');\n        }\n      },\n\n      async fetchInviteTokens() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/invite-token`\n          );\n          this.inviteTokens = response.data.inviteTokens;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des tokens:', error);\n          toast.error('Erreur lors de la récupération des tokens.');\n        }\n      },\n      copyToClipboard(token) {\n        navigator.clipboard.writeText(\n          `${BASE_URL}/register?inviteToken=${token}`\n        );\n        toast.success('Lien copié dans le presse-papiers !');\n      },\n      toggleValidOnly() {\n        this.showValidOnly = !this.showValidOnly;\n      },\n\n      /**\n       *  GESTION DES FILTRES ET EQUIPES\n       **/\n      handleFilterChange(filter) {\n        this.filters[0].value = filter.value;\n      },\n      getStatusColor(team) {\n        if (!this.teamSetupConfigured) return 'gray';\n\n        const maxPlayers = this.teamSetup.playerPerTeam || team.maxPlayers;\n        const minPlayers = this.teamSetup.minPlayerPerTeam;\n\n        if (\n          team.usersTourneys.length > maxPlayers &&\n          team.type !== 'assistant'\n        ) {\n          return 'red'; // Erreur grave : trop de joueurs dans l'équipe\n        } else if (team.type === 'assistant') {\n          return 'purple'; // Assistant : équipe d'encadrement\n        } else if (team.usersTourneys.length >= minPlayers) {\n          return 'green'; // Valide : nombre de joueurs suffisant\n        } else if (team.usersTourneys.length > 0) {\n          return 'orange'; // Partiel : encore des places disponibles\n        } else {\n          return 'gray'; // Aucun joueur, pas de pastille\n        }\n      },\n      navigateToUnassignedUsers() {\n        this.$router.push(`/admin/tourneys/${this.tourneyId}/unassigned-users`);\n      },\n\n      /*\n       * GESTION DES POP UP\n       */\n      openAddTeamModal() {\n        this.editingTeamId = null;\n        this.newTeam = {\n          teamName: '',\n          type: 'player',\n          tourneyId: this.tourneyId,\n        };\n        this.showModal = true;\n      },\n      editTeam(team) {\n        this.editingTeamId = team.id;\n        this.newTeam = { ...team };\n        this.showModal = true;\n      },\n      openTeamDetails(team) {\n        this.$router.push(\n          `/admin/tourneys/${this.tourneyId}/teams/${team.id}/users`\n        );\n      },\n      confirmDeleteTeam(id) {\n        this.confirmedDeleteTeamId = id;\n        this.showDeleteConfirmation = true;\n      },\n      async deleteTeam(id) {\n        try {\n          await apiService.delete(`/tourneys/${this.tourneyId}/teams/${id}`);\n          toast.success('Equipe supprimée avec succès !');\n          this.fetchTourneyDetails(); // Récupérer les données mises à jour\n          this.closeDeleteConfirmation();\n        } catch (error) {\n          toast.error(\"Erreur lors de la suppression de l'équipe.\");\n        }\n      },\n      openModalResetTeams() {\n        this.showModalResetTeams = true;\n      },\n      closeModalResetTeams() {\n        this.showModalResetTeams = false;\n      },\n      // Ouvrir le modal de confirmation pour la suppression des équipes invalides\n      openDeleteInvalidTeamsModal() {\n        this.showDeleteInvalidTeamsModal = true;\n      },\n\n      // Fermer le modal de confirmation\n      closeDeleteInvalidTeamsModal() {\n        this.showDeleteInvalidTeamsModal = false;\n      },\n\n      // Méthode pour supprimer les équipes invalides\n      async deleteInvalidTeams() {\n        try {\n          await apiService.delete(`/tourneys/${this.tourneyId}/teams/invalid`);\n          toast.success(\n            'Les équipes invalides ont été supprimées avec succès !'\n          );\n          this.fetchTourneyDetails(); // Récupérer les données mises à jour\n          this.closeDeleteInvalidTeamsModal();\n        } catch (error) {\n          console.error(\n            'Erreur lors de la suppression des équipes invalides:',\n            error\n          );\n          toast.error('Erreur lors de la suppression des équipes invalides.');\n          this.closeDeleteInvalidTeamsModal();\n        }\n      },\n\n      /**\n       * Méthode appelée lors de la soumission du formulaire de suppression de toutes les équipes.\n       * Supprime toutes les équipes et réinitialise les utilisateurs.\n       */\n      async handleResetAllTeamsSubmit() {\n        await this.resetTeams();\n        this.closeModalResetTeams();\n      },\n      /**\n       * Fonction de validation personnalisée pour le formulaire de configuration des équipes.\n       * Vérifie que minPlayerPerTeam <= playerPerTeam.\n       * @returns {Object} Un objet contenant les messages d'erreur.\n       */\n      customTeamSetupValidation() {\n        const errors = {};\n\n        const { minPlayerPerTeam, playerPerTeam } = this.localTeamSetup;\n\n        // Vérifie si les champs sont présents et sont des nombres\n        if (\n          typeof minPlayerPerTeam === 'number' &&\n          typeof playerPerTeam === 'number'\n        ) {\n          if (minPlayerPerTeam > playerPerTeam) {\n            errors.minPlayerPerTeam =\n              'Le nombre minimum de joueurs par équipe doit être inférieur ou égal au nombre de joueurs par équipe.';\n          }\n        } else {\n          // Gestion des cas où les champs ne sont pas des nombres\n          if (minPlayerPerTeam > playerPerTeam) {\n            errors.minPlayerPerTeam =\n              'Veuillez entrer des nombres valides pour les joueurs par équipe.';\n          }\n        }\n\n        return errors;\n      },\n      /**\n       * Méthode appelée lors de la soumission du formulaire de configuration des équipes.\n       * Supposée être appelée uniquement si le formulaire est valide.\n       */\n      async handleTeamSetupSubmit() {\n        // Déterminer si c'est une mise à jour ou une création\n        const isUpdate = this.teamSetupConfigured;\n\n        // Préparer le payload en copiant les données locales\n        const payload = { ...this.localTeamSetup };\n\n        try {\n          if (isUpdate) {\n            // Mise à jour de la configuration existante\n            await apiService.put(\n              `/tourneys/${this.tourneyId}/team-setup`,\n              payload\n            );\n          } else {\n            // Création d'une nouvelle configuration\n            await apiService.post(\n              `/tourneys/${this.tourneyId}/team-setup`,\n              payload\n            );\n          }\n\n          // Mise à jour des données locales après succès\n          this.teamSetup = { ...payload };\n          this.teamSetupConfigured = true;\n\n          toast.success('Configuration des équipes enregistrée avec succès !');\n          this.closeTeamSetupModal();\n          this.fetchTourneyDetails(); // Récupérer les données mises à jour\n        } catch (error) {\n          console.error('Erreur lors de la configuration des équipes:', error);\n          toast.error('Erreur lors de la configuration des équipes.');\n        }\n      },\n      /**\n       * Envoie un email à tous les utilisateurs inscrits.\n       */\n      sendEmailToAll() {\n        const emails = this.allUsers\n          .map((userTourney) => userTourney.user.email)\n          .filter((email) => email);\n        if (emails.length === 0) {\n          toast.error(\"Il n'y a aucun utilisateur pour envoyer un email.\");\n          return;\n        }\n        const mailtoLink = `mailto:${emails.join(',')}`;\n        window.location.href = mailtoLink;\n      },\n\n      closeDeleteConfirmation() {\n        this.showDeleteConfirmation = false;\n        this.confirmedDeleteTeamId = null;\n      },\n      closeModal() {\n        this.showModal = false;\n        this.editingTeamId = null;\n      },\n      openTeamSetupModal() {\n        // Initialiser localTeamSetup en fonction de la configuration existante\n        if (this.teamSetupConfigured && this.teamSetup) {\n          this.localTeamSetup = { ...this.teamSetup };\n        } else {\n          // Initialiser avec des valeurs par défaut ou vides\n          this.localTeamSetup = {\n            maxTeamNumber: this.fieldCount * 4 || 1,\n            playerPerTeam: 4,\n            minPlayerPerTeam: 3,\n          };\n        }\n        this.showTeamSetupModal = true;\n      },\n      closeTeamSetupModal() {\n        this.showTeamSetupModal = false;\n      },\n      async handleFormSubmit() {\n        if (this.isSubmitting) return;\n        this.isSubmitting = true;\n\n        try {\n          const payload = {\n            teamName: this.newTeam.teamName,\n            type: this.newTeam.type,\n            tourneyId: this.tourneyId,\n          };\n\n          if (this.editingTeamId) {\n            await apiService.put(\n              `/tourneys/${this.tourneyId}/teams/${this.editingTeamId}`,\n              payload\n            );\n          } else {\n            await apiService.post(`/tourneys/${this.tourneyId}/teams`, payload);\n          }\n\n          toast.success(\n            `Equipe ${\n              this.editingTeamId ? 'modifiée' : 'ajoutée'\n            } avec succès !`\n          );\n          this.fetchTourneyDetails(); // Récupérer les données mises à jour\n        } catch (error) {\n          console.error(\"Erreur lors de l'enregistrement de l'équipe:\", error);\n          toast.error(\"Erreur lors de l'enregistrement de l'équipe.\");\n        } finally {\n          this.isSubmitting = false;\n          this.closeModal();\n        }\n      },\n      openGenerateConfirmationModal() {\n        this.showGenerateConfirmationModal = true;\n      },\n      closeGenerateConfirmationModal() {\n        this.showGenerateConfirmationModal = false;\n      },\n      async confirmGenerateTeams() {\n        this.showGenerateConfirmationModal = false;\n        await this.generateTeams();\n      },\n    },\n    mounted() {\n      this.fetchTourneyDetails();\n      this.fetchInviteTokens();\n    },\n  };\n</script>\n\n<style scoped>\n  /* Géré par Tailwind */\n</style>\n","<!-- components/ConfirmationModal.vue -->\n<template>\n  <div\n    v-if=\"isVisible\"\n    class=\"fixed inset-0 bg-light-modal-background z-50 dark:bg-dark-modal-background flex items-center justify-center\"\n    tabindex=\"0\"\n    @keydown.enter=\"handleConfirm\"\n  >\n    <div\n      class=\"bg-light-modal-content dark:bg-dark-modal-content p-8 rounded-lg w-full max-w-md\"\n    >\n      <h2 class=\"text-2xl font-bold mb-4 text-light-title dark:text-dark-title\">\n        {{ title }}\n      </h2>\n      <p class=\"mb-6 text-light-form-text dark:text-dark-form-text\">\n        {{ message }}\n      </p>\n      <div class=\"flex justify-end space-x-4\">\n        <ButtonComponent variant=\"secondary\" @click=\"handleCancel\">\n          Annuler\n        </ButtonComponent>\n        <ButtonComponent variant=\"success\" @click=\"handleConfirm\">\n          Confirmer\n        </ButtonComponent>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n\n  export default {\n    components: {\n      ButtonComponent,\n    },\n    props: {\n      isVisible: {\n        type: Boolean,\n        required: true,\n      },\n      title: {\n        type: String,\n        default: 'Confirmation',\n      },\n      message: {\n        type: String,\n        default: 'Êtes-vous sûr de vouloir effectuer cette action ?',\n      },\n    },\n    methods: {\n      handleCancel() {\n        this.$emit('cancel');\n      },\n      handleConfirm() {\n        this.$emit('confirm');\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles gérés par Tailwind CSS */\n</style>\n","import { render } from \"./ConfirmationModal.vue?vue&type=template&id=421ab410&scoped=true\"\nimport script from \"./ConfirmationModal.vue?vue&type=script&lang=js\"\nexport * from \"./ConfirmationModal.vue?vue&type=script&lang=js\"\n\nimport \"./ConfirmationModal.vue?vue&type=style&index=0&id=421ab410&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-421ab410\"]])\n\nexport default __exports__","import { render } from \"./TourneyTeams.vue?vue&type=template&id=235de7f1&scoped=true\"\nimport script from \"./TourneyTeams.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyTeams.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyTeams.vue?vue&type=style&index=0&id=235de7f1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-235de7f1\"]])\n\nexport default __exports__","<!-- src/views/admin/TourneyUnassignedUsers.vue -->\n<template>\n  <div class=\"mx-auto p-4\">\n    <ListUsersTable\n      title=\"Utilisateurs sans groupe\"\n      :users=\"unassignedUsers\"\n      :teams=\"teams\"\n      :team-setup=\"teamSetup\"\n      :enable-assign-team=\"true\"\n      :allow-assign-to-other-teams=\"true\"\n      :selected-team-ids=\"selectedTeamIds\"\n      :available-teams=\"availableTeams\"\n      @update:selectedTeamIds=\"selectedTeamIds = $event\"\n      @assign-team=\"handleAssignTeam\"\n      @delete-user=\"handleDeleteUser\"\n      @go-back=\"goBackToTeams\"\n    >\n      <template v-slot:header-buttons>\n        <!-- Boutons pour l'assignation automatique -->\n        <ButtonComponent\n          v-if=\"hasAvailableTeams && unassignedUsers.length > 0\"\n          :variant=\"isAutoFilled ? 'algo' : 'algo'\"\n          fontAwesomeIcon=\"cog\"\n          @click=\"isAutoFilled ? handleValidateAssignments() : autoFillGroups()\"\n        >\n          <span class=\"hidden sm:inline\">\n            {{ isAutoFilled ? 'Valider' : 'Assignation Automatique' }}\n          </span>\n        </ButtonComponent>\n        <ButtonComponent\n          v-if=\"isAutoFilled\"\n          variant=\"secondary\"\n          @click=\"cancelAutoFill\"\n        >\n          <span class=\"hidden sm:inline\">Annuler</span>\n        </ButtonComponent>\n      </template>\n    </ListUsersTable>\n  </div>\n</template>\n\n<script>\n  import ListUsersTable from '@/components/ListUsersTable.vue';\n  import apiService from '@/services/apiService';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ListUsersTable,\n      ButtonComponent,\n    },\n    data() {\n      return {\n        unassignedUsers: [],\n        teams: [],\n        teamSetup: null,\n        isAutoFilled: false,\n        initialSelectedTeamIds: {},\n        selectedTeamIds: {},\n      };\n    },\n    computed: {\n      hasAvailableTeams() {\n        return this.availableTeams.length > 0;\n      },\n      availableTeams() {\n        if (!this.teamSetup) return [];\n\n        const currentTeamIds = this.unassignedUsers\n          .map((user) => user.teamId)\n          .filter((teamId) => teamId != null);\n\n        return this.teams.filter((team) => {\n          const isCurrentTeam = currentTeamIds.includes(team.id);\n          const hasSpace =\n            (team.usersTourneys ? team.usersTourneys.length : 0) <\n            this.getTeamCapacity(team);\n          return isCurrentTeam || hasSpace;\n        });\n      },\n      /* teamOptions() {\n        return this.availableTeams.map((team) => {\n          const capacity = this.getTeamCapacity(team);\n          return {\n            id: team.id,\n            teamName: `${team.teamName} (${team.usersTourneys.length}/${capacity})`,\n          };\n        });\n      },*/\n    },\n    async created() {\n      await this.fetchData();\n    },\n    methods: {\n      getTeamCapacity(team) {\n        if (team.type === 'assistant') {\n          return this.teamSetup.playerPerTeam * this.teamSetup.maxTeamNumber;\n        }\n        return this.teamSetup.playerPerTeam;\n      },\n      async fetchData() {\n        const tourneyId = this.$route.params.tourneyId;\n        try {\n          const response = await apiService.get(\n            `/tourneys/${tourneyId}/teams-details`\n          );\n          const data = response.data;\n\n          // Extraire les utilisateurs depuis unassignedUsers\n          this.unassignedUsers = data.unassignedUsers.map((ut) => ut.user);\n          this.teams = data.teams;\n          this.teamSetup = data.teamSetup;\n\n          this.selectedTeamIds = {};\n          this.unassignedUsers.forEach((user) => {\n            if (user.teamId) {\n              this.selectedTeamIds[user.id] = user.teamId;\n            }\n          });\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du tournoi:',\n            error\n          );\n        }\n      },\n      async handleAssignTeam({ userId, teamId }) {\n        const tourneyId = this.$route.params.tourneyId;\n        try {\n          await apiService.post(\n            `/tourneys/${tourneyId}/users/${userId}/teams`,\n            { teamId }\n          );\n\n          // Rafraîchir les données après l'assignation\n          await this.fetchData();\n\n          toast.success(\"Utilisateur assigné avec succès à l'équipe.\");\n        } catch (error) {\n          console.error(\"Erreur lors de l'assignation de l'équipe:\", error);\n          toast.error(\n            \"Une erreur est survenue lors de l'assignation de l'équipe.\"\n          );\n        }\n      },\n      async handleDeleteUser(userId) {\n        const tourneyId = this.$route.params.tourneyId;\n        try {\n          await apiService.delete(`/tourneys/${tourneyId}/users/${userId}`);\n\n          // Rafraîchir les données après la suppression\n          await this.fetchData();\n\n          toast.success('Utilisateur supprimé avec succès.');\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la suppression de l'utilisateur:\",\n            error\n          );\n          toast.error(\n            \"Une erreur est survenue lors de la suppression de l'utilisateur.\"\n          );\n        }\n      },\n      goBackToTeams() {\n        this.$router.push(\n          `/admin/tourneys/${this.$route.params.tourneyId}/teams`\n        );\n      },\n      async handleValidateAssignments() {\n        const assignments = Object.entries(this.selectedTeamIds)\n          .filter(([, teamId]) => teamId !== null && teamId !== undefined)\n          .map(([userId, teamId]) => ({\n            userId: Number(userId),\n            teamId,\n          }));\n\n        const tourneyId = this.$route.params.tourneyId;\n        try {\n          // Envoyer les affectations au backend\n          await apiService.post(`/tourneys/${tourneyId}/teams/auto-fill`, {\n            assignments,\n          });\n\n          // Rafraîchir les données après la validation\n          await this.fetchData();\n\n          toast.success('Affectations validées avec succès.');\n\n          this.isAutoFilled = false;\n          this.initialSelectedTeamIds = {};\n        } catch (error) {\n          console.error(\n            'Erreur lors de la validation des affectations:',\n            error\n          );\n          toast.error(\n            'Une erreur est survenue lors de la validation des affectations.'\n          );\n        }\n      },\n      autoFillGroups() {\n        // 1. Stocker l'état initial\n        this.initialSelectedTeamIds = { ...this.selectedTeamIds };\n        let unassignedUsers = [...this.unassignedUsers];\n\n        // 2. Séparer les équipes 'player' et l'équipe 'assistant'\n        let assistantTeam = null;\n        let teams = [];\n\n        this.teams.forEach((team) => {\n          if (team.type === 'assistant') {\n            assistantTeam = {\n              ...team,\n              assignedUsers: team.usersTourneys ? [...team.usersTourneys] : [],\n            };\n          } else {\n            teams.push({\n              ...team,\n              assignedUsers: team.usersTourneys ? [...team.usersTourneys] : [],\n            });\n          }\n        });\n\n        // 3. Fonction pour assigner des utilisateurs à une équipe\n        const assignUsersToTeam = (team, numberOfUsersNeeded) => {\n          const usersToAssign = unassignedUsers.splice(0, numberOfUsersNeeded);\n          team.assignedUsers.push(...usersToAssign);\n          usersToAssign.forEach((user) => {\n            this.selectedTeamIds = {\n              ...this.selectedTeamIds,\n              [user.id]: team.id,\n            };\n          });\n        };\n\n        // a) Remplir les groupes partiels jusqu'au seuil minimal\n        teams\n          .filter(\n            (team) =>\n              team.assignedUsers.length > 0 &&\n              team.assignedUsers.length < this.teamSetup.minPlayerPerTeam\n          )\n          .forEach((team) => {\n            const needed =\n              this.teamSetup.minPlayerPerTeam - team.assignedUsers.length;\n            assignUsersToTeam(team, Math.min(needed, unassignedUsers.length));\n          });\n\n        // b) Calculer combien d'équipes vides peuvent être entièrement remplies\n        const emptyTeams = teams.filter(\n          (team) => team.assignedUsers.length === 0\n        );\n        const maxFillableEmptyTeams = Math.floor(\n          unassignedUsers.length / this.teamSetup.minPlayerPerTeam\n        );\n        const teamsToFill = emptyTeams.slice(0, maxFillableEmptyTeams);\n\n        // Remplir les équipes vides identifiées\n        teamsToFill.forEach((team) => {\n          assignUsersToTeam(team, this.teamSetup.minPlayerPerTeam);\n        });\n\n        // c) Distribuer les utilisateurs restants aux équipes valides jusqu'au maximum autorisé\n        let distributionPossible = true;\n\n        while (unassignedUsers.length > 0 && distributionPossible) {\n          distributionPossible = false;\n          for (const team of teams) {\n            if (\n              team.assignedUsers.length >= this.teamSetup.minPlayerPerTeam &&\n              team.assignedUsers.length < this.teamSetup.playerPerTeam &&\n              unassignedUsers.length > 0\n            ) {\n              assignUsersToTeam(team, 1);\n              distributionPossible = true;\n              if (unassignedUsers.length === 0) break;\n            }\n          }\n        }\n\n        // d) Assigner les utilisateurs restants à l'équipe 'assistant' si nécessaire\n        if (unassignedUsers.length > 0) {\n          if (!assistantTeam) {\n            toast.error(\n              \"Aucune équipe 'assistant' disponible pour les utilisateurs restants.\"\n            );\n            return;\n          }\n          assignUsersToTeam(assistantTeam, unassignedUsers.length);\n        }\n\n        this.isAutoFilled = true;\n      },\n\n      cancelAutoFill() {\n        this.selectedTeamIds = { ...this.initialSelectedTeamIds };\n        this.isAutoFilled = false;\n      },\n    },\n  };\n</script>\n","import { render } from \"./TourneyUnassignedUsers.vue?vue&type=template&id=0250d26c\"\nimport script from \"./TourneyUnassignedUsers.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyUnassignedUsers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- src/views/admin/TourneyTeamUsers.vue -->\n<template>\n  <div class=\"mx-auto p-4\" v-if=\"team\">\n    <!-- Composant ListUsersTable -->\n    <ListUsersTable\n      :title=\"`${team.teamName} - ${teamUsers.length}/${getTeamCapacity(team)}${\n        team.type !== 'assistant' ? ` (min: ${teamSetup.minPlayerPerTeam})` : ''\n      }`\"\n      :users=\"teamUsers\"\n      :teams=\"teams\"\n      :team-setup=\"teamSetup\"\n      :isAssigned=\"true\"\n      :enable-auto-fill=\"false\"\n      :enable-assign-team=\"isEditable\"\n      :allow-assign-to-other-teams=\"isEditable\"\n      :enable-remove-user=\"isEditable\"\n      :back-button-text=\"'Retour aux équipes'\"\n      :delete-modal-title=\"'Confirmer le retrait'\"\n      :delete-modal-message=\"'Êtes-vous sûr de vouloir retirer cet utilisateur de la team ?'\"\n      :selected-team-ids=\"selectedTeamIds\"\n      @update:selectedTeamIds=\"selectedTeamIds = $event\"\n      @assign-team=\"handleAssignTeam\"\n      @delete-user=\"handleRemoveUser\"\n      @go-back=\"goBackToTeams\"\n    />\n\n    <!-- Section pour ajouter des utilisateurs non assignés -->\n    <div v-if=\"teamNotFull && unassignedUsers.length > 0\" class=\"mt-4\">\n      <div class=\"flex items-center space-x-2\">\n        <v-select\n          v-model=\"selectedUnassignedUserId\"\n          :options=\"unassignedUsers\"\n          :reduce=\"(user) => user.id\"\n          label=\"name\"\n          placeholder=\"Ajouter un utilisateur\"\n          class=\"w-64\"\n          appendToBody\n        />\n        <ButtonComponent\n          variant=\"primary\"\n          size=\"sm\"\n          @click=\"assignUnassignedUserToTeam\"\n          :disabled=\"!selectedUnassignedUserId\"\n        >\n          <span class=\"hidden sm:inline\">Ajouter</span>\n        </ButtonComponent>\n      </div>\n    </div>\n\n    <!-- Affichage des messages d'information -->\n    <ErrorMessageComponent\n      v-if=\"!isTeamValid && !hasUnassignedUsers && team.type !== 'assistant'\"\n      message=\"L'équipe n'est pas valide et il n'y a pas d'utilisateurs à assigner. Veuillez créer de nouveaux utilisateurs ou réassigner des utilisateurs d'autres équipes.\"\n    />\n    <ErrorMessageComponent\n      v-else-if=\"\n        !isTeamValid && hasUnassignedUsers && team.type !== 'assistant'\n      \"\n      message=\"L'équipe n'est pas valide. Veuillez ajouter des utilisateurs à l'équipe.\"\n    />\n  </div>\n</template>\n\n<script>\n  import { mapState } from 'vuex';\n  import ListUsersTable from '@/components/ListUsersTable.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import ErrorMessageComponent from '@/components/ErrorMessageComponent.vue';\n  import apiService from '@/services/apiService';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ListUsersTable,\n      ButtonComponent,\n      ErrorMessageComponent,\n    },\n    data() {\n      return {\n        team: null,\n        teamUsers: [],\n        teams: [],\n        teamSetup: null,\n        unassignedUsers: [],\n        selectedUnassignedUserId: null,\n        selectedTeamIds: {},\n        isAutoFilled: false,\n        initialSelectedTeamIds: {},\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n      }),\n      // Définir `currentStatus` comme une propriété calculée liée au store\n      currentStatus: {\n        get() {\n          return this.statuses.registrationStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'registrationStatus',\n            value: newStatus,\n          });\n        },\n      },\n      isEditable() {\n        return this.statuses.registrationStatus !== 'completed';\n      },\n      teamNotFull() {\n        if (!this.team) return false;\n        return this.teamUsers.length < this.getTeamCapacity(this.team);\n      },\n      isTeamValid() {\n        if (!this.teamSetup || !this.team) return false;\n        const minPlayers = this.teamSetup.minPlayerPerTeam;\n        return this.teamUsers.length >= minPlayers;\n      },\n      hasUnassignedUsers() {\n        return this.unassignedUsers.length > 0;\n      },\n      hasAvailableTeams() {\n        return this.availableTeams.length > 0;\n      },\n      availableTeams() {\n        if (!this.teamSetup) return [];\n\n        const currentTeamIds = this.unassignedUsers\n          .map((user) => user.teamId)\n          .filter((teamId) => teamId != null);\n\n        return this.teams.filter((team) => {\n          const isCurrentTeam = currentTeamIds.includes(team.id);\n          const hasSpace =\n            (team.usersTourneys ? team.usersTourneys.length : 0) <\n            this.getTeamCapacity(team);\n          return isCurrentTeam || hasSpace;\n        });\n      },\n      teamOptions() {\n        return this.availableTeams.map((team) => {\n          const capacity = this.getTeamCapacity(team);\n          return {\n            id: team.id,\n            teamName: `${team.teamName} (${team.usersTourneys.length}/${capacity})`,\n          };\n        });\n      },\n    },\n    async created() {\n      await this.fetchData();\n    },\n    methods: {\n      async fetchData() {\n        const tourneyId = this.$route.params.tourneyId;\n        const teamId = this.$route.params.teamId;\n        try {\n          const response = await apiService.get(\n            `/tourneys/${tourneyId}/teams-details`\n          );\n          const data = response.data;\n          this.teamSetup = data.teamSetup;\n          this.teams = data.teams;\n\n          // Exclure les admins et extraire les objets 'user'\n          this.unassignedUsers = data.unassignedUsers\n            .filter((userTourney) => userTourney.user.role.id !== 1)\n            .map((userTourney) => userTourney.user);\n\n          // Trouver l'équipe\n          this.team = this.teams.find((t) => t.id === parseInt(teamId));\n          if (!this.team) {\n            toast.error('Équipe introuvable.');\n            this.goBackToTeams();\n            return;\n          }\n\n          // Extraire les utilisateurs de usersTourneys en filtrant les utilisateurs indéfinis\n          if (\n            this.team.usersTourneys &&\n            Array.isArray(this.team.usersTourneys)\n          ) {\n            this.teamUsers = this.team.usersTourneys\n              .map((ut) => ut.user)\n              .filter((user) => user != null);\n          } else {\n            this.teamUsers = [];\n          }\n          // Initialiser selectedTeamIds\n          this.selectedTeamIds = {};\n          this.teamUsers.forEach((user) => {\n            if (user.teamId) {\n              this.selectedTeamIds[user.id] = user.teamId;\n            }\n          });\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du tournoi:',\n            error\n          );\n          toast.error(\n            'Une erreur est survenue lors de la récupération des données.'\n          );\n          this.goBackToTeams();\n        }\n      },\n\n      getTeamCapacity(team) {\n        if (team.type === 'assistant') {\n          return this.teamSetup.playerPerTeam * this.teamSetup.maxTeamNumber;\n        }\n        return this.teamSetup.playerPerTeam;\n      },\n\n      async handleAssignTeam({ userId, teamId }) {\n        const tourneyId = this.$route.params.tourneyId;\n        try {\n          await apiService.post(\n            `/tourneys/${tourneyId}/users/${userId}/teams`,\n            { teamId }\n          );\n          // Mettre à jour les données locales\n          await this.fetchData();\n          toast.success(\"Utilisateur assigné avec succès à l'équipe.\");\n        } catch (error) {\n          console.error(\"Erreur lors de l'assignation de l'équipe:\", error);\n          toast.error(\n            \"Une erreur est survenue lors de l'assignation de l'équipe.\"\n          );\n        }\n      },\n\n      async handleRemoveUser(userId) {\n        const tourneyId = this.$route.params.tourneyId;\n        const teamId = this.$route.params.teamId;\n        try {\n          await apiService.delete(\n            `/tourneys/${tourneyId}/teams/${teamId}/users/${userId}`\n          );\n          // Mettre à jour les données locales\n          await this.fetchData();\n          toast.success(\"Utilisateur retiré de l'équipe avec succès.\");\n        } catch (error) {\n          console.error(\n            \"Erreur lors du retrait de l'utilisateur de l'équipe:\",\n            error\n          );\n          toast.error(\n            \"Une erreur est survenue lors du retrait de l'utilisateur de l'équipe.\"\n          );\n        }\n      },\n\n      async assignUnassignedUserToTeam() {\n        const tourneyId = this.$route.params.tourneyId;\n        const teamId = this.$route.params.teamId;\n        const userId = this.selectedUnassignedUserId;\n        try {\n          await apiService.post(\n            `/tourneys/${tourneyId}/users/${userId}/teams`,\n            { teamId }\n          );\n          // Mettre à jour les données locales\n          await this.fetchData();\n          this.selectedUnassignedUserId = null;\n          toast.success(\"Utilisateur ajouté à l'équipe avec succès.\");\n        } catch (error) {\n          console.error(\n            \"Erreur lors de l'ajout de l'utilisateur à l'équipe:\",\n            error\n          );\n          toast.error(\n            \"Une erreur est survenue lors de l'ajout de l'utilisateur à l'équipe.\"\n          );\n        }\n      },\n\n      goBackToTeams() {\n        this.$router.push(\n          `/admin/tourneys/${this.$route.params.tourneyId}/teams`\n        );\n      },\n    },\n  };\n</script>\n","import { render } from \"./TourneyTeamUsers.vue?vue&type=template&id=2eaed3ef\"\nimport script from \"./TourneyTeamUsers.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyTeamUsers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- TourneyPools.vue -->\n<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <TourneySubMenu :tourneyId=\"tourneyId\" />\n\n    <div class=\"p-6\">\n      <div class=\"flex items-center mb-8 justify-between\">\n        <div class=\"flex items-center\">\n          <TitleComponent title=\"Gestion des Pools\"></TitleComponent>\n          <!-- Bouton Réglages -->\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"cog\"\n            @click=\"openPoolSetupModal\"\n            variant=\"secondary\"\n            class=\"ml-2\"\n          >\n            <span class=\"hidden sm:inline\">Global Config Pools</span>\n          </ButtonComponent>\n\n          <!-- Bouton de génération des pools -->\n          <div class=\"flex justify-end\">\n            <ButtonComponent\n              v-if=\"isEditable\"\n              variant=\"algo\"\n              fontAwesomeIcon=\"cog\"\n              @click=\"openGeneratePoolsModal\"\n            >\n              <span class=\"hidden sm:inline\"> Générer Pools auto. </span>\n            </ButtonComponent>\n          </div>\n          <!-- Bouton pour supprimer toutes les pools -->\n          <ButtonComponent\n            v-if=\"isEditable && pools.length > 0\"\n            variant=\"danger\"\n            fontAwesomeIcon=\"trash\"\n            @click=\"confirmDeleteAllPools\"\n          >\n            <span class=\"hidden sm:inline\"> Supprimer les Pools </span>\n          </ButtonComponent>\n        </div>\n\n        <!-- Sélecteur de statut pour les pools -->\n        <div class=\"flex items-center\">\n          <StatusSelectorComponent\n            :tourneyId=\"tourneyId\"\n            label=\"Pools:\"\n            statusKey=\"poolStatus\"\n            :statusOptions=\"poolStatusOptions\"\n            v-model=\"currentStatus\"\n          />\n        </div>\n      </div>\n\n      <!-- Messages d'avertissement -->\n      <div\n        v-if=\"showWarnings && warningMessages.length > 0\"\n        class=\"mb-4 p-3 bg-blue-100 border border-blue-300 rounded-lg text-blue-800 dark:bg-blue-900 dark:border-blue-700 dark:text-blue-300\"\n      >\n        <div class=\"flex justify-between items-center\">\n          <span class=\"font-bold text-lg\">Informations importantes</span>\n          <button\n            class=\"text-sm text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200\"\n            @click=\"dismissWarnings\"\n          >\n            Fermer\n          </button>\n        </div>\n        <ul class=\"mt-2 space-y-2\">\n          <li\n            v-for=\"message in warningMessages\"\n            :key=\"message.id\"\n            class=\"flex items-start space-x-2 text-sm\"\n          >\n            <span\n              :class=\"{\n                'text-red-600': message.type === 'error',\n                'text-yellow-600': message.type === 'warning',\n                'text-green-600': message.type === 'info',\n              }\"\n            >\n              •\n            </span>\n            <div>\n              <span class=\"font-semibold\">{{ message.title }} :</span>\n              <span>{{ message.description }}</span>\n              <span\n                class=\"block mt-1 text-light-form-text dark:text-dark-form-text\"\n                >{{ message.recommendation }}</span\n              >\n            </div>\n          </li>\n        </ul>\n      </div>\n\n      <div class=\"flex items-center space-x-2 w-full md:w-auto\">\n        <!-- Filtre pour les pools -->\n        <FilterComponent\n          :filters=\"filters\"\n          @filter-change=\"handleFilterChange\"\n        />\n        <!-- Bouton pour assigner les équipes aux pools -->\n        <ButtonComponent\n          v-if=\"isEditable && unassignedTeams.length > 0\"\n          @click=\"navigateToAssignTeams\"\n          variant=\"primary\"\n          fontAwesomeIcon=\"users\"\n          class=\"ml-2\"\n        >\n          <span class=\"hidden sm:inline\">\n            Assigner Équipes ({{ unassignedTeams.length }})\n          </span>\n        </ButtonComponent>\n\n        <!-- Bouton pour générer les pools manquantes -->\n        <ButtonComponent\n          v-if=\"isEditable && canAddMorePools\"\n          @click=\"generateMissingPools\"\n          variant=\"algo\"\n          fontAwesomeIcon=\"plus\"\n          class=\"ml-2\"\n        >\n          <span class=\"hidden sm:inline\">Générer Pools manquantes</span>\n        </ButtonComponent>\n\n        <!-- Bouton pour peupler les pools avec les équipes non assignées -->\n        <ButtonComponent\n          v-if=\"isEditable && unassignedTeams.length > 0\"\n          @click=\"openConfirmationModal\"\n          variant=\"algo\"\n          fontAwesomeIcon=\"users\"\n          class=\"ml-2\"\n          :disabled=\"allPoolsComplete || unassignedTeams.length === 0\"\n        >\n          <span class=\"hidden sm:inline\">Peupler Pools Auto.</span>\n        </ButtonComponent>\n        <!-- Bouton pour retirer toutes les équipes des pools -->\n        <ButtonComponent\n          v-if=\"isEditable && teamsAssignedToPools.length > 0\"\n          @click=\"confirmRemoveAllTeamsFromPools\"\n          variant=\"danger\"\n          fontAwesomeIcon=\"users-slash\"\n          class=\"ml-2\"\n        >\n          <span class=\"hidden sm:inline\"\n            >Retirer toutes les équipes des Pools</span\n          >\n        </ButtonComponent>\n      </div>\n      <!-- Grille d'affichage des pools -->\n      <div\n        class=\"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-6 gap-4 mt-6\"\n      >\n        <!-- Carte pour ajouter une nouvelle pool -->\n        <CardAddComponent\n          v-if=\"isEditable && canAddMorePools\"\n          title=\"Pool\"\n          @openAddElementModal=\"openAddPoolModal\"\n        />\n\n        <!-- Cartes des pools existantes -->\n        <CardEditComponent\n          v-for=\"pool in filteredPools\"\n          :key=\"pool.id\"\n          :title=\"pool.name\"\n          :cornerCount=\"`${pool.teams.length}/${\n            pool.maxTeamPerPool || tourneySetup.defaultMaxTeamPerPool || '∞'\n          } Équipes`\"\n          :titleColor=\"getPoolStatusColor(pool)\"\n          :showDeleteButton=\"isEditable\"\n          :showEditButton=\"isEditable\"\n          @delete=\"confirmDeletePool(pool.id)\"\n          @edit=\"editPool(pool)\"\n          @click=\"openPoolDetails(pool)\"\n        >\n          <!-- Liste des équipes dans la pool -->\n          <template #user-list>\n            <ul class=\"grid grid-cols-1 gap-2 mt-2\">\n              <li\n                v-for=\"team in pool.teams.slice(0, 4)\"\n                :key=\"team.id\"\n                class=\"flex items-center text-sm text-light-form-text dark:text-dark-form-text truncate\"\n              >\n                <font-awesome-icon\n                  icon=\"users\"\n                  class=\"mr-2 text-light-pool-text dark:text-dark-pool-text\"\n                />\n                <span class=\"truncate\">{{ team.teamName }}</span>\n              </li>\n              <li\n                v-if=\"pool.teams.length > 4\"\n                class=\"text-sm text-light-pool-text dark:text-dark-pool-text\"\n              >\n                + {{ pool.teams.length - 4 }} autres\n              </li>\n            </ul>\n            <!-- Afficher le nombre de sessions -->\n            <div\n              class=\"mt-2 text-sm text-light-pool-text dark:text-dark-pool-text\"\n            >\n              Sessions programmées : {{ pool.schedulesCount || 0 }}\n            </div>\n          </template>\n        </CardEditComponent>\n      </div>\n\n      <!-- Modale pour ajouter/modifier une pool -->\n      <ModalComponent\n        :isVisible=\"showModal\"\n        :title=\"editingPoolId ? 'Modifier Pool' : 'Ajouter une nouvelle Pool'\"\n        @close=\"closeModal\"\n      >\n        <template #content>\n          <FormComponent\n            v-model=\"newPool\"\n            :fields=\"formFields\"\n            :isEditing=\"!!editingPoolId\"\n            @form-submit=\"handleFormSubmit\"\n            @form-cancel=\"closeModal\"\n          />\n        </template>\n      </ModalComponent>\n\n      <!-- Modale de confirmation pour supprimer une pool -->\n      <DeleteConfirmationModal\n        :isVisible=\"showDeleteConfirmation\"\n        :isHardDelete=\"false\"\n        :title=\"'Supprimer Pool'\"\n        :message=\"'Êtes-vous sûr de vouloir supprimer cette pool ?'\"\n        @form-cancel=\"closeDeleteConfirmation\"\n        @confirm=\"deletePool(confirmedDeletePoolId)\"\n      />\n\n      <!-- Modale pour modifier les réglages des pools -->\n      <ModalComponent\n        :isVisible=\"showPoolSetupModal\"\n        :title=\"'Réglages des Pools'\"\n        @close=\"closePoolSetupModal\"\n      >\n        <template #content>\n          <!-- Formulaire de configuration des pools -->\n          <FormComponent\n            v-model=\"localPoolSetup\"\n            :fields=\"poolSetupFields\"\n            :isEditing=\"true\"\n            @form-submit=\"handlePoolSetupSubmit\"\n            @form-cancel=\"closePoolSetupModal\"\n            :customValidation=\"customPoolSetupValidation\"\n          />\n        </template>\n      </ModalComponent>\n\n      <!-- Modale de confirmation pour peupler les pools avec les équipes non assignées -->\n      <ConfirmationModal\n        :isVisible=\"showConfirmationModal\"\n        title=\"Confirmation de Peuplement\"\n        message=\"Êtes-vous sûr de vouloir peupler automatiquement les pools avec les équipes non assignées ?\"\n        @confirm=\"populatePoolsWithUnassignedTeams\"\n        @cancel=\"closeConfirmationModal\"\n      />\n\n      <!-- Modale de confirmation pour retirer toutes les équipes des pools -->\n      <DeleteConfirmationModal\n        :isVisible=\"showRemoveTeamsConfirmation\"\n        :isHardDelete=\"false\"\n        :title=\"'Retirer toutes les équipes des Pools'\"\n        :message=\"'Êtes-vous sûr de vouloir retirer toutes les équipes des pools ?'\"\n        @form-cancel=\"closeRemoveTeamsConfirmation\"\n        @confirm=\"removeAllTeamsFromPools\"\n      >\n      </DeleteConfirmationModal>\n\n      <!-- Modale pour générer des pools selon le DP strategy-->\n      <StrategyPoolGeneratorComponent\n        v-if=\"showGeneratePoolsModal\"\n        :tourneyId=\"tourneyId\"\n        :tourneyType=\"tourneyType\"\n        :teams=\"teams\"\n        :pools=\"pools\"\n        :availableFields=\"availableFields\"\n        @poolsGenerated=\"handlePoolsGenerated\"\n        @close=\"closeGeneratePoolsModal\"\n      />\n\n      <!-- Modale de confirmation pour supprimer toutes les pools -->\n      <DeleteConfirmationModal\n        :isVisible=\"showDeleteAllConfirmation\"\n        :isHardDelete=\"true\"\n        :title=\"'Supprimer toutes les Pools'\"\n        :message=\"'Êtes-vous sûr de vouloir supprimer toutes les pools ? Cette action est irréversible.'\"\n        @form-cancel=\"closeDeleteAllConfirmation\"\n        @confirm=\"deleteAllPools\"\n      >\n        <template #message>\n          Êtes-vous sûr de vouloir supprimer toutes les pools ? Cette action est\n          irréversible.\n        </template>\n      </DeleteConfirmationModal>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState, mapActions } from 'vuex';\n  import apiService from '@/services/apiService';\n  import CardAddComponent from '@/components/CardAddComponent.vue';\n  import CardEditComponent from '@/components/CardEditComponent.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import TourneySubMenu from '@/components/TourneySubMenu.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n  import { toast } from 'vue3-toastify';\n  import FilterComponent from '@/components/FilterComponent.vue';\n  import StrategyPoolGeneratorComponent from '@/components/StrategyPattern/Pool/StrategyPoolGeneratorComponent.vue';\n  import ConfirmationModal from '@/components/ConfirmationModal.vue';\n\n  export default {\n    components: {\n      ModalComponent,\n      ButtonComponent,\n      DeleteConfirmationModal,\n      TourneySubMenu,\n      CardAddComponent,\n      CardEditComponent,\n      FormComponent,\n      TitleComponent,\n      StatusSelectorComponent,\n      FilterComponent,\n      StrategyPoolGeneratorComponent,\n      ConfirmationModal,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId, // Récupération du tourneyId depuis les params\n        pools: [], // Liste des pools\n        teams: [], // Liste des équipes du tournoi\n        showModal: false,\n        showConfirmationModal: false,\n        showDeleteConfirmation: false,\n        showDeleteAllConfirmation: false,\n        showPoolSetupModal: false,\n        confirmedDeletePoolId: null,\n        newPool: {\n          name: '',\n          tourneyId: this.$route.params.tourneyId,\n        },\n        editingPoolId: null,\n        isSubmitting: false,\n        localPoolSetup: {\n          minTeamPerPool: null,\n          maxTeamPerPool: null,\n        },\n        showGeneratePoolsModal: false,\n        showRemoveTeamsConfirmation: false,\n        availableFields: 0,\n        desiredPoolCount: null,\n        tourneySetup: {\n          maxNumberOfPools: 0, // Valeur par défaut\n          defaultMinTeamPerPool: 0, // Valeur par défaut\n          defaultMaxTeamPerPool: 0, // Valeur par défaut\n        },\n        formFields: [\n          {\n            name: 'name',\n            label: 'Nom de la Pool',\n            type: 'text',\n            required: true,\n          },\n          {\n            name: 'stage',\n            label: 'Stade',\n            placeholder: 'Demi-finale, Finale, etc.',\n            type: 'text',\n            required: false,\n          },\n          {\n            name: 'maxTeamPerPool',\n            label: \"Nombre maximum d'équipes par pool\",\n            type: 'number',\n            required: false,\n          },\n          {\n            name: 'minTeamPerPool',\n            label: \"Nombre minimum d'équipes par pool\",\n            type: 'number',\n            required: false,\n          },\n        ],\n        poolSetupFields: [\n          {\n            name: 'maxNumberOfPools',\n            label: 'Nombre maximum de pools',\n            type: 'number',\n            required: true,\n          },\n          {\n            name: 'defaultMinTeamPerPool',\n            label: \"Nombre min. d'équipes par pool\",\n            type: 'number',\n            required: true,\n          },\n          {\n            name: 'defaultMaxTeamPerPool',\n            label: \"Nombre max. d'équipes par pool\",\n            type: 'number',\n            required: true,\n          },\n        ],\n        poolStatusOptions: [\n          { value: 'draft', label: 'Edition' },\n          { value: 'completed', label: 'Terminé' },\n        ],\n        filters: [\n          {\n            label: 'Pools',\n            value: '',\n            options: [\n              { label: 'Toutes les Pools', value: '' },\n              { label: 'Valides', value: 'valid' },\n              { label: 'Invalides', value: 'partial' },\n              { label: 'Vides', value: 'empty' },\n              { label: 'Non planifiées', value: 'unscheduled' },\n            ],\n          },\n        ],\n        showWarnings: true, // Ajouté pour gérer l'affichage des avertissements\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n        tourneyType: (state) => state.tourneyType,\n      }),\n      // Définir `currentStatus` comme une propriété calculée liée au store\n      currentStatus: {\n        get() {\n          return this.statuses.poolStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'poolStatus',\n            value: newStatus,\n          });\n        },\n      },\n      isEditable() {\n        return this.statuses.poolStatus !== 'completed';\n      },\n      allPoolsComplete() {\n        return this.pools.every((pool) => {\n          const maxTeams =\n            pool.maxTeamPerPool || this.tourneySetup.defaultMaxTeamPerPool || 0;\n          return pool.teams.length >= maxTeams;\n        });\n      },\n      invalidPools() {\n        return this.pools.filter((pool) => {\n          const minTeams =\n            pool.minTeamPerPool ||\n            this.tourneySetup?.defaultMinTeamPerPool ||\n            0;\n          const maxTeams =\n            pool.maxTeamPerPool ||\n            this.tourneySetup?.defaultMaxTeamPerPool ||\n            Infinity;\n\n          return pool.teams.length < minTeams || pool.teams.length > maxTeams;\n        });\n      },\n      unassignedTeams() {\n        return this.teams.filter((team) => !team.poolId);\n      },\n      recommendedPools() {\n        // Le nombre recommandé de pools est le nombre de terrains disponibles\n        return this.availableFields;\n      },\n      isPoolCountExceedingFields() {\n        return this.pools.length > this.availableFields;\n      },\n      shouldShowFieldWarning() {\n        const maxNumberOfPools = this.tourneySetup?.maxNumberOfPools || 0;\n        return this.availableFields > maxNumberOfPools;\n      },\n      canAddMorePools() {\n        const maxNumberOfPools = this.tourneySetup?.maxNumberOfPools || 0;\n        return this.pools.length < maxNumberOfPools;\n      },\n      teamsAssignedToPools() {\n        return this.teams.filter((team) => team.poolId);\n      },\n      filteredPools() {\n        return this.pools.filter((pool) => {\n          const minTeams =\n            pool.minTeamPerPool ||\n            this.tourneySetup?.defaultMinTeamPerPool ||\n            0;\n\n          if (this.filters[0].value === 'valid') {\n            return pool.teams.length >= minTeams;\n          }\n          if (this.filters[0].value === 'partial') {\n            return pool.teams.length > 0 && pool.teams.length < minTeams;\n          }\n          if (this.filters[0].value === 'empty') {\n            return pool.teams.length === 0;\n          }\n          if (this.filters[0].value === 'unscheduled') {\n            return !pool.isScheduled; // Nouveau filtre\n          }\n          return true;\n        });\n      },\n      warningMessages() {\n        const messages = [];\n\n        if (this.invalidPools.length > 0) {\n          messages.push({\n            id: 1,\n            type: 'warning',\n            title: 'Pools invalides',\n            description: `Il y a ${this.invalidPools.length} pools invalides.`,\n            recommendation:\n              'Veuillez vérifier les pools et corriger les erreurs.',\n          });\n        }\n\n        if (this.unassignedTeams.length > 0) {\n          messages.push({\n            id: 2,\n            type: 'info',\n            title: 'Équipes non assignées',\n            description: `Il y a ${this.unassignedTeams.length} équipes non assignées.`,\n            recommendation: 'Veuillez assigner les équipes aux pools.',\n          });\n        }\n\n        if (this.isPoolCountExceedingFields) {\n          messages.push({\n            id: 3,\n            type: 'warning',\n            title: 'Nombre de pools excède les terrains disponibles',\n            description: ` ${this.pools.length} Pools pour ${this.availableFields} terrains. Risque de temps d'attente élevée pour les joueurs.`,\n            recommendation:\n              'Veuillez ajouter des terrains pour garantir un tournus fluide.',\n          });\n        }\n\n        if (this.shouldShowFieldWarning) {\n          messages.push({\n            id: 4,\n            type: 'info',\n            title: 'Terrains disponibles',\n            description: ` Vous avez plus de terrains disponibles (${this.availableFields}) que le nombre maximum de pools (${this.tourneySetup.maxNumberOfPools}).`,\n            recommendation:\n              'Vous pouvez augmenter le nombre de pools pour optimiser l’utilisation des terrains.',\n          });\n        }\n\n        if (this.pools.length < this.availableFields) {\n          messages.push({\n            id: 6,\n            type: 'info',\n            title: 'Nombre de Pools recommandés',\n            description: ` Nous vous recommandons de créer autant de pools que de terrains disponibles (${this.availableFields}).`,\n          });\n        }\n\n        return messages;\n      },\n    },\n    methods: {\n      // Mapper les actions du module `tourney`\n      ...mapActions('tourney', ['fetchTourneyStatuses']),\n      // Récupérer les pools du tournoi\n      async fetchTourneyPoolsDetails() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/pools-details`\n          );\n          const { pools, teams, tourneySetup } = response.data;\n          this.pools = pools.map((pool) => ({\n            ...pool,\n            schedulesCount: pool.schedules ? pool.schedules.length : 0,\n            isScheduled: pool.schedules && pool.schedules.length > 0,\n          }));\n          this.teams = teams;\n          this.tourneySetup = tourneySetup;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails des pools:',\n            error\n          );\n          toast.error('Erreur lors de la récupération des détails des pools.');\n        }\n      },\n      async fetchAvailableFields() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/fields`\n          );\n          const fields = response.data;\n          this.availableFields = fields.length;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des terrains:', error);\n          toast.error('Erreur lors de la récupération des terrains.');\n        }\n      },\n\n      async generateMissingPools() {\n        try {\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/pools/generate-missing`\n          );\n          const { newPools } = response.data;\n          toast.success(\n            `${newPools.length} Pools manquantes générées avec succès !`\n          );\n          this.fetchTourneyPoolsDetails(); // Rafraîchir les données\n        } catch (error) {\n          console.error(\n            'Erreur lors de la génération des pools manquantes :',\n            error\n          );\n          toast.error('Erreur lors de la génération des pools manquantes.');\n        }\n      },\n      openConfirmationModal() {\n        this.showConfirmationModal = true; // Affiche le modal\n      },\n      closeConfirmationModal() {\n        this.showConfirmationModal = false; // Cache le modal\n      },\n\n      async populatePoolsWithUnassignedTeams() {\n        this.showConfirmationModal = false; // Cache le modal\n        try {\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/pools/populate-missing`\n          );\n          const { assignedTeams } = response.data;\n          toast.success(\n            `${assignedTeams.length} équipes assignées aux pools avec succès !`\n          );\n          this.fetchTourneyPoolsDetails(); // Rafraîchir les données\n        } catch (error) {\n          console.error(\n            'Erreur lors du peuplement des pools manquantes :',\n            error\n          );\n          toast.error('Erreur lors du peuplement des pools manquantes.');\n        }\n      },\n      // Fermer les messages d'avertissement\n      dismissWarnings() {\n        this.showWarnings = false;\n      },\n      handleFilterChange(filter) {\n        this.filters[0].value = filter.value;\n      },\n      openAddPoolModal() {\n        this.editingPoolId = null;\n        this.newPool = {\n          name: '',\n          tourneyId: this.tourneyId,\n        };\n        this.showModal = true;\n      },\n      editPool(pool) {\n        this.editingPoolId = pool.id;\n        this.newPool = { ...pool };\n        this.showModal = true;\n      },\n      openPoolDetails(pool) {\n        // Rediriger vers la page d'une pool pour assigner les équipes\n        this.$router.push(`/admin/tourneys/${this.tourneyId}/pools/${pool.id}`);\n      },\n      confirmDeletePool(id) {\n        this.confirmedDeletePoolId = id;\n        this.showDeleteConfirmation = true;\n      },\n      closeDeleteConfirmation() {\n        this.showDeleteConfirmation = false;\n        this.confirmedDeletePoolId = null;\n      },\n      closeModal() {\n        this.showModal = false;\n        this.editingPoolId = null;\n      },\n      async deletePool(id) {\n        try {\n          await apiService.delete(`/tourneys/${this.tourneyId}/pools/${id}`);\n          toast.success('Pool supprimée avec succès !');\n          this.fetchTourneyPoolsDetails(); // Récupérer les données mises à jour\n          this.closeDeleteConfirmation();\n        } catch (error) {\n          toast.error('Erreur lors de la suppression de la pool.');\n        }\n      },\n      async handleFormSubmit() {\n        if (this.isSubmitting) return;\n        this.isSubmitting = true;\n\n        try {\n          const payload = {\n            name: this.newPool.name,\n            tourneyId: this.tourneyId,\n            stage: this.newPool.stage,\n            maxTeamPerPool: this.newPool.maxTeamPerPool,\n            minTeamPerPool: this.newPool.minTeamPerPool,\n          };\n\n          if (this.editingPoolId) {\n            await apiService.put(\n              `/tourneys/${this.tourneyId}/pools/${this.editingPoolId}`,\n              payload\n            );\n          } else {\n            await apiService.post(`/tourneys/${this.tourneyId}/pools`, payload);\n          }\n\n          toast.success(\n            `Pool ${this.editingPoolId ? 'modifiée' : 'ajoutée'} avec succès !`\n          );\n          this.fetchTourneyPoolsDetails(); // Récupérer les données mises à jour\n        } catch (error) {\n          console.error(\"Erreur lors de l'enregistrement de la pool:\", error);\n          toast.error(\"Erreur lors de l'enregistrement de la pool.\");\n        } finally {\n          this.isSubmitting = false;\n          this.closeModal();\n        }\n      },\n      confirmRemoveAllTeamsFromPools() {\n        this.showRemoveTeamsConfirmation = true;\n      },\n\n      closeRemoveTeamsConfirmation() {\n        this.showRemoveTeamsConfirmation = false;\n      },\n\n      async removeAllTeamsFromPools() {\n        try {\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/pools/remove-teams`\n          );\n          toast.success(\n            'Toutes les équipes ont été retirées des pools avec succès !'\n          );\n          this.fetchTourneyPoolsDetails();\n        } catch (error) {\n          console.error('Erreur lors du retrait des équipes des pools:', error);\n          toast.error('Erreur lors du retrait des équipes des pools.');\n        } finally {\n          this.closeRemoveTeamsConfirmation();\n        }\n      },\n\n      confirmDeleteAllPools() {\n        this.showDeleteAllConfirmation = true;\n      },\n      closeDeleteAllConfirmation() {\n        this.showDeleteAllConfirmation = false;\n      },\n      async deleteAllPools() {\n        try {\n          await apiService.delete(`/tourneys/${this.tourneyId}/pools/reset`);\n          toast.success('Toutes les pools ont été supprimées avec succès !');\n          this.fetchTourneyPoolsDetails();\n        } catch (error) {\n          toast.error('Erreur lors de la suppression des pools.');\n        } finally {\n          this.closeDeleteAllConfirmation();\n        }\n      },\n      // Ouvrir la modale de réglages des pools\n      openPoolSetupModal() {\n        this.localPoolSetup = {\n          maxNumberOfPools: this.tourneySetup.maxNumberOfPools || null,\n          defaultMinTeamPerPool:\n            this.tourneySetup.defaultMinTeamPerPool || null,\n          defaultMaxTeamPerPool:\n            this.tourneySetup.defaultMaxTeamPerPool || null,\n        };\n        this.showPoolSetupModal = true;\n      },\n      closePoolSetupModal() {\n        this.showPoolSetupModal = false;\n      },\n      async handlePoolSetupSubmit() {\n        try {\n          await apiService.put(\n            `/tourneys/${this.tourneyId}`,\n            this.localPoolSetup\n          );\n          // Mettre à jour tourneySetup avec les nouvelles valeurs\n          this.tourneySetup = { ...this.tourneySetup, ...this.localPoolSetup };\n          toast.success('Réglages des pools mis à jour avec succès !');\n          this.closePoolSetupModal();\n        } catch (error) {\n          console.error(\n            'Erreur lors de la mise à jour des réglages des pools:',\n            error\n          );\n          toast.error('Erreur lors de la mise à jour des réglages des pools.');\n        }\n      },\n\n      customPoolSetupValidation() {\n        const errors = {};\n        const { defaultMinTeamPerPool, defaultMaxTeamPerPool } =\n          this.localPoolSetup;\n\n        if (defaultMinTeamPerPool > defaultMaxTeamPerPool) {\n          errors.defaultMinTeamPerPool =\n            'Le nombre minimum doit être inférieur ou égal au nombre maximum.';\n        }\n\n        return errors;\n      },\n      navigateToAssignTeams() {\n        // Rediriger vers la page pour assigner les équipes aux pools\n        this.$router.push(\n          `/admin/tourneys/${this.tourneyId}/pools/unassigned-teams`\n        );\n      },\n\n      // Ajouter pastille de couleur pour indiquer l'état du Pool\n      getPoolStatusColor(pool) {\n        const minTeams =\n          pool.minTeamPerPool || this.tourneySetup?.defaultMinTeamPerPool || 0;\n        if (pool.teams.length >= minTeams) {\n          return 'green'; // Valide\n        } else if (pool.teams.length > 0) {\n          return 'orange'; // Partielle\n        } else {\n          return 'gray'; // Vide\n        }\n      },\n\n      // Pool generation\n      openGeneratePoolsModal() {\n        this.showGeneratePoolsModal = true;\n      },\n      closeGeneratePoolsModal() {\n        this.showGeneratePoolsModal = false;\n      },\n      async generatePools() {\n        if (!this.desiredPoolCount || this.desiredPoolCount < 1) {\n          return toast.error('Veuillez entrer un nombre valide de pools.');\n        }\n\n        try {\n          // Appel à l'API ou logique pour générer les pools\n          await apiService.post(`/tourneys/${this.tourneyId}/pools/generate`, {\n            poolCount: this.desiredPoolCount,\n          });\n\n          toast.success('Pools générés avec succès !');\n          this.closeGeneratePoolsModal();\n        } catch (error) {\n          console.error('Erreur lors de la génération des pools :', error);\n          toast.error('Erreur lors de la génération des pools.');\n        }\n      },\n\n      // Rafraîchir les données après la génération des pools\n      handlePoolsGenerated() {\n        this.fetchTourneyPoolsDetails();\n        this.closeGeneratePoolsModal();\n      },\n    },\n    mounted() {\n      this.fetchTourneyStatuses(this.tourneyId);\n      this.fetchTourneyPoolsDetails();\n      this.fetchAvailableFields();\n    },\n  };\n</script>\n\n<style scoped>\n  /* Géré par Tailwind CSS */\n</style>\n","<!-- components/StrategyPattern/Pool/StrategyPoolGeneratorComponent.vue -->\n<template>\n  <ModalComponent\n    :isVisible=\"isVisible\"\n    title=\"Générer des Pools\"\n    @close=\"handleClose\"\n  >\n    <template #content>\n      <component\n        :is=\"currentStrategyComponent\"\n        ref=\"strategyComponent\"\n        :tourneyId=\"tourneyId\"\n        :teams=\"teams\"\n        :pools=\"pools\"\n        :availableFields=\"availableFields\"\n      ></component>\n    </template>\n    <template #footer>\n      <ButtonComponent variant=\"secondary\" @click=\"handleClose\">\n        Annuler\n      </ButtonComponent>\n      <ButtonComponent variant=\"primary\" @click=\"generatePools\">\n        Générer\n      </ButtonComponent>\n    </template>\n  </ModalComponent>\n</template>\n\n<script>\n  import CustomRoundRobinStrategy from './strategies/CustomRoundRobinStrategy.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n\n  export default {\n    components: {\n      CustomRoundRobinStrategy,\n      ModalComponent,\n      ButtonComponent,\n    },\n    props: {\n      tourneyId: {\n        type: String,\n        required: true,\n      },\n      tourneyType: {\n        type: String,\n        required: false,\n      },\n      teams: {\n        type: Array,\n        required: false,\n      },\n      pools: {\n        type: Array,\n        required: false,\n      },\n      availableFields: {\n        type: Number,\n        required: false,\n      },\n      isVisible: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    computed: {\n      currentStrategyComponent() {\n        switch (this.tourneyType) {\n          case 'customRoundRobin':\n            return 'CustomRoundRobinStrategy';\n          // Ajouter d'autres cas pour chaque tourneyType\n          default:\n            return 'CustomRoundRobinStrategy';\n        }\n      },\n    },\n    methods: {\n      handleClose() {\n        this.$emit('close');\n      },\n      async generatePools() {\n        // Appeler la méthode generatePools du composant enfant\n        const result = await this.$refs.strategyComponent.generatePools();\n        if (result) {\n          this.$emit('poolsGenerated');\n          this.handleClose();\n        }\n      },\n    },\n  };\n</script>\n","<!-- components/StrategyPattern/Pool/strategies/CustomRoundRobinStrategy.vue -->\n<template>\n  <div>\n    <p class=\"mb-4 text-light-form-text dark:text-dark-form-text\">\n      <span class=\"text-light-form-error dark:text-dark-form-error font-bold\">\n        <strong>Attention :</strong> Les pools existantes et les plannings\n        associés seront supprimés. Il est préférable d'effectuer cette action\n        une fois les inscriptions terminées. </span\n      ><br />\n      Cet algorithme (custom round robin) va générer des pools et assigner les\n      équipes du tournoi aux pools de manière optimisée, en prenant en compte le\n      nombre de terrains disponibles ainsi que les réglages.\n      <strong\n        >Il ne va jamais générer plus de Pools qu'il n'y a de terrains</strong\n      >.<br />\n    </p>\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    props: {\n      tourneyId: {\n        type: String,\n        required: true,\n      },\n      teams: {\n        type: Array,\n        required: true,\n      },\n      pools: {\n        type: Array,\n        required: true,\n      },\n      availableFields: {\n        type: Number,\n        required: true,\n      },\n    },\n    methods: {\n      async generatePools() {\n        try {\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/pools/generate`\n          );\n\n          const { pools, teamsWithoutPool } = response.data;\n          const poolCount = pools.length;\n          const teamsWithoutPoolCount = teamsWithoutPool.length;\n\n          toast.success(\n            `Pools générées avec succès ! ${poolCount} pools ont été créées.`,\n            {\n              autoClose: 3000,\n            }\n          );\n          if (teamsWithoutPoolCount > 0) {\n            toast.warning(\n              `${teamsWithoutPoolCount} équipes n'ont pas pu être assignées aux Pools.`,\n              {\n                autoClose: 4000,\n              }\n            );\n          }\n          return true;\n        } catch (error) {\n          console.error('Erreur lors de la génération des pools :', error);\n          const errorMessage =\n            error.response?.data?.message ||\n            'Erreur lors de la génération des pools.';\n          toast.error(errorMessage);\n          return false;\n        }\n      },\n    },\n  };\n</script>\n","import { render } from \"./CustomRoundRobinStrategy.vue?vue&type=template&id=31b3d321\"\nimport script from \"./CustomRoundRobinStrategy.vue?vue&type=script&lang=js\"\nexport * from \"./CustomRoundRobinStrategy.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./StrategyPoolGeneratorComponent.vue?vue&type=template&id=384cb25a\"\nimport script from \"./StrategyPoolGeneratorComponent.vue?vue&type=script&lang=js\"\nexport * from \"./StrategyPoolGeneratorComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TourneyPools.vue?vue&type=template&id=57cef24b&scoped=true\"\nimport script from \"./TourneyPools.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyPools.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyPools.vue?vue&type=style&index=0&id=57cef24b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-57cef24b\"]])\n\nexport default __exports__","<!-- TourneyPoolDetails.vue -->\n<template>\n  <div class=\"p-6\" v-if=\"pool\">\n    <div class=\"flex items-center mb-4 relative\">\n      <TitleComponent :title=\"`Détails : ${pool.name}`\" />\n      <!-- Bouton Retour -->\n      <ButtonComponent\n        variant=\"secondary\"\n        fontAwesomeIcon=\"arrow-left\"\n        class=\"absolute right-0\"\n        @click=\"goBackToPools\"\n      >\n        <span class=\"hidden sm:inline\">Retour aux Pools</span>\n      </ButtonComponent>\n    </div>\n\n    <!-- Section pour les équipes déjà assignées à la Pool -->\n    <div class=\"mb-8\">\n      <h2\n        :class=\"[\n          'text-lg',\n          'font-semibold',\n          'mb-2',\n          'text-light-poolDetails-text',\n          'dark:text-dark-poolDetails-text',\n        ]\"\n      >\n        Équipes dans cette Pool ({{ assignedTeams.length }}/{{\n          this.pool.maxTeamPerPool\n        }})\n      </h2>\n      <div v-if=\"assignedTeams.length > 0\">\n        <form @submit.prevent=\"removeSelectedTeams\">\n          <div class=\"overflow-x-auto\">\n            <table\n              :class=\"[\n                'min-w-full',\n                'bg-light-poolDetails-card',\n                'dark:bg-dark-poolDetails-card',\n                'rounded-lg',\n                'shadow-md',\n              ]\"\n            >\n              <thead>\n                <tr\n                  :class=\"[\n                    'dark:bg-dark-menu',\n                    'border-b',\n                    'dark:hover:bg-dark-menu',\n                  ]\"\n                >\n                  <th class=\"px-4 py-3 text-left\">\n                    <input\n                      v-if=\"isEditable\"\n                      type=\"checkbox\"\n                      v-model=\"selectAllAssigned\"\n                      @change=\"toggleSelectAllAssigned\"\n                    />\n                    <span class=\"ml-2\">All</span>\n                  </th>\n                  <th class=\"px-4 py-3 text-left\">Nom de l'équipe</th>\n                  <th v-if=\"isEditable\" class=\"px-4 py-3 text-left\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  v-for=\"team in assignedTeams\"\n                  :key=\"team.id\"\n                  :class=\"[\n                    'border-t',\n                    'hover:bg-light-poolDetails-hover',\n                    'dark:hover:bg-dark-poolDetails-hover',\n                    'cursor-pointer',\n                    {\n                      'bg-light-poolDetails-selectedErase dark:bg-dark-poolDetails-selectedErase':\n                        selectedAssignedTeams.includes(team.id),\n                    },\n                  ]\"\n                  @click=\"\n                    isEditable ? toggleRemoveTeamSelection(team.id) : null\n                  \"\n                >\n                  <td class=\"px-4 py-2\">\n                    <input\n                      v-if=\"isEditable\"\n                      type=\"checkbox\"\n                      v-model=\"selectedAssignedTeams\"\n                      :value=\"team.id\"\n                      @click.stop\n                    />\n                  </td>\n                  <td class=\"px-4 py-2\">\n                    <router-link\n                      :to=\"`/admin/tourneys/${tourneyId}/teams/${team.id}/users`\"\n                      class=\"text-blue-600 hover:underline dark:text-blue-400\"\n                      @click.stop\n                    >\n                      {{ team.teamName }}\n                    </router-link>\n                  </td>\n                  <td class=\"px-4 py-2\">\n                    <SoftButtonComponent\n                      v-if=\"isEditable\"\n                      fontAwesomeIcon=\"fa-trash\"\n                      iconClass=\"w-4 h-4 text-red-500 hover:text-red-700\"\n                      aria-label=\"Retirer du pool\"\n                      @click=\"removeTeam(team.id)\"\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ButtonComponent\n            v-if=\"isEditable\"\n            type=\"submit\"\n            variant=\"danger\"\n            class=\"mt-2\"\n            :disabled=\"selectedAssignedTeams.length === 0 || !isEditable\"\n          >\n            Retirer\n          </ButtonComponent>\n        </form>\n      </div>\n      <div v-else>\n        <p\n          :class=\"[\n            'text-light-poolDetails-text',\n            'dark:text-dark-poolDetails-text',\n          ]\"\n        >\n          Aucune équipe dans cette Pool.\n        </p>\n      </div>\n    </div>\n\n    <!-- Section pour ajouter des équipes à la Pool -->\n    <div>\n      <h2\n        :class=\"[\n          'text-lg',\n          'font-semibold',\n          'mb-2',\n          'text-light-poolDetails-text',\n          'dark:text-dark-poolDetails-text',\n        ]\"\n      >\n        Équipes non assignées\n      </h2>\n      <div v-if=\"unassignedTeams.length > 0\" class=\"relative\">\n        <form @submit.prevent=\"assignSelectedTeams\">\n          <div class=\"overflow-x-auto max-h-60 overflow-y-auto\">\n            <table\n              :class=\"[\n                'min-w-full',\n                'bg-light-poolDetails-card',\n                'dark:bg-dark-poolDetails-card',\n                'rounded-lg',\n                'shadow-md',\n              ]\"\n            >\n              <thead>\n                <tr\n                  :class=\"[\n                    'border-b',\n                    'dark:bg-dark-menu',\n                    'dark:hover:bg-dark-menu',\n                  ]\"\n                >\n                  <th class=\"px-4 py-3 text-left\">\n                    <input\n                      type=\"checkbox\"\n                      v-model=\"selectAllUnassigned\"\n                      @change=\"toggleSelectAllUnassigned\"\n                    />\n                    <span class=\"ml-2\">All</span>\n                  </th>\n                  <th class=\"px-4 py-3 text-left\">Nom de l'équipe</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  v-for=\"team in unassignedTeams\"\n                  :key=\"team.id\"\n                  :class=\"[\n                    'border-t',\n                    'hover:bg-light-poolDetails-hover',\n                    'dark:hover:bg-dark-poolDetails-hover',\n                    'cursor-pointer',\n                    {\n                      'bg-light-poolDetails-selected dark:bg-dark-poolDetails-selected':\n                        selectedUnassignedTeams.includes(team.id),\n                    },\n                  ]\"\n                  @click=\"isEditable ? toggleTeamSelection(team.id) : null\"\n                >\n                  <td class=\"px-4 py-2\">\n                    <input\n                      type=\"checkbox\"\n                      v-model=\"selectedUnassignedTeams\"\n                      :value=\"team.id\"\n                      @click.stop\n                    />\n                  </td>\n                  <td class=\"px-4 py-2\">\n                    <router-link\n                      :to=\"`/admin/tourneys/${tourneyId}/teams/${team.id}/users`\"\n                      class=\"text-blue-600 hover:underline dark:text-blue-400\"\n                      @click.stop\n                    >\n                      {{ team.teamName }}\n                    </router-link>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ButtonComponent\n            type=\"submit\"\n            variant=\"primary\"\n            class=\"mt-2\"\n            :disabled=\"selectedUnassignedTeams.length === 0\"\n          >\n            Assigner\n          </ButtonComponent>\n        </form>\n      </div>\n      <div v-else>\n        <p\n          :class=\"[\n            'text-light-poolDetails-text',\n            'dark:text-dark-poolDetails-text',\n          ]\"\n        >\n          Aucune équipe non assignée.\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState, mapActions } from 'vuex';\n  import apiService from '@/services/apiService';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import SoftButtonComponent from '@/components/SoftButtonComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      TitleComponent,\n      ButtonComponent,\n      SoftButtonComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        poolId: this.$route.params.poolId,\n        pool: null,\n        teams: [],\n        assignedTeams: [],\n        unassignedTeams: [],\n        selectedUnassignedTeams: [],\n        selectedAssignedTeams: [],\n        selectAllUnassigned: false,\n        selectAllAssigned: false,\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n      }),\n      // Définir `currentStatus` comme une propriété calculée liée au store\n      currentStatus: {\n        get() {\n          return this.statuses.poolStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'poolStatus',\n            value: newStatus,\n          });\n        },\n      },\n      isEditable() {\n        return this.statuses.poolStatus !== 'completed';\n      },\n      maxTeamsPerPool() {\n        return (\n          this.pool.maxTeamPerPool || this.pool.defaultMaxTeamPerPool || '∞'\n        );\n      },\n    },\n    methods: {\n      ...mapActions('tourney', ['fetchTourneyStatuses']),\n      async fetchPoolDetails() {\n        try {\n          // Récupérer les détails de la pool, incluant les équipes assignées\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/pools/${this.poolId}`\n          );\n          this.pool = response.data;\n\n          // Récupérer toutes les équipes du tournoi et filtrer\n          const teamsResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}/teams`\n          );\n          const allTeams = teamsResponse.data;\n\n          // Séparer les équipes non assignées, sans assistant et sans poolId\n          this.unassignedTeams = allTeams.filter(\n            (team) => team.type === 'player' && !team.poolId\n          );\n\n          // Utiliser les équipes assignées directement de `this.pool`\n          this.assignedTeams = this.pool.teams;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails de la Pool:',\n            error\n          );\n          toast.error('Erreur lors de la récupération des détails de la Pool.');\n        }\n      },\n      toggleSelectAllUnassigned() {\n        if (this.selectAllUnassigned) {\n          this.selectedUnassignedTeams = this.unassignedTeams.map(\n            (team) => team.id\n          );\n        } else {\n          this.selectedUnassignedTeams = [];\n        }\n      },\n      toggleSelectAllAssigned() {\n        if (this.selectAllAssigned) {\n          this.selectedAssignedTeams = this.assignedTeams.map(\n            (team) => team.id\n          );\n        } else {\n          this.selectedAssignedTeams = [];\n        }\n      },\n      async assignSelectedTeams() {\n        try {\n          // Vérifier si l'ajout des équipes ne dépasse pas la capacité maximale\n          const totalTeamsAfterAssignment =\n            this.assignedTeams.length + this.selectedUnassignedTeams.length;\n          const maxTeams =\n            this.pool.maxTeamPerPool ||\n            this.pool.defaultMaxTeamPerPool ||\n            Number.MAX_SAFE_INTEGER;\n\n          if (maxTeams && totalTeamsAfterAssignment > maxTeams) {\n            toast.error(\n              `Impossible d'assigner les équipes : la pool atteindrait sa capacité maximale de ${maxTeams} équipes.`\n            );\n            return;\n          }\n\n          await apiService.post(\n            `/tourneys/${this.tourneyId}/pools/${this.poolId}/assign-teams`,\n            {\n              teamIds: this.selectedUnassignedTeams,\n            }\n          );\n          toast.success('Équipes assignées avec succès !');\n          this.selectedUnassignedTeams = [];\n          this.selectAllUnassigned = false;\n          this.fetchPoolDetails();\n        } catch (error) {\n          console.error(\"Erreur lors de l'assignation des équipes:\", error);\n          toast.error(\"Erreur lors de l'assignation des équipes.\");\n        }\n      },\n\n      async removeTeam(teamId) {\n        try {\n          await apiService.post(\n            `/tourneys/${this.tourneyId}/pools/${this.poolId}/remove-teams`,\n            {\n              teamIds: [teamId],\n            }\n          );\n          toast.success('Équipe retirée avec succès !');\n          this.fetchPoolDetails();\n        } catch (error) {\n          console.error(\"Erreur lors du retrait de l'équipe:\", error);\n          toast.error(\"Erreur lors du retrait de l'équipe.\");\n        }\n      },\n\n      async removeSelectedTeams() {\n        try {\n          await apiService.post(\n            `/tourneys/${this.tourneyId}/pools/${this.poolId}/remove-teams`,\n            {\n              teamIds: this.selectedAssignedTeams,\n            }\n          );\n          toast.success('Équipes retirées avec succès !');\n          this.selectedAssignedTeams = [];\n          this.selectAllAssigned = false;\n          this.fetchPoolDetails();\n        } catch (error) {\n          console.error('Erreur lors du retrait des équipes:', error);\n          toast.error('Erreur lors du retrait des équipes.');\n        }\n      },\n      toggleTeamSelection(teamId) {\n        if (this.selectedUnassignedTeams.includes(teamId)) {\n          this.selectedUnassignedTeams = this.selectedUnassignedTeams.filter(\n            (id) => id !== teamId\n          );\n        } else {\n          this.selectedUnassignedTeams.push(teamId);\n        }\n      },\n\n      toggleRemoveTeamSelection(teamId) {\n        if (this.selectedAssignedTeams.includes(teamId)) {\n          this.selectedAssignedTeams = this.selectedAssignedTeams.filter(\n            (id) => id !== teamId\n          );\n        } else {\n          this.selectedAssignedTeams.push(teamId);\n        }\n      },\n      goBackToPools() {\n        this.$router.push(\n          `/admin/tourneys/${this.$route.params.tourneyId}/pools`\n        );\n      },\n    },\n    mounted() {\n      this.fetchTourneyStatuses(this.tourneyId);\n      this.fetchPoolDetails();\n    },\n  };\n</script>\n\n<style scoped>\n  /* Style pour les lignes sélectionnées */\n  table tr.selected {\n    background-color: #e0f7fa;\n  }\n\n  /* Optionnel : ajouter une différence visuelle pour les sections */\n  h2 {\n    border-bottom: 2px solid #e2e8f0;\n    padding-bottom: 0.5rem;\n  }\n\n  /* Highlight selected rows */\n  table tr:hover {\n    background-color: #f5f5f5;\n  }\n\n  table tr.selected {\n    background-color: #d1fae5;\n  }\n</style>\n","import { render } from \"./TourneyPoolDetails.vue?vue&type=template&id=63ca6cdb&scoped=true\"\nimport script from \"./TourneyPoolDetails.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyPoolDetails.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyPoolDetails.vue?vue&type=style&index=0&id=63ca6cdb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63ca6cdb\"]])\n\nexport default __exports__","<!-- src/views/admin/TourneyUnassignedTeams.vue -->\n<template>\n  <div class=\"mx-auto p-4\">\n    <div\n      class=\"p-4 bg-light-background dark:bg-dark-background rounded-md shadow-lg\"\n    >\n      <!-- Header with Title and Back Button -->\n      <div class=\"flex items-center justify-between mb-4\">\n        <div class=\"flex items-center space-x-2\">\n          <TitleComponent title=\"Équipes sans Pool\" />\n        </div>\n\n        <!-- Back Button -->\n        <ButtonComponent\n          variant=\"secondary\"\n          fontAwesomeIcon=\"arrow-left\"\n          @click=\"goBack\"\n        >\n          <span class=\"hidden sm:inline\">Retour</span>\n        </ButtonComponent>\n      </div>\n\n      <!-- Message if no pools are available -->\n      <p\n        v-if=\"!hasAvailablePools\"\n        class=\"text-light-errorMessage dark:text-dark-errorMessage mb-4 font-bold\"\n      >\n        Aucune pool disponible. Veuillez en créer de nouvelles ou réassigner des\n        équipes.\n      </p>\n\n      <!-- Table to display unassigned teams -->\n      <div class=\"overflow-x-auto overflow-y-auto max-h-[70vh] mt-4\">\n        <table\n          class=\"min-w-full bg-light-card dark:bg-dark-card shadow rounded-lg\"\n        >\n          <thead>\n            <tr>\n              <!-- Team Name Column -->\n              <th\n                class=\"px-4 py-2 text-left text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n              >\n                Nom de l'équipe\n              </th>\n              <!-- Assign to Pool Column -->\n              <th\n                class=\"px-4 py-2 text-left text-light-title dark:text-dark-title border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n              >\n                Assigner à une Pool\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              v-for=\"team in unassignedTeams\"\n              :key=\"team.id\"\n              class=\"hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground\"\n            >\n              <!-- Team Name -->\n              <td class=\"px-4 py-2\">\n                <router-link\n                  :to=\"`/admin/tourneys/${tourneyId}/teams/${team.id}/users`\"\n                  class=\"text-blue-600 dark:text-blue-400 hover:underline\"\n                >\n                  {{ team.teamName || 'N/A' }}\n                </router-link>\n              </td>\n              <!-- Assign to Pool -->\n              <td class=\"px-4 py-2 flex items-center space-x-2\">\n                <v-select\n                  v-model=\"selectedPoolIds[team.id]\"\n                  :options=\"poolOptions\"\n                  placeholder=\"Sélectionner une Pool\"\n                  label=\"name\"\n                  :reduce=\"(pool) => pool.id\"\n                  appendToBody\n                  clearable\n                  class=\"w-full sm:w-64\"\n                  :disabled=\"!hasAvailablePools\"\n                />\n                <ButtonComponent\n                  variant=\"primary\"\n                  size=\"sm\"\n                  fontAwesomeIcon=\"check\"\n                  @click=\"handleAssignPool(team.id)\"\n                  :disabled=\"!selectedPoolIds[team.id] || !hasAvailablePools\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ButtonComponent,\n      TitleComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        unassignedTeams: [],\n        pools: [],\n        selectedPoolIds: {},\n      };\n    },\n    computed: {\n      hasAvailablePools() {\n        return this.poolOptions.length > 0;\n      },\n      poolOptions() {\n        return this.pools\n          .filter((pool) => {\n            const maxTeams = pool.maxTeamPerPool || Infinity;\n            return pool.teams.length < maxTeams;\n          })\n          .map((pool) => ({\n            id: pool.id,\n            name: `${pool.name} (${pool.teams.length}/${\n              pool.maxTeamPerPool || '∞'\n            })`,\n          }));\n      },\n    },\n    async created() {\n      await this.fetchData();\n    },\n    methods: {\n      async fetchData() {\n        try {\n          // Fetch unassigned teams\n          const teamsResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}/teams/unassigned`\n          );\n          this.unassignedTeams = teamsResponse.data;\n\n          // Fetch pools with their teams\n          const poolsResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}/pools-details`\n          );\n          this.pools = poolsResponse.data.pools;\n\n          // Initialize selectedPoolIds\n          this.unassignedTeams.forEach((team) => {\n            if (!(team.id in this.selectedPoolIds)) {\n              this.selectedPoolIds[team.id] = null;\n            }\n          });\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données:', error);\n          toast.error('Erreur lors de la récupération des données.');\n        }\n      },\n      async handleAssignPool(teamId) {\n        const poolId = this.selectedPoolIds[teamId];\n        if (poolId) {\n          try {\n            await apiService.post(\n              `/tourneys/${this.tourneyId}/pools/${poolId}/assign-teams`,\n              { teamIds: [teamId] }\n            );\n            toast.success('Équipe assignée à la pool avec succès.');\n\n            // Update local data instead of re-fetching\n            // Remove the team from unassignedTeams\n            this.unassignedTeams = this.unassignedTeams.filter(\n              (team) => team.id !== teamId\n            );\n            // Clear the selection for this team\n            delete this.selectedPoolIds[teamId];\n\n            // Update the pools data\n            const poolIndex = this.pools.findIndex(\n              (pool) => pool.id === poolId\n            );\n            if (poolIndex !== -1) {\n              // Update the teams array and increment teams.length\n              const pool = this.pools[poolIndex];\n              pool.teams.push({ id: teamId }); // We can add more team data if needed\n              // If pool is now full, remove it from pools\n              const maxTeams = pool.maxTeamPerPool || Infinity;\n              if (pool.teams.length >= maxTeams) {\n                // Remove the pool from pools\n                this.pools.splice(poolIndex, 1);\n                // Remove this pool from selectedPoolIds if it was selected for other teams\n                Object.keys(this.selectedPoolIds).forEach((key) => {\n                  if (this.selectedPoolIds[key] === poolId) {\n                    this.selectedPoolIds[key] = null;\n                  }\n                });\n              } else {\n                // Update the pool in pools\n                this.pools.splice(poolIndex, 1, pool);\n              }\n            }\n          } catch (error) {\n            console.error(\"Erreur lors de l'assignation de la pool:\", error);\n            toast.error(\"Erreur lors de l'assignation de la pool.\");\n          }\n        } else {\n          toast.info('Veuillez sélectionner une pool.');\n        }\n      },\n      navigateToTeam(teamId) {\n        this.$router.push(\n          `/admin/tourneys/${this.tourneyId}/teams/${teamId}/users`\n        );\n      },\n      goBack() {\n        this.$router.push(`/admin/tourneys/${this.tourneyId}/pools`);\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles for the table */\n  table th,\n  table td {\n    padding: 0.5rem;\n    white-space: nowrap;\n  }\n</style>\n","import { render } from \"./TourneyUnassignedTeams.vue?vue&type=template&id=56564bf7&scoped=true\"\nimport script from \"./TourneyUnassignedTeams.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyUnassignedTeams.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyUnassignedTeams.vue?vue&type=style&index=0&id=56564bf7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56564bf7\"]])\n\nexport default __exports__","<!-- views/admin/TourneyPlanningPools.vue -->\n<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <TourneySubMenu :tourneyId=\"tourneyId\" />\n\n    <!-- Liste des pools en haut, sticky sans fond gris -->\n    <div\n      v-if=\"isEditable\"\n      id=\"external-events\"\n      class=\"p-2 rounded-lg shadow-lg sticky top-0 z-50 overflow-x-auto flex items-center justify-between bg-white dark:bg-dark-background\"\n    >\n      <!-- Conteneur pour les pools -->\n      <div class=\"flex space-x-4\">\n        <!-- Pools que l'on peut glisser -->\n        <div\n          v-for=\"pool in pools\"\n          :key=\"pool.id\"\n          :data-id=\"pool.id\"\n          :data-pool-name=\"pool.name\"\n          :data-sport-name=\"pool.sport?.name || ''\"\n          :class=\"[\n            'pool-item',\n            'p-3',\n            'mb-3',\n            'external-event',\n            'rounded-lg',\n            'text-center',\n            'font-semibold',\n            'transform',\n            'transition',\n            'duration-100',\n            'w-28',\n            'shadow-md',\n            'flex',\n            'items-center',\n            'justify-center',\n            isEditable\n              ? 'cursor-pointer external-event hover:scale-110 active:scale-95'\n              : 'opacity-50',\n            'bg-blue-500',\n            'text-white',\n          ]\"\n        >\n          {{ pool.name }}\n          <span v-if=\"pool.sport\"> - {{ pool.sport.name }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Messages d'avertissement -->\n    <div v-if=\"!fields.length\">\n      <ErrorMessageComponent\n        message=\"Aucun terrain trouvé. Veuillez créer des terrains avant d'assigner des pools.\"\n      ></ErrorMessageComponent>\n    </div>\n\n    <!-- Messages d'avertissement de validation -->\n    <div\n      v-if=\"warnings.length && showWarningsModal\"\n      class=\"p-4 rounded mb-4 relative flex flex-col bg-light-warning-bg border border-light-warning-border text-light-warning-text dark:bg-dark-warning-bg dark:border-yellow-600 dark:text-dark-warning-text\"\n    >\n      <!-- Bouton Fermer positionné en haut à droite -->\n      <button\n        @click=\"closeWarningsModal\"\n        class=\"absolute top-2 right-2 flex items-center text-light-warning-text hover:text-light-warning-closeText\"\n      >\n        Fermer\n        <span class=\"ml-1\">&#10006;</span>\n      </button>\n\n      <p class=\"font-semibold mb-2\">Avertissements de Validation :</p>\n      <ul class=\"list-disc list-inside\">\n        <li v-for=\"(warning, index) in warnings\" :key=\"index\">\n          <span :class=\"warningClass(warning.type)\">\n            {{ warning.message }}\n          </span>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"flex flex-wrap gap-4 my-2 px-4\">\n      <!-- Première ligne -->\n      <div class=\"flex flex-wrap w-full items-center gap-2 sm:gap-4\">\n        <!-- Boutons d'action -->\n        <div class=\"flex flex-wrap items-center gap-2 sm:gap-4 flex-grow\">\n          <!-- Bouton pour configurer le planning -->\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"cog\"\n            @click=\"openScheduleConfigModal\"\n            variant=\"secondary\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Config Horaires</span>\n            <span class=\"md:hidden\">Conf.</span>\n          </ButtonComponent>\n\n          <!-- Bouton pour générer le planning -->\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"cog\"\n            @click=\"openGeneratePlanningModal\"\n            variant=\"algo\"\n            :disabled=\"!pools.length\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Générer Planning Pools</span>\n            <span class=\"md:hidden\">Gen.</span>\n          </ButtonComponent>\n\n          <!-- Bouton pour valider le planning -->\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"check\"\n            @click=\"validatePlanning\"\n            variant=\"primary\"\n            :disabled=\"!hasPoolSchedules\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Vérifier Planning Pools</span>\n            <span class=\"md:hidden\">Check</span>\n          </ButtonComponent>\n\n          <!-- Bouton pour effacer le planning -->\n          <ButtonComponent\n            v-if=\"hasPoolSchedules && isEditable\"\n            fontAwesomeIcon=\"trash\"\n            @click=\"confirmClearPlanning\"\n            variant=\"danger\"\n            :disabled=\"!pools.length\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Reset Pools</span>\n            <span class=\"md:hidden\">Del</span>\n          </ButtonComponent>\n        </div>\n\n        <!-- Bouton Télécharger Excel -->\n        <ButtonComponent\n          v-if=\"!isEditable\"\n          @click=\"downloadExcel\"\n          label=\"Télécharger Excel\"\n          variant=\"success\"\n          font-awesome-icon=\"file-excel\"\n        >\n          Download Planning Excel\n        </ButtonComponent>\n\n        <!-- Sélecteur \"Étape\" et bouton Étape -->\n        <div class=\"flex items-center gap-2 order-last\">\n          <StatusSelectorComponent\n            :tourneyId=\"tourneyId\"\n            label=\"Etape\"\n            statusKey=\"planningStatus\"\n            :statusOptions=\"planningStatusOptions\"\n            v-model=\"currentStatus\"\n            :hideWhenNotStarted=\"false\"\n          />\n        </div>\n      </div>\n\n      <!-- Deuxième ligne -->\n      <div class=\"flex flex-wrap w-full items-center gap-2 sm:gap-4\">\n        <!-- Filtre des Pools -->\n        <v-select\n          :options=\"poolOptions\"\n          v-model=\"selectedPoolId\"\n          placeholder=\"All Pools\"\n          :clearable=\"true\"\n          :searchable=\"true\"\n          label=\"name\"\n          :reduce=\"(pool) => pool.id\"\n          class=\"w-36 flex-shrink-0\"\n        />\n\n        <!-- Color Toggle -->\n        <label class=\"flex items-center cursor-pointer flex-shrink-0\">\n          <div class=\"relative\">\n            <input type=\"checkbox\" v-model=\"useUnifiedColors\" class=\"sr-only\" />\n            <div\n              class=\"block w-14 h-8 rounded-full transition-colors duration-300\"\n              :class=\"{\n                'bg-light-menuActive dark:bg-dark-menuActive': useUnifiedColors,\n                'bg-light-pool-infoText dark:bg-dark-pool-infoText':\n                  !useUnifiedColors,\n              }\"\n            ></div>\n            <div\n              class=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-transform duration-300\"\n              :class=\"{ 'translate-x-full': useUnifiedColors }\"\n            ></div>\n          </div>\n          <span\n            class=\"ml-2 hidden md:block text-light-form-text dark:text-dark-form-text\"\n          >\n            {{ useUnifiedColors ? 'Color by Pool' : 'Color by Sport' }}\n          </span>\n        </label>\n\n        <div class=\"flex items-center justify-center mx-auto\">\n          <!-- Navigation par Boutons Radio -->\n          <PlanningViewSelector :tourneyId=\"tourneyId\" />\n        </div>\n\n        <!-- Pagination alignée à droite -->\n        <div class=\"flex items-center gap-2 ml-auto\">\n          <button\n            v-if=\"currentPage > 1\"\n            @click=\"currentPage--\"\n            class=\"text-2xl px-2 py-1 rounded navigation-button\"\n          >\n            &lt;\n          </button>\n          <select\n            v-model=\"currentPage\"\n            class=\"bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text border border-light-form-border-default dark:border-dark-form-border-default rounded-md px-2 py-1\"\n          >\n            <option v-for=\"page in totalPages\" :key=\"page\" :value=\"page\">\n              Page {{ page }} / {{ totalPages }}\n            </option>\n          </select>\n          <button\n            v-if=\"currentPage < totalPages\"\n            @click=\"currentPage++\"\n            class=\"text-2xl px-2 py-1 rounded navigation-button\"\n          >\n            &gt;\n          </button>\n\n          <!-- Bouton Show All Fields -->\n          <button\n            @click=\"\n              showAllTerrains = !showAllTerrains;\n              currentPage = 1;\n            \"\n            class=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          >\n            {{ showAllTerrains ? 'Reduce' : 'All Fields' }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Generate Planning Confirmation Modal for Pools -->\n    <StrategyPlanningGeneratorComponent\n      :isVisible=\"showGeneratePlanningConfirmation\"\n      :tourneyId=\"tourneyId\"\n      :tourneyType=\"tourneyType\"\n      :pools=\"pools\"\n      :fields=\"fields\"\n      :planningTourney=\"scheduleConfig\"\n      :planningType=\"'pool'\"\n      @close=\"closeGeneratePlanningConfirmation\"\n      @planningGenerated=\"handlePlanningGenerated\"\n    />\n\n    <!-- Modal de Confirmation pour la Suppression du Planning -->\n    <DeleteConfirmationModal\n      :isVisible=\"showClearPlanningConfirmation\"\n      :isHardDelete=\"false\"\n      :title=\"'Suppression du Planning'\"\n      :message=\"'Êtes-vous sûr de vouloir supprimer le planning ?'\"\n      @form-cancel=\"closeClearPlanningConfirmation\"\n      @confirm=\"clearPlanning\"\n    />\n\n    <!-- Calendrier avec les ressources (terrains) -->\n    <div v-if=\"tourney.dateTourney && fields.length\">\n      <FullCalendar\n        ref=\"fullCalendar\"\n        :options=\"calendarOptions\"\n        :key=\"tourney.dateTourney\"\n      />\n    </div>\n\n    <!-- Modal pour configurer le planning du tournoi -->\n    <ModalComponent\n      :isVisible=\"showScheduleConfigModal\"\n      :title=\"'Configurer le planning du tournoi'\"\n      @close=\"showScheduleConfigModal = false\"\n      size=\"lg\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"scheduleConfig\"\n          :fields=\"scheduleFormFields\"\n          @form-submit=\"saveScheduleConfig\"\n          @form-cancel=\"showScheduleConfigModal = false\"\n          :columns=\"2\"\n          :customValidation=\"validateForm\"\n          :isEditing=\"this.scheduleConfig ? true : false\"\n        />\n      </template>\n    </ModalComponent>\n\n    <!-- Modal pour éditer un événement -->\n    <ModalComponent :isVisible=\"showEditModal\" @close=\"showEditModal = false\">\n      <template #title>Modifier l'événement</template>\n      <template #content>\n        <FormComponent\n          v-model=\"eventFormData\"\n          :fields=\"eventFormFields\"\n          @form-submit=\"saveEventEdits\"\n          @form-cancel=\"showEditModal = false\"\n        />\n      </template>\n    </ModalComponent>\n  </div>\n</template>\n\n<script>\n  // Importations nécessaires\n  import { mapState, mapActions } from 'vuex';\n  import FullCalendar from '@fullcalendar/vue3';\n  import timeGridPlugin from '@fullcalendar/timegrid';\n  import interactionPlugin, { Draggable } from '@fullcalendar/interaction';\n  import resourceTimeGridPlugin from '@fullcalendar/resource-timegrid';\n  import apiService from '@/services/apiService';\n  import TourneySubMenu from '@/components/TourneySubMenu.vue';\n  import ErrorMessageComponent from '@/components/ErrorMessageComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import { toast } from 'vue3-toastify';\n  import StrategyPlanningGeneratorComponent from '@/components/StrategyPattern/Planning/StrategyPlanningGeneratorComponent.vue';\n  import vSelect from 'vue-select';\n  import 'vue-select/dist/vue-select.css';\n  import PlanningViewSelector from '@/components/PlanningViewSelector.vue';\n\n  export default {\n    components: {\n      FullCalendar,\n      TourneySubMenu,\n      ErrorMessageComponent,\n      StatusSelectorComponent,\n      ButtonComponent,\n      ModalComponent,\n      FormComponent,\n      DeleteConfirmationModal,\n      StrategyPlanningGeneratorComponent,\n      vSelect,\n      PlanningViewSelector,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        tourney: {},\n        fields: [],\n        pools: [],\n        poolSchedules: [],\n        formErrors: {}, // Pour stocker les erreurs du formulaire\n        selectedPoolId: null, // ID de la pool sélectionnée pour les filtres\n        planningStatusOptions: [\n          { value: 'draft', label: 'Edition' },\n          { value: 'completed', label: 'Terminé' },\n        ],\n        warnings: [],\n        externalDraggableInstance: null,\n        showScheduleConfigModal: false,\n        showWarningsModal: false,\n\n        isSmallScreen: false, // Détecte si l'écran est petit\n        currentPage: 1, // Page actuelle pour la pagination\n        terrainsPerPage: 10, // Nombre de terrains visibles par page\n        showAllTerrains: false, // Permet d'afficher tous les terrains\n        breakpoints: {\n          large: 1150,\n          medium: 640,\n        },\n\n        // Configuration du planning avec valeurs par défaut\n        scheduleConfig: {\n          startTime: '07:30:00',\n          endTime: '17:30:00',\n          poolDuration: 105,\n          gameDuration: 15,\n          transitionPoolTime: 15,\n          transitionGameTime: 0,\n          introStart: '07:30:00',\n          introEnd: '08:00:00',\n          lunchStart: '12:00:00',\n          lunchEnd: '13:00:00',\n          outroStart: '17:00:00',\n          outroEnd: '17:30:00',\n        },\n        scheduleFormFields: [\n          {\n            name: 'startTime',\n            type: 'time',\n            label: 'Heure de début',\n            required: true,\n          },\n          {\n            name: 'endTime',\n            type: 'time',\n            label: 'Heure de fin',\n            required: true,\n          },\n          {\n            name: 'introStart',\n            type: 'time',\n            label: \"Début de l'introduction\",\n          },\n          {\n            name: 'introEnd',\n            type: 'time',\n            label: \"Fin de l'introduction\",\n          },\n          {\n            name: 'lunchStart',\n            type: 'time',\n            label: 'Début du déjeuner',\n          },\n          {\n            name: 'lunchEnd',\n            type: 'time',\n            label: 'Fin du déjeuner',\n          },\n          {\n            name: 'outroStart',\n            type: 'time',\n            label: 'Début de la conclusion',\n          },\n          {\n            name: 'outroEnd',\n            type: 'time',\n            label: 'Fin de la conclusion',\n          },\n          {\n            name: 'poolDuration',\n            type: 'number',\n            label: 'Durée d’une pool (en minutes)',\n            required: true,\n          },\n          {\n            name: 'transitionPoolTime',\n            type: 'number',\n            label: 'Transition entre les pools (en minutes)',\n            required: true,\n          },\n          {\n            name: 'gameDuration',\n            type: 'number',\n            label: 'Durée d’un match (en minutes)',\n            required: true,\n          },\n          {\n            name: 'transitionGameTime',\n            type: 'number',\n            label: 'Transition entre les matchs (en minutes)',\n            required: true,\n          },\n        ],\n        showEditModal: false,\n        eventToEdit: null,\n        eventFormData: {},\n        eventFormFields: [\n          {\n            name: 'startTime',\n            type: 'time',\n            label: 'Heure de début',\n            required: true,\n          },\n          {\n            name: 'endTime',\n            type: 'time',\n            label: 'Heure de fin',\n            required: true,\n          },\n        ],\n        showGeneratePlanningConfirmation: false,\n        showClearPlanningConfirmation: false,\n        useUnifiedColors: true,\n        colorMap: {}, // Pour stocker les couleurs unies par Pool ID\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n        tourneyType: (state) => state.tourneyType,\n      }),\n      currentStatus: {\n        get() {\n          return this.statuses.planningStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'planningStatus',\n            value: newStatus,\n          });\n        },\n      },\n      totalPages() {\n        if (this.showAllTerrains) {\n          return 1; // Si tous les terrains sont affichés, une seule \"page\"\n        }\n        return Math.ceil(this.fields.length / this.terrainsPerPage);\n      },\n      paginatedFields() {\n        if (this.showAllTerrains) {\n          return this.fields; // Affiche tous les terrains si l'option est activée\n        }\n        const start = (this.currentPage - 1) * this.terrainsPerPage;\n        const end = start + this.terrainsPerPage;\n        return this.fields.slice(start, end);\n      },\n      /**\n       * Indique si le planning est éditable en fonction du statut\n       */\n      isEditable() {\n        return this.statuses.planningStatus !== 'completed';\n      },\n      /**\n       * Vérifie s'il y a des PoolSchedules\n       */\n      hasPoolSchedules() {\n        return this.poolSchedules.length > 0;\n      },\n      /**\n       * Génère une couleur unique basée sur l'ID de la pool\n       */\n      generateUniqueColor() {\n        return (poolId) => {\n          if (this.colorMap[poolId]) {\n            return this.colorMap[poolId];\n          }\n          // Générer une couleur unique\n          const hue = (poolId * 137.508) % 360;\n          const color = `hsl(${hue}, 70%, 60%)`;\n          this.colorMap[poolId] = color;\n          return color;\n        };\n      },\n      /**\n       * Terrains triés par nom (ordre alphabétique ou numérique)\n       */\n      sortedFields() {\n        return [...this.fields].sort((a, b) => {\n          // Trier par nom numérique si les noms sont des nombres\n          const aNum = parseInt(a.name);\n          const bNum = parseInt(b.name);\n          if (!isNaN(aNum) && !isNaN(bNum)) {\n            return aNum - bNum;\n          }\n          // Sinon, trier alphabétiquement\n          return a.name.localeCompare(b.name);\n        });\n      },\n      poolOptions() {\n        return [{ id: null, name: 'All Pools' }, ...this.pools];\n      },\n      /**\n       * Options du calendrier FullCalendar avec les ressources (terrains)\n       */\n      calendarOptions() {\n        if (!this.tourney.dateTourney) {\n          console.error('La date du tournoi n’est pas disponible');\n          return {};\n        }\n\n        const events = [];\n\n        // Ajouter les poolSchedules en tant qu'événements normaux\n        this.poolSchedules.forEach((schedule) => {\n          // Si une pool est sélectionnée et que l'ID ne correspond pas, on saute cet événement\n          if (this.selectedPoolId && schedule.pool.id !== this.selectedPoolId) {\n            return;\n          }\n          events.push({\n            id: schedule.id.toString(),\n            title:\n              schedule.pool.name +\n              (schedule.sport ? ` - ${schedule.sport.name}` : ''),\n            start: `${schedule.date}T${schedule.startTime}`,\n            end: `${schedule.date}T${schedule.endTime}`,\n            resourceId: schedule.field.id.toString(),\n            backgroundColor: this.useUnifiedColors\n              ? this.generateUniqueColor(schedule.pool.id)\n              : schedule.sport?.color || '#3B82F6',\n            textColor: '#FFFFFF',\n            extendedProps: {\n              sport: schedule.sport,\n              poolId: schedule.pool.id,\n            },\n          });\n        });\n\n        // Ajouter les sportsFields en tant qu'événements de fond\n        this.fields.forEach((field) => {\n          if (field.sportsFields && field.sportsFields.length > 0) {\n            field.sportsFields.forEach((sportsField) => {\n              events.push({\n                id: `bg-${field.id}-${sportsField.sport.id}-${sportsField.startTime}-${sportsField.endTime}`,\n                title: sportsField.sport.name,\n                start: `${this.tourney.dateTourney}T${sportsField.startTime}`,\n                end: `${this.tourney.dateTourney}T${sportsField.endTime}`,\n                resourceId: field.id.toString(),\n                backgroundColor: sportsField.sport.color || '#cccccc',\n                display: 'background',\n              });\n            });\n          }\n        });\n\n        return {\n          plugins: [timeGridPlugin, interactionPlugin, resourceTimeGridPlugin],\n          schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives', // Clé pour usage non-commercial (https://fullcalendar.io/license)\n          initialView: 'resourceTimeGridDay',\n          timeZone: 'local',\n          initialDate: this.tourney.dateTourney,\n          editable: this.isEditable,\n          droppable: true,\n          height: 'auto',\n          slotMinTime: this.adjustedSlotMinTime,\n          slotMaxTime: this.adjustedSlotMaxTime,\n          allDaySlot: false,\n          resources: this.paginatedFields.map((field) => ({\n            id: field.id.toString(),\n            title: field.name,\n          })),\n          customButtons: {\n            prevPage: {\n              text: 'Précédent',\n              click: () => {\n                if (this.currentPage > 1) this.currentPage--;\n              },\n            },\n            nextPage: {\n              text: 'Suivant',\n              click: () => {\n                if (this.currentPage < this.totalPages) this.currentPage++;\n              },\n            },\n          },\n          /*headerToolbar: {\n            left: 'prevPage,nextPage', // Boutons personnalisés\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay',\n          },*/\n          events: events,\n          resourceAreaHeaderContent: 'Terrains',\n          slotLabelFormat: {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false,\n          },\n          headerToolbar: false,\n          eventReceive: this.handleEventReceive,\n          eventDrop: this.handleEventDrop,\n          eventResize: this.handleEventResize,\n          eventContent: this.renderEventContent,\n        };\n      },\n      /**\n       * Ajuste le slotMinTime pour l'affichage du calendrier\n       */\n      adjustedSlotMinTime() {\n        const startTime = this.scheduleConfig.startTime || '07:00:00';\n        return this.subtractOneHour(startTime);\n      },\n      /**\n       * Ajuste le slotMaxTime pour l'affichage du calendrier\n       */\n      adjustedSlotMaxTime() {\n        const endTime = this.scheduleConfig.endTime || '23:00:00';\n        return this.addOneHour(endTime);\n      },\n    },\n    watch: {\n      /**\n       * Observe les changements du toggle des couleurs unies\n       */\n      useUnifiedColors() {\n        if (this.$refs.fullCalendar) {\n          // Rafraîchir le calendrier pour appliquer les nouvelles couleurs\n          this.$refs.fullCalendar.getApi().refetchEvents();\n        }\n      },\n      /**\n       * recharger FullCalendar à chaque changement de page\n       */\n      currentPage() {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.refetchResources(); // Recharge les ressources (terrains visibles)\n        }\n      },\n    },\n    beforeUnmount() {\n      if (this.externalDraggableInstance) {\n        this.externalDraggableInstance.destroy();\n      }\n    },\n    methods: {\n      // Mapper les actions du module `tourney`\n      ...mapActions('tourney', [\n        'fetchTourneyStatuses',\n        'setTournamentName',\n        'clearTournamentName',\n      ]),\n      /**\n       * Récupère les détails du planning du tournoi depuis l'API.\n       * Met à jour les listes de terrains, pools, sports, etc.\n       */\n      async fetchPlanningDetails() {\n        try {\n          // Charger les statuts du tournoi\n          await this.fetchTourneyStatuses(this.tourneyId);\n\n          // Récupérer les détails du planning\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/planning/details`\n          );\n\n          const data = response.data;\n\n          this.fields = data.fields || [];\n          this.pools = data.pools || [];\n          this.sports = data.sports || [];\n          this.scheduleConfig = data.scheduleTourney || this.scheduleConfig;\n\n          // Récupérer les détails du tournoi pour avoir la date\n          const tourneyResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}`\n          );\n          this.tourney = tourneyResponse.data;\n\n          // Vérifier que dateTourney est défini\n          if (!this.tourney.dateTourney) {\n            console.warn(\"La date du tournoi n'est pas définie.\");\n          }\n\n          // Transformer les poolSchedules pour correspondre au format attendu\n          this.poolSchedules = [];\n          data.pools.forEach((pool) => {\n            if (pool.schedules && pool.schedules.length > 0) {\n              pool.schedules.forEach((schedule) => {\n                this.poolSchedules.push({\n                  id: schedule.id,\n                  date: schedule.date,\n                  startTime: schedule.startTime,\n                  endTime: schedule.endTime,\n                  field: schedule.field,\n                  pool: {\n                    id: pool.id,\n                    name: pool.name,\n                  },\n                  sport: schedule.sport,\n                });\n              });\n            }\n          });\n\n          if (!this.fields.length) {\n            console.warn('Aucun terrain trouvé');\n          }\n          if (!this.pools.length) {\n            console.warn('Aucune pool trouvée');\n          }\n          if (!this.poolSchedules.length) {\n            console.warn('Aucun planning de pool trouvé');\n          }\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du planning:',\n            error\n          );\n        }\n      },\n\n      /**\n       * Rafraîchir les événements du calendrier\n       */\n      refreshCalendarEvents() {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.refetchEvents();\n        }\n      },\n\n      /**\n       * Initialise les éléments de pools pour qu'ils soient \"draggables\".\n       * Permet de glisser les pools vers le calendrier pour les assigner à un terrain.\n       */\n      initializeExternalEvents() {\n        if (!this.isEditable) return; // Ne pas initialiser le drag-and-drop si non éditable\n\n        // Détruire l'instance précédente si elle existe\n        if (this.externalDraggableInstance) {\n          this.externalDraggableInstance.destroy();\n          this.externalDraggableInstance = null;\n        }\n\n        const containerEl = document.getElementById('external-events');\n        this.externalDraggableInstance = new Draggable(containerEl, {\n          itemSelector: '.external-event',\n          eventData(eventEl) {\n            return {\n              title: eventEl.dataset.poolName,\n              duration: '01:00', // La durée sera définie dans handleEventReceive\n              create: true,\n              extendedProps: {\n                poolId: eventEl.dataset.id,\n                poolName: eventEl.dataset.poolName,\n                sportName: eventEl.dataset.sportName,\n              },\n            };\n          },\n        });\n      },\n\n      /**\n       * Contenu personnalisé pour chaque événement dans FullCalendar,\n       * avec des icônes d'édition et de suppression.\n       * @param {Object} arg - Détails de l'événement\n       * @returns {Object} Contenu DOM pour l'événement\n       */\n      renderEventContent(arg) {\n        const container = document.createElement('div');\n        container.classList.add('flex', 'flex-col', 'space-y-1');\n\n        const headerContainer = document.createElement('div');\n        headerContainer.classList.add(\n          'flex',\n          'justify-between',\n          'items-center'\n        );\n\n        const title = document.createElement('span');\n        title.innerText = arg.event.title;\n        title.classList.add('font-semibold', 'text-white');\n\n        headerContainer.appendChild(title);\n\n        // Vérifier si l'événement est un événement de fond\n        if (arg.event.display === 'background') {\n          // Ne pas afficher de contenu pour les événements de fond\n          container.appendChild(headerContainer);\n          return { domNodes: [container] };\n        }\n\n        if (this.isEditable) {\n          const editIcon = document.createElement('span');\n          editIcon.innerHTML = '&#9998;'; // Icône d'édition\n          editIcon.classList.add('edit-icon');\n          editIcon.style.color = 'yellow';\n          editIcon.style.cursor = 'pointer';\n          editIcon.style.padding = '0 5px';\n\n          editIcon.addEventListener('click', (e) => {\n            e.stopPropagation();\n            this.openEditModal(arg.event);\n          });\n\n          const deleteIcon = document.createElement('span');\n          deleteIcon.innerHTML = '&#10060;';\n          deleteIcon.classList.add('delete-icon');\n          deleteIcon.style.color = 'white';\n          deleteIcon.style.cursor = 'pointer';\n          deleteIcon.style.padding = '0 5px';\n\n          deleteIcon.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            this.deleteEvent(arg.event);\n          });\n\n          headerContainer.appendChild(editIcon);\n\n          let pressTimer;\n          deleteIcon.addEventListener('touchstart', (e) => {\n            e.stopPropagation();\n            pressTimer = setTimeout(() => {\n              this.deleteEvent(arg.event);\n            }, 600);\n          });\n          deleteIcon.addEventListener('touchend', () => {\n            clearTimeout(pressTimer);\n          });\n          headerContainer.appendChild(deleteIcon);\n        }\n\n        const startTime = this.formatDisplayTime(arg.event.start);\n        const endTime = this.formatDisplayTime(arg.event.end);\n        const timeRange = document.createElement('div');\n        timeRange.innerText = `${startTime} - ${endTime}`;\n        timeRange.classList.add('text-sm', 'text-white');\n\n        container.appendChild(headerContainer);\n        container.appendChild(timeRange);\n\n        return { domNodes: [container] };\n      },\n\n      /**\n       * Télécharge le planning du tournoi au format Excel.\n       * Utilise l'API pour récupérer le fichier Excel et le télécharger.\n       */\n      async downloadExcel() {\n        let toastId;\n        try {\n          // Afficher un toast indiquant que le téléchargement démarre\n          toastId = toast.info('Téléchargement du fichier en cours...', {\n            autoClose: false, // Empêche la fermeture automatique\n          });\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/export-data/excel`,\n            {\n              responseType: 'blob', // Demander un blob pour le téléchargement de fichiers\n            }\n          );\n\n          // Créer une URL temporaire pour le fichier\n          const blob = response.data; // Axios renvoie le blob dans `data`\n          const url = window.URL.createObjectURL(blob);\n\n          // Créer un lien pour déclencher le téléchargement\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `tournament_${this.tourneyId}.xlsx`; // Nom du fichier\n          document.body.appendChild(a);\n          a.click();\n\n          // Nettoyer l'URL temporaire après le téléchargement\n          window.URL.revokeObjectURL(url);\n          // Mettre à jour le toast pour indiquer que le téléchargement est terminé\n          toast.update(toastId, {\n            render: 'Téléchargement terminé avec succès !',\n            type: toast.TYPE.SUCCESS,\n            autoClose: 2000, // Fermeture automatique après 5 secondes\n          });\n        } catch (error) {\n          toast.update(toastId, {\n            render:\n              error.message ||\n              \"Une erreur s'est produite lors du téléchargement.\",\n            type: toast.TYPE.ERROR,\n            autoClose: 2000, // Fermeture automatique après 5 secondes\n          });\n          console.error('Erreur lors du téléchargement Excel :', error);\n        }\n      },\n      /**\n       * Retourne la classe CSS appropriée en fonction du type d'avertissement.\n       * @param {string} type - Le type d'avertissement ('grave', 'moyenne', 'faible').\n       * @returns {string} La ou les classes CSS à appliquer.\n       */\n      warningClass(type) {\n        switch (type) {\n          case 'grave':\n            return 'text-red-600 font-bold';\n          case 'moyenne':\n            return 'text-orange-600 font-semibold';\n          case 'faible':\n            return 'text-yellow-600';\n          default:\n            return '';\n        }\n      },\n\n      /**\n       * Ouvre le modal pour configurer le planning du tournoi.\n       */\n      isSchedule() {\n        if (this.scheduleConfig) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n\n      /**\n       * Gestion de l'ajout d'un événement lorsqu'il est glissé depuis les pools externes.\n       * Crée ou met à jour l'événement selon qu'il existe déjà.\n       * @param {Object} info - Informations sur l'événement reçu\n       */\n      async handleEventReceive(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n        const event = info.event;\n        try {\n          const poolId = event.extendedProps.poolId;\n          const newFieldId = event.getResources()[0]?.id;\n\n          if (!newFieldId) {\n            console.error(\"Problème d'ID : Terrain mal identifié.\");\n            info.revert();\n            return;\n          }\n\n          // Définir la durée de l'événement selon poolDuration\n          const durationMinutes =\n            parseInt(this.scheduleConfig.poolDuration) || 60;\n          const startDate = new Date(event.start);\n          const endDate = new Date(\n            startDate.getTime() + durationMinutes * 60000\n          );\n          event.setEnd(endDate);\n\n          const data = {\n            fieldId: newFieldId,\n            startTime: this.formatTime(event.start),\n            endTime: this.formatTime(event.end),\n            date: this.tourney.dateTourney,\n          };\n\n          // Creation d'un poolSchedule\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/pools/schedule/${poolId}`,\n            data\n          );\n\n          // Mettre à jour l'événement avec les nouvelles informations\n          event.setProp('id', response.data.poolSchedule.id);\n          event.setExtendedProp('sport', response.data.poolSchedule.sport);\n\n          // Mettre à jour le titre de l'événement\n          const sportName = response.data.poolSchedule.sport\n            ? ` - ${response.data.poolSchedule.sport.name}`\n            : '';\n          event.setProp('title', `${event.extendedProps.poolName}${sportName}`);\n\n          // Mettre à jour la couleur de l'événement\n          const backgroundColor = this.useUnifiedColors\n            ? this.generateUniqueColor(poolId)\n            : response.data.poolSchedule.sport?.color || '#3B82F6';\n          event.setProp('backgroundColor', backgroundColor);\n\n          // Ajouter le nouveau poolSchedule à this.poolSchedules\n          this.poolSchedules.push({\n            id: response.data.poolSchedule.id,\n            date: data.date,\n            startTime: data.startTime,\n            endTime: data.endTime,\n            field: { id: data.fieldId },\n            pool: { id: Number(poolId), name: event.extendedProps.poolName },\n            sport: response.data.poolSchedule.sport,\n          });\n          toast.success('Événement ajouté avec succès !');\n        } catch (error) {\n          toast.error(\n            error.message || \"Une erreur s'est produite lors de l'ajout.\"\n          );\n          console.error(\"Erreur lors du traitement de l'événement :\", error);\n          info.revert();\n        }\n      },\n\n      /**\n       * Gestion du déplacement d'un événement dans le calendrier.\n       * @param {Object} info - Informations sur l'événement déplacé\n       */\n      async handleEventDrop(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n        const event = info.event;\n        try {\n          const eventId = event.id;\n          const newFieldId = event.getResources()[0]?.id;\n\n          if (!eventId || !newFieldId) {\n            console.error(\n              \"Problème d'ID : Terrain ou événement mal identifié.\"\n            );\n            info.revert();\n            return;\n          }\n\n          const data = {\n            fieldId: newFieldId,\n            startTime: this.formatTime(event.start),\n            endTime: this.formatTime(event.end),\n            date: this.tourney.dateTourney,\n          };\n\n          const response = await apiService.put(\n            `/tourneys/${this.tourneyId}/pools/schedule/${eventId}`,\n            data\n          );\n\n          // Mettre à jour localement le poolSchedule\n          const index = this.poolSchedules.findIndex(\n            (ps) => ps.id.toString() === eventId.toString()\n          );\n          if (index !== -1) {\n            this.poolSchedules[index].field.id = data.fieldId;\n            this.poolSchedules[index].startTime = data.startTime;\n            this.poolSchedules[index].endTime = data.endTime;\n            this.poolSchedules[index].sport = response.data.poolSchedule.sport;\n          }\n\n          // Mettre à jour les propriétés de l'événement\n          event.setExtendedProp('sport', response.data.poolSchedule.sport);\n          // Mettre à jour le titre de l'événement\n          const sportName = response.data.poolSchedule.sport\n            ? ` - ${response.data.poolSchedule.sport.name}`\n            : '';\n          event.setProp('title', `${event.title.split(' - ')[0]}${sportName}`);\n\n          // Mettre à jour la couleur de l'événement\n          const backgroundColor = this.useUnifiedColors\n            ? this.generateUniqueColor(event.extendedProps.poolId)\n            : response.data.poolSchedule.sport?.color || '#3B82F6';\n          event.setProp('backgroundColor', backgroundColor);\n        } catch (error) {\n          console.error(\"Erreur lors du déplacement de l'événement :\", error);\n          info.revert();\n        }\n      },\n\n      /**\n       * Gestion du redimensionnement d'un événement (changement de durée).\n       * @param {Object} info - Informations sur l'événement redimensionné\n       */\n      async handleEventResize(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n        const event = info.event;\n        try {\n          const eventId = event.id;\n          const fieldId = event.getResources()[0]?.id;\n\n          if (!eventId || !fieldId) {\n            console.error(\n              \"Problème d'ID : Terrain ou événement mal identifié.\"\n            );\n            info.revert();\n            return;\n          }\n\n          const data = {\n            fieldId: fieldId,\n            startTime: this.formatTime(event.start),\n            endTime: this.formatTime(event.end),\n            date: this.tourney.dateTourney,\n          };\n\n          const response = await apiService.put(\n            `/tourneys/${this.tourneyId}/pools/schedule/${eventId}`,\n            data\n          );\n\n          // Mettre à jour localement le poolSchedule\n          const index = this.poolSchedules.findIndex(\n            (ps) => ps.id.toString() === eventId.toString()\n          );\n          if (index !== -1) {\n            this.poolSchedules[index].startTime = data.startTime;\n            this.poolSchedules[index].endTime = data.endTime;\n            this.poolSchedules[index].field.id = fieldId;\n            this.poolSchedules[index].sport = response.data.poolSchedule.sport;\n          }\n\n          // Mettre à jour les propriétés de l'événement\n          event.setExtendedProp('sport', response.data.poolSchedule.sport);\n\n          // Mettre à jour le titre de l'événement\n          const sportName = response.data.poolSchedule.sport\n            ? ` - ${response.data.poolSchedule.sport.name}`\n            : '';\n          event.setProp('title', `${event.title.split(' - ')[0]}${sportName}`);\n\n          // Mettre à jour la couleur de l'événement\n          const backgroundColor = this.useUnifiedColors\n            ? this.generateUniqueColor(event.extendedProps.poolId)\n            : response.data.poolSchedule.sport?.color || '#3B82F6';\n          event.setProp('backgroundColor', backgroundColor);\n        } catch (error) {\n          console.error(\n            \"Erreur lors du redimensionnement de l'événement :\",\n            error\n          );\n          info.revert();\n        }\n      },\n\n      /**\n       * Enregistre les modifications apportées à un événement via le modal d'édition.\n       */\n      async saveEventEdits() {\n        try {\n          const data = {\n            startTime: this.eventFormData.startTime,\n            endTime: this.eventFormData.endTime,\n            date: this.tourney.dateTourney,\n            fieldId: this.eventToEdit.getResources()[0]?.id,\n          };\n          const response = await apiService.put(\n            `/tourneys/${this.tourneyId}/pools/schedule/${this.eventToEdit.id}`,\n            data\n          );\n\n          // Mettre à jour localement le poolSchedule\n          const index = this.poolSchedules.findIndex(\n            (ps) => ps.id.toString() === this.eventToEdit.id.toString()\n          );\n          if (index !== -1) {\n            this.poolSchedules[index].startTime = data.startTime;\n            this.poolSchedules[index].endTime = data.endTime;\n            this.poolSchedules[index].sport = response.data.poolSchedule.sport;\n          }\n\n          // Mettre à jour les propriétés de l'événement\n          const event = this.eventToEdit;\n          event.setExtendedProp('sport', response.data.poolSchedule.sport);\n\n          // Mettre à jour le titre de l'événement\n          const sportName = response.data.poolSchedule.sport\n            ? ` - ${response.data.poolSchedule.sport.name}`\n            : '';\n          event.setProp('title', `${event.title.split(' - ')[0]}${sportName}`);\n\n          // Mettre à jour la couleur de l'événement\n          const backgroundColor = this.useUnifiedColors\n            ? this.generateUniqueColor(event.extendedProps.poolId)\n            : response.data.poolSchedule.sport?.color || '#3B82F6';\n          event.setProp('backgroundColor', backgroundColor);\n\n          this.showEditModal = false;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la sauvegarde des modifications :',\n            error\n          );\n        }\n      },\n\n      /**\n       * Supprime un événement du calendrier et de la base de données.\n       * @param {Object} event - Événement à supprimer\n       */\n      async deleteEvent(event) {\n        if (!this.isEditable) return;\n        try {\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/pools/schedule/${event.id}`\n          );\n          event.remove();\n          // Supprimer le poolSchedule de la liste locale\n          this.poolSchedules = this.poolSchedules.filter(\n            (ps) => ps.id.toString() !== event.id.toString()\n          );\n          toast.success('Événement supprimé avec succès !');\n        } catch (error) {\n          toast.error('Erreur lors de la suppression de l’événement.');\n          console.error('Erreur lors de la suppression du pool :', error);\n        }\n      },\n\n      /**\n       * Formatte l'affichage des heures d'un événement.\n       * @param {Date} date - La date à formater\n       * @returns {string} Heure formatée (HH:MM)\n       */\n      formatDisplayTime(date) {\n        const d = new Date(date);\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        return `${hours}:${minutes}`;\n      },\n\n      /**\n       * Formatte une date en format HH:MM:SS.\n       * @param {Date} date - La date à formater\n       * @returns {string} Heure formatée (HH:MM:SS)\n       */\n      formatTime(date) {\n        const d = new Date(date);\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        const seconds = d.getSeconds().toString().padStart(2, '0');\n        return `${hours}:${minutes}:${seconds}`;\n      },\n\n      /**\n       * Ouvre la fenêtre modale pour configurer le planning du tournoi.\n       */\n      openScheduleConfigModal() {\n        this.showScheduleConfigModal = true;\n        // Charger les données existantes si disponibles\n        this.loadScheduleConfig();\n      },\n\n      /**\n       * Ouvre le modal d'édition d'un événement\n       * @param {Object} event - Événement à éditer\n       */\n      openEditModal(event) {\n        this.eventToEdit = event;\n        this.eventFormData = {\n          startTime: this.formatTime(event.start),\n          endTime: this.formatTime(event.end),\n        };\n        this.showEditModal = true;\n      },\n\n      /**\n       * Charge la configuration existante du planning du tournoi.\n       */\n      async loadScheduleConfig() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/schedule`\n          );\n          if (response.data) {\n            this.scheduleConfig = response.data;\n          }\n        } catch (error) {\n          if (error.response && error.response.status === 404) {\n            console.warn(\n              'Aucune configuration existante du planning trouvée. Utilisation des valeurs par défaut.'\n            );\n            // La configuration n'existe pas encore, on conserve les valeurs par défaut\n          } else {\n            console.error(\n              'Erreur lors de la récupération de la configuration du planning :',\n              error\n            );\n          }\n        }\n      },\n\n      /**\n       * Ouvre le modal de confirmation pour générer le planning\n       */\n      openGeneratePlanningModal() {\n        this.showGeneratePlanningConfirmation = true;\n      },\n\n      /**\n       * Ferme le modal de confirmation pour générer le planning\n       */\n      closeGeneratePlanningConfirmation() {\n        this.showGeneratePlanningConfirmation = false;\n      },\n\n      /**\n       * Ouvre le modal de confirmation pour supprimer le planning\n       */\n      confirmClearPlanning() {\n        this.showClearPlanningConfirmation = true;\n      },\n\n      /**\n       * Ferme le modal de confirmation pour supprimer le planning\n       */\n      closeClearPlanningConfirmation() {\n        this.showClearPlanningConfirmation = false;\n      },\n\n      /**\n       * Génère le planning après confirmation\n       */\n      async handlePlanningGenerated() {\n        await this.fetchPlanningDetails();\n        this.closeGeneratePlanningConfirmation();\n        this.validatePlanning();\n      },\n\n      /**\n       * Supprime le planning après confirmation\n       */\n      async clearPlanning() {\n        try {\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/planning/pools/reset`\n          );\n          toast.success('Planning supprimé avec succès !');\n          this.showClearPlanningConfirmation = false;\n          await this.fetchPlanningDetails();\n        } catch (error) {\n          console.error('Erreur lors de la suppression du planning :', error);\n          toast.error('Erreur lors de la suppression du planning.');\n        }\n      },\n\n      /**\n       * Appelle l'API pour valider le planning actuel.\n       */\n      async validatePlanning() {\n        try {\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/planning/pools/validate`\n          );\n\n          const validationResults = response.data.validation;\n\n          if (validationResults.hasErrors) {\n            // Traiter les différentes erreurs en fonction des niveaux\n            const newWarnings = [];\n            if (validationResults.errors.high.length > 0) {\n              validationResults.errors.high.forEach((err) => {\n                newWarnings.push({ type: 'grave', message: err });\n              });\n            }\n            if (validationResults.errors.mid.length > 0) {\n              validationResults.errors.mid.forEach((err) => {\n                newWarnings.push({ type: 'moyenne', message: err });\n              });\n            }\n            if (validationResults.errors.low.length > 0) {\n              validationResults.errors.low.forEach((err) => {\n                newWarnings.push({ type: 'faible', message: err });\n              });\n            }\n            this.warnings = newWarnings;\n            this.showWarningsModal = true;\n          } else {\n            toast.success('Le planning est valide sans erreurs.');\n            this.warnings = [];\n            this.showWarningsModal = false;\n          }\n        } catch (error) {\n          console.error('Erreur lors de la validation du planning :', error);\n          toast.error('Erreur lors de la validation du planning.');\n        }\n      },\n\n      /**\n       * Enregistre la configuration du planning du tournoi.\n       */\n      async saveScheduleConfig() {\n        try {\n          let successMessage = '';\n          if (this.scheduleConfig.id) {\n            // Si un planning existe déjà, on le met à jour avec une requête PUT\n            await apiService.put(\n              `/tourneys/${this.tourneyId}/schedule/${this.scheduleConfig.id}`,\n              this.scheduleConfig\n            );\n            successMessage =\n              'Configuration du planning mise à jour avec succès !';\n          } else {\n            // Sinon, on crée un nouveau planning avec une requête POST\n            await apiService.post(\n              `/tourneys/${this.tourneyId}/schedule`,\n              this.scheduleConfig\n            );\n            successMessage =\n              'Configuration du planning enregistrée avec succès !';\n          }\n          this.showScheduleConfigModal = false;\n          // Mettre à jour les détails du planning\n          await this.fetchPlanningDetails();\n          this.initializeExternalEvents(); // Ré-initialiser les événements externes si nécessaire\n          toast.success(successMessage);\n        } catch (error) {\n          console.error(\n            'Erreur lors de la sauvegarde de la configuration du planning :',\n            error\n          );\n          toast.error(\n            'Erreur lors de la sauvegarde de la configuration du planning.'\n          );\n        }\n      },\n\n      /**\n       * Ferme la modal des avertissements de validation\n       */\n      closeWarningsModal() {\n        this.showWarningsModal = false;\n        this.warnings = [];\n      },\n\n      /**\n       * Soustrait une heure à une heure donnée pour l'affichage du calendrier\n       * @param {string} timeStr - Heure au format HH:MM:SS\n       * @returns {string} Heure ajustée au format HH:MM:SS\n       */\n      subtractOneHour(timeStr) {\n        let [hours] = timeStr.split(':').map(Number);\n\n        if (hours < 0) hours = 0;\n        // Arrondir à l'heure inférieure\n        return `${hours.toString().padStart(2, '0')}:00:00`;\n      },\n\n      /**\n       * Ajoute une heure à une heure donnée pour l'affichage du calendrier\n       * @param {string} timeStr - Heure au format HH:MM:SS\n       * @returns {string} Heure ajustée au format HH:MM:SS\n       */\n      addOneHour(timeStr) {\n        let [hours, minutes, seconds] = timeStr.split(':').map(Number);\n        // Si les minutes ou secondes sont non nulles, on ajoute une heure supplémentaire\n        if (minutes > 0 || seconds > 0) {\n          hours += 1;\n        }\n        if (hours >= 24) hours = 23; // Pour éviter de dépasser 23h\n        // Arrondir à l'heure supérieure\n        minutes = 0;\n        seconds = 0;\n        return `${hours.toString().padStart(2, '0')}:00:00`;\n      },\n\n      /**\n       * Vérifie et ajoute des avertissements si nécessaire\n       */\n      checkWarnings() {\n        // Réinitialiser les warnings\n        this.warnings = [];\n\n        // Vérifier si le nombre de pools est supérieur au nombre de terrains\n        if (this.pools.length > this.fields.length) {\n          this.warnings.push({\n            type: 'faible',\n            message:\n              \"Le nombre de pools est supérieur au nombre de terrains disponibles. Cela peut entraîner des temps d'attente pour certaines pools.\",\n          });\n          this.showWarningsModal = true;\n        } else {\n          this.showWarningsModal = false;\n        }\n      },\n\n      /**\n       * Valide le formulaire de configuration du planning.\n       * @returns {Object} Erreurs de validation\n       */\n      validateForm() {\n        const errors = {};\n\n        const schedule = this.scheduleConfig;\n        const {\n          startTime,\n          endTime,\n          introStart,\n          introEnd,\n          lunchStart,\n          lunchEnd,\n          outroStart,\n          outroEnd,\n        } = schedule;\n\n        // Fonction pour convertir une heure au format \"HH:MM:SS\" en nombre de secondes\n        const timeStringToNumber = (timeStr) => {\n          const [hours, minutes, seconds] = timeStr.split(':').map(Number);\n          return hours * 3600 + minutes * 60 + (seconds || 0);\n        };\n\n        // Convertir les heures en nombres pour la comparaison\n        const startTimeNum = timeStringToNumber(startTime);\n        const endTimeNum = timeStringToNumber(endTime);\n\n        // Validation globale des horaires de début et de fin\n        if (startTimeNum >= endTimeNum) {\n          errors.startTime =\n            \"L'heure de début doit être inférieure à l'heure de fin.\";\n          errors.endTime =\n            \"L'heure de fin doit être supérieure à l'heure de début.\";\n        }\n\n        // Tableau des périodes optionnelles pour validation\n        const timePairs = [\n          {\n            start: introStart,\n            end: introEnd,\n            label: 'Introduction',\n            startField: 'introStart',\n            endField: 'introEnd',\n          },\n          {\n            start: lunchStart,\n            end: lunchEnd,\n            label: 'Déjeuner',\n            startField: 'lunchStart',\n            endField: 'lunchEnd',\n          },\n          {\n            start: outroStart,\n            end: outroEnd,\n            label: 'Conclusion',\n            startField: 'outroStart',\n            endField: 'outroEnd',\n          },\n        ];\n\n        // Validation des plages horaires par rapport à la période globale\n        for (const pair of timePairs) {\n          if (pair.start && pair.end) {\n            const pairStartNum = timeStringToNumber(pair.start);\n            const pairEndNum = timeStringToNumber(pair.end);\n\n            if (pairStartNum >= pairEndNum) {\n              errors[\n                pair.startField\n              ] = `L'heure de début doit être inférieure à l'heure de fin pour la section ${pair.label}.`;\n              errors[\n                pair.endField\n              ] = `L'heure de fin doit être supérieure à l'heure de début pour la section ${pair.label}.`;\n            }\n            if (pairStartNum < startTimeNum || pairEndNum > endTimeNum) {\n              errors[\n                pair.startField\n              ] = `Les heures de ${pair.label} doivent être comprises entre le début (${startTime}) et la fin (${endTime}) du planning global.`;\n              errors[\n                pair.endField\n              ] = `Les heures de ${pair.label} doivent être comprises entre le début (${startTime}) et la fin (${endTime}) du planning global.`;\n            }\n          } else if ((pair.start && !pair.end) || (!pair.start && pair.end)) {\n            errors[\n              pair.startField\n            ] = `Veuillez fournir à la fois l'heure de début et de fin pour la section ${pair.label}.`;\n            errors[\n              pair.endField\n            ] = `Veuillez fournir à la fois l'heure de début et de fin pour la section ${pair.label}.`;\n          }\n        }\n\n        // Retourner l'objet errors\n        return errors;\n      },\n\n      /**\n       * Calcul le nombre de terrains à afficher par page en fonction de la largeur de l'écran.\n       */\n      adjustTerrainsPerPage() {\n        const screenWidth = window.innerWidth;\n\n        if (screenWidth >= 1200) {\n          this.terrainsPerPage = 10; // 1200px et plus : 10 terrains\n        } else if (screenWidth >= 1000) {\n          this.terrainsPerPage = 8; // 1000px - 1200px : 8 terrains\n        } else if (screenWidth >= 800) {\n          this.terrainsPerPage = 7; // 800px - 1000px : 7 terrains\n        } else if (screenWidth >= 600) {\n          this.terrainsPerPage = 5; // 600px - 800px : 5 terrains\n        } else {\n          this.terrainsPerPage = 3; // Moins de 600px : 3 terrains\n        }\n      },\n    },\n\n    /**\n     * Méthode appelée lorsque le composant est monté.\n     */\n    async mounted() {\n      this.adjustTerrainsPerPage();\n      window.addEventListener('resize', this.adjustTerrainsPerPage);\n      await this.fetchPlanningDetails(); // Récupérer les détails du planning\n      this.initializeExternalEvents(); // Rendre les éléments de pools externes \"draggables\"\n      this.checkWarnings();\n    },\n  };\n</script>\n\n<style scoped>\n  .pool-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .navigation-button {\n    transition: transform 0.2s;\n  }\n\n  .navigation-button:hover {\n    transform: scale(1.2);\n  }\n\n  select {\n    background-color: #f9f9f9;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 0.5rem;\n  }\n  @import '@/assets/fullcalendar.css';\n</style>\n","<!-- StrategyPlanningGeneratorComponent.vue -->\n<template>\n  <ModalComponent\n    :isVisible=\"isVisible\"\n    title=\"Générer le Planning\"\n    @close=\"handleClose\"\n  >\n    <template #content>\n      <div class=\"mb-4\">\n        <label class=\"flex items-center space-x-2\">\n          <input\n            type=\"checkbox\"\n            v-model=\"localRandomMode\"\n            class=\"form-checkbox h-5 w-5 text-blue-600\"\n          />\n          <span class=\"text-light-form-text dark:text-dark-form-text\">\n            Génération aléatoire (erreurs plus probables)\n          </span>\n        </label>\n      </div>\n      <p>\n        Mode sélectionné :\n        <strong>{{ localRandomMode ? 'Aléatoire' : 'Standard' }}</strong>\n      </p>\n      <component\n        :is=\"currentStrategyComponent\"\n        ref=\"strategyComponent\"\n        :tourneyId=\"tourneyId\"\n        :pools=\"pools\"\n        :fields=\"fields\"\n        :planningTourney=\"planningTourney\"\n        :randomMode=\"localRandomMode\"\n      ></component>\n    </template>\n    <template #footer>\n      <ButtonComponent variant=\"secondary\" @click=\"handleClose\">\n        Annuler\n      </ButtonComponent>\n      <ButtonComponent\n        :disabled=\"isGenerating\"\n        variant=\"primary\"\n        @click=\"generatePlanning\"\n      >\n        {{ isGenerating ? 'Génération...' : 'Générer' }}\n      </ButtonComponent>\n    </template>\n  </ModalComponent>\n</template>\n\n<script>\n  import CustomRoundRobinPoolPlanningStrategy from './strategies/CustomRoundRobinPoolPlanningStrategy.vue';\n  import CustomRoundRobinGamePlanningStrategy from './strategies/CustomRoundRobinGamePlanningStrategy.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n\n  export default {\n    components: {\n      CustomRoundRobinPoolPlanningStrategy,\n      CustomRoundRobinGamePlanningStrategy,\n      ModalComponent,\n      ButtonComponent,\n    },\n    props: {\n      tourneyId: {\n        type: String,\n        required: true,\n      },\n      tourneyType: {\n        type: String,\n        required: true,\n      },\n      pools: {\n        type: Array,\n        required: false,\n      },\n      fields: {\n        type: Array,\n        required: false,\n      },\n      planningTourney: {\n        type: Object,\n        required: false,\n      },\n      isVisible: {\n        type: Boolean,\n        default: true,\n      },\n      randomMode: {\n        type: Boolean,\n        default: false,\n      },\n      planningType: {\n        type: String,\n        required: true, // 'pool' ou 'game'\n      },\n    },\n    data() {\n      return {\n        localRandomMode: this.randomMode,\n        isGenerating: false, // Nouvel état pour gérer le clic\n      };\n    },\n    computed: {\n      currentStrategyComponent() {\n        if (this.planningType === 'pool') {\n          return 'CustomRoundRobinPoolPlanningStrategy';\n        } else if (this.planningType === 'game') {\n          return 'CustomRoundRobinGamePlanningStrategy';\n        } else {\n          // Valeur par défaut ou gestion d'erreur\n          return 'CustomRoundRobinPoolPlanningStrategy';\n        }\n      },\n    },\n    methods: {\n      handleClose() {\n        this.$emit('close');\n      },\n      async generatePlanning() {\n        if (this.isGenerating) return; // Empêche les clics multiples\n        this.isGenerating = true;\n\n        try {\n          // Fermer la modale immédiatement\n          this.handleClose();\n\n          // Appeler la méthode de la stratégie sélectionnée\n          const result = await this.$refs.strategyComponent.generatePlanning();\n\n          if (result) {\n            this.$emit('planningGenerated');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la génération du planning :', error);\n        } finally {\n          this.isGenerating = false; // Réinitialiser l'état\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped></style>\n","<!-- CustomRoundRobinPoolPlanningStrategy.vue -->\n<template>\n  <div>\n    <p class=\"mb-4\">\n      <span class=\"text-red-500 dark:text-red-600 font-bold\">\n        <strong>Attention :</strong> Le planning des pools existantes sera\n        supprimé et remplacé.\n      </span>\n      <br /><br />\n      L'algorithme 'Custom Round Robin' va répartir équitablement les équipes\n      dans les pools selon les réglages définis dans le planning. Assurez-vous\n      d'avoir suffisamment d'équipes et de créneaux horaires.\n    </p>\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    props: {\n      tourneyId: {\n        type: String,\n        required: true,\n      },\n      pools: {\n        type: Array,\n        required: false,\n      },\n      fields: {\n        type: Array,\n        required: false,\n      },\n      planningTourney: {\n        type: Object,\n        required: false,\n      },\n      randomMode: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    methods: {\n      async generatePlanning() {\n        try {\n          await apiService.post(\n            `/tourneys/${this.tourneyId}/planning/pools/generate`,\n            {},\n            {\n              params: {\n                randomMode: this.randomMode,\n              },\n            }\n          );\n          toast.success('Planning des pools généré avec succès !', {\n            autoClose: 3000,\n          });\n\n          return true;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la génération du planning des pools :',\n            error\n          );\n          const errorMessage =\n            error.response?.data?.message ||\n            'Erreur lors de la génération du planning des pools.';\n          toast.error(errorMessage);\n\n          return false;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./CustomRoundRobinPoolPlanningStrategy.vue?vue&type=template&id=2dfcedbc\"\nimport script from \"./CustomRoundRobinPoolPlanningStrategy.vue?vue&type=script&lang=js\"\nexport * from \"./CustomRoundRobinPoolPlanningStrategy.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- CustomRoundRobinGamePlanningStrategy.vue -->\n<template>\n  <div>\n    <p class=\"mb-4\">\n      <span class=\"text-red-500 dark:text-red-600 font-bold\">\n        <strong>Attention :</strong> Le planning des matchs existants sera\n        supprimé et remplacé.\n      </span>\n      <br /><br />\n      L'algorithme 'Custom Round Robin' va réorganiser les matchs au sein des\n      pools existants selon les nouvelles contraintes définies dans le planning.\n    </p>\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    props: {\n      tourneyId: {\n        type: String,\n        required: true,\n      },\n      pools: {\n        type: Array,\n        required: false,\n      },\n      fields: {\n        type: Array,\n        required: false,\n      },\n      planningTourney: {\n        type: Object,\n        required: false,\n      },\n      randomMode: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    methods: {\n      async generatePlanning() {\n        try {\n          await apiService.post(\n            `/tourneys/${this.tourneyId}/planning/games/generate`,\n            {},\n            {\n              params: {\n                randomMode: this.randomMode,\n              },\n            }\n          );\n          toast.success('Planning des matchs généré avec succès !', {\n            autoClose: 3000,\n          });\n\n          return true;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la génération du planning des matchs :',\n            error\n          );\n          const errorMessage =\n            error.response?.data?.message ||\n            'Erreur lors de la génération du planning des matchs.';\n          toast.error(errorMessage);\n\n          return false;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped></style>\n","import { render } from \"./CustomRoundRobinGamePlanningStrategy.vue?vue&type=template&id=169d4d51\"\nimport script from \"./CustomRoundRobinGamePlanningStrategy.vue?vue&type=script&lang=js\"\nexport * from \"./CustomRoundRobinGamePlanningStrategy.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./StrategyPlanningGeneratorComponent.vue?vue&type=template&id=4bd23393\"\nimport script from \"./StrategyPlanningGeneratorComponent.vue?vue&type=script&lang=js\"\nexport * from \"./StrategyPlanningGeneratorComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div\n    class=\"planning-view-selector my-4 flex items-center justify-center space-x-4\"\n  >\n    <!-- Label visible uniquement sur les écrans sm et plus grands -->\n    <span\n      class=\"font-semibold text-light-form-text dark:text-dark-form-text hidden sm:inline\"\n    >\n      Planification des :\n    </span>\n\n    <!-- Bouton Radio pour Pools -->\n    <label class=\"flex items-center cursor-pointer\">\n      <input\n        type=\"radio\"\n        name=\"planningView\"\n        value=\"pools\"\n        v-model=\"currentView\"\n        @change=\"navigateTo('pools')\"\n        class=\"form-radio h-5 w-5 text-blue-600\"\n      />\n      <span class=\"ml-2 text-gray-800 dark:text-gray-200\">Pools</span>\n    </label>\n\n    <!-- Bouton Radio pour Matchs -->\n    <label class=\"flex items-center cursor-pointer\">\n      <input\n        type=\"radio\"\n        name=\"planningView\"\n        value=\"games\"\n        v-model=\"currentView\"\n        @change=\"navigateTo('games')\"\n        class=\"form-radio h-5 w-5 text-blue-600\"\n      />\n      <span class=\"ml-2 text-gray-800 dark:text-gray-200\">Matchs</span>\n    </label>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'PlanningViewSelector',\n    props: {\n      tourneyId: {\n        type: [String, Number],\n        required: true,\n      },\n    },\n    data() {\n      return {\n        currentView: this.getCurrentView(),\n      };\n    },\n    methods: {\n      getCurrentView() {\n        if (this.$route.name === 'AdminTourneyPlanningPools') {\n          return 'pools';\n        } else if (this.$route.name === 'AdminTourneyPlanningGames') {\n          return 'games';\n        }\n        return 'pools'; // Valeur par défaut\n      },\n      navigateTo(view) {\n        if (view === 'pools') {\n          this.$router.push(`/admin/tourneys/${this.tourneyId}/planning/pools`);\n        } else if (view === 'games') {\n          this.$router.push(`/admin/tourneys/${this.tourneyId}/planning/games`);\n        }\n      },\n    },\n    watch: {\n      '$route.name'() {\n        this.currentView = this.getCurrentView();\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  .planning-view-selector {\n    flex-shrink: 0; /* Pour éviter qu'il ne se réduise dans un espace restreint */\n    max-width: 100%; /* Empêche de dépasser le conteneur parent */\n  }\n</style>\n","import { render } from \"./PlanningViewSelector.vue?vue&type=template&id=d55708b0&scoped=true\"\nimport script from \"./PlanningViewSelector.vue?vue&type=script&lang=js\"\nexport * from \"./PlanningViewSelector.vue?vue&type=script&lang=js\"\n\nimport \"./PlanningViewSelector.vue?vue&type=style&index=0&id=d55708b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d55708b0\"]])\n\nexport default __exports__","import { render } from \"./TourneyPlanningPools.vue?vue&type=template&id=78664dd0&scoped=true\"\nimport script from \"./TourneyPlanningPools.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyPlanningPools.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyPlanningPools.vue?vue&type=style&index=0&id=78664dd0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-78664dd0\"]])\n\nexport default __exports__","<!-- TourneyPlanningGames.vue -->\n<template>\n  <div>\n    <!-- Tournament Sub-Menu -->\n    <TourneySubMenu :tourneyId=\"tourneyId\" />\n\n    <!-- Warning Messages -->\n    <div v-if=\"!fields.length\">\n      <ErrorMessageComponent\n        message=\"Aucun terrain trouvé. Veuillez créer des terrains avant d'assigner des matchs.\"\n      ></ErrorMessageComponent>\n    </div>\n\n    <!-- Validation Warning Messages -->\n    <div\n      v-if=\"warnings.length && showWarningsModal\"\n      class=\"p-4 rounded mb-4 relative flex flex-col bg-light-warning-bg border border-light-warning-border text-light-warning-text dark:bg-dark-warning-bg dark:border-yellow-600 dark:text-dark-warning-text\"\n    >\n      <!-- Close Button -->\n      <button\n        @click=\"closeWarningsModal\"\n        class=\"absolute top-2 right-2 flex items-center text-light-warning-text hover:text-light-warning-closeText\"\n      >\n        Fermer\n        <span class=\"ml-1\">&#10006;</span>\n      </button>\n\n      <p class=\"font-semibold mb-2\">Avertissements de Validation :</p>\n      <ul class=\"list-disc list-inside\">\n        <li v-for=\"(warning, index) in warnings\" :key=\"index\">\n          <span :class=\"warningClass(warning.type)\">\n            {{ warning.message }}\n          </span>\n        </li>\n      </ul>\n    </div>\n\n    <!-- Action Buttons and Filters -->\n    <div class=\"flex flex-wrap gap-4 my-2 px-4\">\n      <!-- First Row -->\n      <div class=\"flex flex-wrap w-full items-center gap-2 sm:gap-4\">\n        <!-- Action Buttons -->\n        <div class=\"flex flex-wrap items-center gap-2 sm:gap-4 flex-grow\">\n          <!-- Bouton pour configurer le planning des matchs -->\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"cog\"\n            @click=\"openScheduleConfigModal\"\n            variant=\"secondary\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Config Horaires</span>\n            <span class=\"md:hidden\">Conf.</span>\n          </ButtonComponent>\n\n          <!-- Bouton pour générer le planning des matchs -->\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"cog\"\n            @click=\"openGeneratePlanningModal\"\n            variant=\"algo\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Générer Planning Matchs</span>\n            <span class=\"md:hidden\">Gen.</span>\n          </ButtonComponent>\n\n          <!-- Bouton pour vérifier erreur planning -->\n          <ButtonComponent\n            v-if=\"isEditable\"\n            fontAwesomeIcon=\"check\"\n            @click=\"validatePlanning\"\n            variant=\"primary\"\n            :disabled=\"!hasGames\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Vérifier Planning Matchs</span>\n            <span class=\"md:hidden\">Check</span>\n          </ButtonComponent>\n\n          <!-- Bouton pour effacer le planning des matchs -->\n          <ButtonComponent\n            v-if=\"hasGames && isEditable\"\n            fontAwesomeIcon=\"trash\"\n            @click=\"confirmClearPlanning\"\n            variant=\"danger\"\n            :disabled=\"!games.length\"\n            class=\"w-auto\"\n          >\n            <span class=\"hidden md:inline\">Reset Matchs</span>\n            <span class=\"md:hidden\">Del</span>\n          </ButtonComponent>\n        </div>\n\n        <!-- Bouton Télécharger Excel -->\n        <ButtonComponent\n          v-if=\"!isEditable\"\n          @click=\"downloadExcel\"\n          label=\"Télécharger Excel\"\n          variant=\"success\"\n          font-awesome-icon=\"file-excel\"\n        >\n          Download Planning Excel\n        </ButtonComponent>\n\n        <!-- Status Selector -->\n        <div class=\"flex items-center gap-2 order-last\">\n          <StatusSelectorComponent\n            :tourneyId=\"tourneyId\"\n            statusKey=\"planningStatus\"\n            :statusOptions=\"planningStatusOptions\"\n            v-model=\"currentStatus\"\n            label=\"Étape\"\n            :hideWhenNotStarted=\"false\"\n          />\n        </div>\n      </div>\n\n      <!-- Second Row -->\n      <div class=\"flex flex-wrap w-full items-center gap-2 sm:gap-4\">\n        <!-- Pool Filter -->\n        <v-select\n          :options=\"poolOptions\"\n          v-model=\"selectedPoolId\"\n          placeholder=\"All Pools\"\n          :clearable=\"true\"\n          :searchable=\"true\"\n          label=\"name\"\n          :reduce=\"(pool) => pool.id\"\n          class=\"w-36 flex-shrink-0\"\n        />\n\n        <!-- Color Toggle -->\n        <label class=\"flex items-center cursor-pointer flex-shrink-0\">\n          <div class=\"relative\">\n            <input type=\"checkbox\" v-model=\"useUnifiedColors\" class=\"sr-only\" />\n            <div\n              class=\"block w-14 h-8 rounded-full transition-colors duration-300\"\n              :class=\"{\n                'bg-light-menuActive dark:bg-dark-menuActive': useUnifiedColors,\n                'bg-light-pool-infoText dark:bg-dark-pool-infoText':\n                  !useUnifiedColors,\n              }\"\n            ></div>\n            <div\n              class=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-transform duration-300\"\n              :class=\"{ 'translate-x-full': useUnifiedColors }\"\n            ></div>\n          </div>\n          <span\n            class=\"ml-2 hidden md:block text-light-form-text dark:text-dark-form-text\"\n          >\n            {{ useUnifiedColors ? 'Color by Pool' : 'Color by Sport' }}\n          </span>\n        </label>\n\n        <div class=\"flex items-center justify-center mx-auto\">\n          <!-- Navigation par Boutons Radio -->\n          <PlanningViewSelector :tourneyId=\"tourneyId\" />\n        </div>\n\n        <!-- Pagination -->\n        <div class=\"flex items-center gap-2 ml-auto\">\n          <button\n            v-if=\"currentPage > 1\"\n            @click=\"currentPage--\"\n            class=\"text-2xl px-2 py-1 rounded navigation-button\"\n          >\n            &lt;\n          </button>\n          <select\n            v-model=\"currentPage\"\n            class=\"bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text border border-light-form-border-default dark:border-dark-form-border-default rounded-md px-2 py-1\"\n          >\n            <option v-for=\"page in totalPages\" :key=\"page\" :value=\"page\">\n              Page {{ page }} / {{ totalPages }}\n            </option>\n          </select>\n          <button\n            v-if=\"currentPage < totalPages\"\n            @click=\"currentPage++\"\n            class=\"text-2xl px-2 py-1 rounded navigation-button\"\n          >\n            &gt;\n          </button>\n\n          <!-- Show All Fields Button -->\n          <button\n            @click=\"\n              showAllTerrains = !showAllTerrains;\n              currentPage = 1;\n            \"\n            class=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          >\n            {{ showAllTerrains ? 'Reduce' : 'All Fields' }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Generate Planning Confirmation Modal for Games -->\n    <StrategyPlanningGeneratorComponent\n      :isVisible=\"showGeneratePlanningConfirmation\"\n      :tourneyId=\"tourneyId\"\n      :tourneyType=\"tourneyType\"\n      :pools=\"pools\"\n      :fields=\"fields\"\n      :planningTourney=\"scheduleConfig\"\n      :planningType=\"'game'\"\n      @close=\"closeGeneratePlanningConfirmation\"\n      @planningGenerated=\"handlePlanningGenerated\"\n    />\n\n    <!-- Clear Planning Confirmation Modal -->\n    <DeleteConfirmationModal\n      :isVisible=\"showClearPlanningConfirmation\"\n      :isHardDelete=\"false\"\n      :title=\"'Suppression du Planning des Matchs'\"\n      :message=\"'Êtes-vous sûr de vouloir supprimer le planning des matchs ?'\"\n      @form-cancel=\"closeClearPlanningConfirmation\"\n      @confirm=\"clearPlanning\"\n    />\n\n    <!-- Calendar with Fields as Resources -->\n    <div v-if=\"tourney.dateTourney && fields.length\">\n      <FullCalendar\n        ref=\"fullCalendar\"\n        :options=\"calendarOptions\"\n        :key=\"tourney.dateTourney\"\n      />\n    </div>\n\n    <!-- Schedule Configuration Modal -->\n    <ModalComponent\n      :isVisible=\"showScheduleConfigModal\"\n      :title=\"'Configurer le planning des matchs'\"\n      @close=\"showScheduleConfigModal = false\"\n      size=\"lg\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"scheduleConfig\"\n          :fields=\"scheduleFormFields\"\n          @form-submit=\"saveScheduleConfig\"\n          @form-cancel=\"showScheduleConfigModal = false\"\n          :columns=\"2\"\n          :customValidation=\"validateForm\"\n          :isEditing=\"this.scheduleConfig ? true : false\"\n        />\n      </template>\n    </ModalComponent>\n\n    <!-- Create Game Modal -->\n    <ModalComponent\n      :title=\"createModalTitle\"\n      :isVisible=\"showCreateModal\"\n      @close=\"showCreateModal = false\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"createFormData\"\n          :fields=\"createFormFields\"\n          @form-submit=\"saveNewEvent\"\n          @form-cancel=\"showCreateModal = false\"\n          :customValidation=\"validateForm\"\n        />\n      </template>\n    </ModalComponent>\n\n    <!-- Edit Game Modal -->\n    <ModalComponent\n      :isVisible=\"showEditModal\"\n      @close=\"showEditModal = false\"\n      :title=\"'Modifier le match'\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"eventFormData\"\n          :fields=\"eventFormFields\"\n          @form-submit=\"saveEventEdits\"\n          @form-cancel=\"showEditModal = false\"\n          :customValidation=\"validateForm\"\n        />\n      </template>\n    </ModalComponent>\n  </div>\n</template>\n\n<script>\n  // Import necessary components and plugins\n  import { mapState, mapActions } from 'vuex';\n  import FullCalendar from '@fullcalendar/vue3';\n  import timeGridPlugin from '@fullcalendar/timegrid';\n  import interactionPlugin from '@fullcalendar/interaction';\n  import resourceTimeGridPlugin from '@fullcalendar/resource-timegrid';\n  import apiService from '@/services/apiService';\n  import TourneySubMenu from '@/components/TourneySubMenu.vue';\n  import ErrorMessageComponent from '@/components/ErrorMessageComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import { toast } from 'vue3-toastify';\n  import StrategyPlanningGeneratorComponent from '@/components/StrategyPattern/Planning/StrategyPlanningGeneratorComponent.vue';\n  import vSelect from 'vue-select';\n  import 'vue-select/dist/vue-select.css';\n  import PlanningViewSelector from '@/components/PlanningViewSelector.vue';\n\n  export default {\n    components: {\n      FullCalendar,\n      TourneySubMenu,\n      ErrorMessageComponent,\n      StatusSelectorComponent,\n      ButtonComponent,\n      ModalComponent,\n      FormComponent,\n      DeleteConfirmationModal,\n      StrategyPlanningGeneratorComponent,\n      vSelect,\n      PlanningViewSelector,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        tourney: {},\n        fields: [],\n        teams: [],\n        games: [],\n        pools: [],\n        sports: [],\n        scheduleConfig: {},\n        formErrors: {},\n        selectedPoolId: null,\n        planningStatusOptions: [\n          { value: 'draft', label: 'Edition' },\n          { value: 'completed', label: 'Terminé' },\n        ],\n        // Configuration des champs du formulaire de configuration du planning\n        scheduleFormFields: [\n          {\n            name: 'gameDuration',\n            type: 'number',\n            label: 'Durée d’un match (en minutes)',\n            required: true,\n          },\n          {\n            name: 'transitionGameTime',\n            type: 'number',\n            label: 'Transition entre les matchs (en minutes)',\n            required: true,\n          },\n        ],\n        warnings: [],\n        showScheduleConfigModal: false,\n        showWarningsModal: false,\n\n        // Pagination\n        isSmallScreen: false,\n        currentPage: 1,\n        terrainsPerPage: 6,\n        showAllTerrains: false,\n\n        showEditModal: false,\n        eventToEdit: null,\n        eventFormData: {},\n\n        showGeneratePlanningConfirmation: false,\n        showClearPlanningConfirmation: false,\n        useUnifiedColors: true,\n        colorMap: {},\n\n        // For creating new games\n        showCreateModal: false,\n        createFormData: {\n          startTime: '',\n          endTime: '',\n          poolScheduleId: null,\n          fieldId: '',\n          sportId: '',\n          teamAId: null,\n          teamBId: null,\n        },\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n        tourneyType: (state) => state.tourneyType,\n      }),\n      currentStatus: {\n        get() {\n          return this.statuses.planningStatus;\n        },\n        set(newStatus) {\n          this.$store.dispatch('tourney/updateStatus', {\n            tourneyId: this.tourneyId,\n            key: 'planningStatus',\n            value: newStatus,\n          });\n        },\n      },\n\n      /**\n       * Calcule les pages avec une répartition équilibrée des terrains.\n       */\n      pages() {\n        if (this.showAllTerrains) {\n          return [this.filteredFields];\n        }\n\n        const total = this.filteredFields.length;\n        const maxPerPage = this.terrainsPerPage;\n        const numPages = Math.ceil(total / maxPerPage);\n\n        const base = Math.floor(total / numPages);\n        let remainder = total % numPages;\n\n        const pages = [];\n        let start = 0;\n        for (let i = 0; i < numPages; i++) {\n          let perPage = base;\n          if (remainder > 0) {\n            perPage += 1;\n            remainder -= 1;\n          }\n          const end = start + perPage;\n          pages.push(this.filteredFields.slice(start, end));\n          start = end;\n        }\n        return pages;\n      },\n\n      /**\n       * Nombre total de pages.\n       */\n      totalPages() {\n        return this.pages.length;\n      },\n\n      /**\n       * Terrains à afficher sur la page actuelle.\n       */\n      paginatedFields() {\n        return this.pages[this.currentPage - 1];\n      },\n      /**\n       * Filters fields based on selected pool\n       */\n      filteredFields() {\n        if (this.selectedPoolId) {\n          // Get field IDs where the selected pool has schedules\n          const fieldIds = new Set();\n          const selectedPool = this.pools.find(\n            (pool) => pool.id === this.selectedPoolId\n          );\n          if (selectedPool && selectedPool.schedules) {\n            selectedPool.schedules.forEach((schedule) => {\n              fieldIds.add(schedule.fieldId);\n            });\n          }\n          return this.fields.filter((field) => fieldIds.has(field.id));\n        }\n        return this.fields;\n      },\n\n      /**\n       * Edits the team options based on the selected pool.\n       */\n      editTeamOptions() {\n        if (this.eventToEdit && this.eventToEdit.extendedProps.game.pool) {\n          const poolId = this.eventToEdit.extendedProps.game.pool.id;\n          return this.teams\n            .filter((team) => team.poolId === poolId)\n            .map((team) => ({\n              value: team.id,\n              label: team.teamName,\n            }));\n        }\n        // Si pas de pool associée, retourner toutes les équipes\n        return this.teamOptions;\n      },\n\n      /**\n       * Determines if the planning is editable based on the current status.\n       */\n      isEditable() {\n        return this.statuses.planningStatus !== 'completed';\n      },\n\n      /**\n       * Checks if there are any games.\n       */\n      hasGames() {\n        return this.games.length > 0;\n      },\n\n      /**\n       * Generates a unique color for pools.\n       * @param {number} poolId - The ID of the pool.\n       * @returns {string} - The generated color.\n       */\n      generateUniqueColor() {\n        return (poolId) => {\n          if (!poolId) return '#888888'; // Default color if poolId is undefined\n          if (this.colorMap[poolId]) {\n            return this.colorMap[poolId];\n          }\n          const hue = (poolId * 137.508) % 360;\n          const color = `hsl(${hue}, 70%, 60%)`;\n          this.colorMap[poolId] = color;\n          return color;\n        };\n      },\n\n      /**\n       * Returns the selected pool object to show for filtering.\n       */\n      poolOptions() {\n        return [{ id: null, name: 'All Pools' }, ...this.pools];\n      },\n\n      /**\n       * Returns the team options for the create game form.\n       */\n      teamOptions() {\n        return this.teams.map((team) => ({\n          value: team.id,\n          label: team.teamName,\n        }));\n      },\n\n      /**\n       * Returns the field options for the create game form.\n       */\n      fieldOptions() {\n        return this.fields.map((field) => ({\n          value: field.id,\n          label: field.name,\n        }));\n      },\n\n      /**\n       * Returns the sport options for the create game form.\n       */\n      sportOptions() {\n        return this.sports.map((sport) => ({\n          value: sport.id,\n          label: sport.name,\n        }));\n      },\n\n      /**\n       * Filters teams based on the selected pool.\n       */\n      filteredTeams() {\n        if (this.selectedPoolId) {\n          return this.teams.filter(\n            (team) => team.poolId === this.selectedPoolId\n          );\n        }\n        return this.teams;\n      },\n\n      /**\n       * Configures the options for FullCalendar.\n       */\n      calendarOptions() {\n        if (!this.tourney.dateTourney) {\n          console.error('La date du tournoi n’est pas disponible');\n          return {};\n        }\n\n        const events = []; // Store events for the calendar\n\n        // Add games as events\n        this.games.forEach((game) => {\n          // Filter by selected pool and team\n          if (this.selectedPoolId && game.pool?.id !== this.selectedPoolId) {\n            return;\n          }\n          // Check if game.field is defined\n          if (!game.field) {\n            console.warn(`Game with ID ${game.id} has no field assigned.`);\n            return;\n          }\n          // Check if game.teamA and game.teamB are defined\n          const teamATeamName = game.teamA?.teamName || 'Équipe A';\n          const teamBTeamName = game.teamB?.teamName || 'Équipe B';\n\n          // Add game as an event\n          events.push({\n            id: game.id.toString(),\n            resourceId: game.field.id.toString(),\n            title: `${teamATeamName} vs ${teamBTeamName}`,\n            start: new Date(game.startTime),\n            end: new Date(game.endTime),\n            backgroundColor: this.useUnifiedColors\n              ? this.generateUniqueColor(game.pool?.id)\n              : game.sport?.color || '#3B82F6',\n            textColor: '#FFFFFF',\n            extendedProps: { game },\n          });\n        });\n\n        // Add poolSchedules as background events\n        this.pools.forEach((pool) => {\n          if (pool.schedules && pool.schedules.length > 0) {\n            pool.schedules.forEach((schedule) => {\n              // If a pool is selected and doesn't match, skip\n              if (this.selectedPoolId && pool.id !== this.selectedPoolId) {\n                return;\n              }\n              events.push({\n                id: `pool-${pool.id}-schedule-${schedule.id}`,\n                start: `${schedule.date}T${schedule.startTime}`,\n                end: `${schedule.date}T${schedule.endTime}`,\n                resourceId: schedule.fieldId.toString(),\n                display: 'background',\n                backgroundColor: this.generateUniqueColor(pool.id),\n              });\n            });\n          }\n        });\n\n        /**\n         * Returns the FullCalendar options.\n         */\n        return {\n          plugins: [timeGridPlugin, interactionPlugin, resourceTimeGridPlugin],\n          schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives', // Clé pour usage non-commercial (https://fullcalendar.io/license)\n          initialView: 'resourceTimeGridDay',\n          timeZone: 'local',\n          initialDate: this.tourney.dateTourney,\n          editable: this.isEditable,\n          droppable: true, // Permet de déposer les éléments\n          eventStartEditable: true, // Autorise le déplacement des événements\n          eventDurationEditable: true, // Autorise les ajustements de durée\n          selectable: this.isEditable,\n          select: this.handleSelect,\n          eventOverlap: true,\n          height: 'auto',\n          slotMinTime: this.adjustedSlotMinTime,\n          slotMaxTime: this.adjustedSlotMaxTime,\n          slotDuration: '00:05:00',\n          slotLabelInterval: '00:15:00',\n          allDaySlot: false,\n          resources: this.paginatedFields.map((field) => ({\n            id: field.id.toString(),\n            title: field.name,\n          })),\n          events: events,\n          resourceAreaHeaderContent: 'Terrains',\n          slotLabelFormat: {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false,\n          },\n          headerToolbar: false,\n          eventDrop: this.handleEventDrop,\n          eventResize: this.handleEventResize,\n          eventContent: this.renderEventContent,\n        };\n      },\n\n      /**\n       * Adjusts the slot min time based on the schedule config.\n       */\n      adjustedSlotMinTime() {\n        const startTime = this.scheduleConfig.startTime || '07:00:00';\n        return startTime;\n      },\n\n      /**\n       * Adjusts the slot max time based on the schedule config.\n       */\n      adjustedSlotMaxTime() {\n        const endTime = this.scheduleConfig.endTime || '23:00:00';\n        return endTime;\n      },\n\n      /**\n       * Defines the fields for the edit game form.\n       */\n      eventFormFields() {\n        return [\n          {\n            name: 'teamAId',\n            type: 'select',\n            label: 'Équipe A',\n            options: this.editTeamOptions,\n            required: true,\n          },\n          {\n            name: 'teamBId',\n            type: 'select',\n            label: 'Équipe B',\n            options: this.editTeamOptions,\n            required: true,\n          },\n\n          {\n            name: 'startTime',\n            type: 'datetime-local',\n            label: 'Heure de début',\n            required: true,\n          },\n          {\n            name: 'endTime',\n            type: 'datetime-local',\n            label: 'Heure de fin',\n            required: true,\n          },\n        ];\n      },\n\n      /**\n       * Defines the fields for the create game form.\n       */\n      createFormFields() {\n        const fields = [\n          {\n            name: 'teamAId',\n            type: 'select',\n            label: 'Équipe A',\n            options: this.createTeamOptions,\n            required: true,\n          },\n          {\n            name: 'teamBId',\n            type: 'select',\n            label: 'Équipe B',\n            options: this.createTeamOptions,\n            required: true,\n          },\n          {\n            name: 'startTime',\n            type: 'datetime-local',\n            label: 'Heure de début',\n            required: true,\n          },\n          {\n            name: 'endTime',\n            type: 'datetime-local',\n            label: 'Heure de fin',\n            required: true,\n            // disabled: this.autoCalculateEndTime,\n          },\n        ];\n\n        // Ajout conditionnel de 'fieldId' et 'sportId' si 'poolScheduleId' est null\n        if (!this.createFormData.poolScheduleId) {\n          fields.push(\n            {\n              name: 'fieldId',\n              type: 'select',\n              label: 'Terrain',\n              options: this.fieldOptions,\n              required: true,\n            },\n            {\n              name: 'sportId',\n              type: 'select',\n              label: 'Sport',\n              options: this.sportOptions,\n              required: true,\n            }\n          );\n        }\n\n        return fields;\n      },\n\n      /**\n       * Determines if end time should be auto-calculated.\n       */\n      autoCalculateEndTime() {\n        return !!this.createFormData.poolScheduleId;\n      },\n\n      /**\n       * Provides team options based on the pool when creating a game.\n       */\n      createTeamOptions() {\n        if (this.createFormData.poolScheduleId) {\n          const pool = this.findPoolByScheduleId(\n            this.createFormData.poolScheduleId\n          );\n          if (pool) {\n            return pool.teams.map((team) => ({\n              value: team.id,\n              label: team.teamName,\n            }));\n          }\n        }\n        return this.teamOptions;\n      },\n\n      /**\n       * Dynamically sets the title for the create game modal.\n       */\n      createModalTitle() {\n        if (this.createFormData.poolScheduleId) {\n          const pool = this.findPoolByScheduleId(\n            this.createFormData.poolScheduleId\n          );\n          if (pool) {\n            const schedule = pool.schedules.find(\n              (s) => s.id === this.createFormData.poolScheduleId\n            );\n            const sportName = schedule.sport ? schedule.sport.name : 'Sport';\n            return `${pool.name} - ${sportName}`;\n          }\n        }\n        return 'Créer un Match';\n      },\n    },\n\n    watch: {\n      /**\n       * Toggle color to group by pool or sport.\n       */\n      useUnifiedColors() {\n        if (this.$refs.fullCalendar) {\n          this.$refs.fullCalendar.getApi().refetchEvents();\n        }\n      },\n\n      /**\n       * Refreshes the calendar when the current page changes.\n       */\n      currentPage() {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.refetchResources();\n        }\n      },\n    },\n    methods: {\n      // Map Vuex actions\n      ...mapActions('tourney', [\n        'fetchTourneyStatuses',\n        'setTournamentName',\n        'clearTournamentName',\n      ]),\n      /**\n       * Fetches planning details including fields, pools, games, etc.\n       */\n      async fetchPlanningDetails() {\n        try {\n          await this.fetchTourneyStatuses(this.tourneyId);\n\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/planning/details`\n          );\n\n          const data = response.data;\n\n          this.fields = data.fields || [];\n          this.pools = data.pools || [];\n          this.games = data.games || [];\n          this.sports = data.sports || [];\n          this.scheduleConfig = data.scheduleTourney || this.scheduleConfig;\n\n          // Fetch tournament details to get the date\n          const tourneyResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}`\n          );\n          this.tourney = tourneyResponse.data;\n\n          // Fetch teams with their poolId\n          const teamsResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}/teams`\n          );\n          this.teams = teamsResponse.data;\n\n          // Check if dateTourney is defined\n          if (!this.tourney.dateTourney) {\n            console.warn(\"La date du tournoi n'est pas définie.\");\n          }\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du planning:',\n            error\n          );\n        }\n      },\n\n      /**\n       * Refreshes calendar events.\n       */\n      refreshCalendarEvents() {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.refetchEvents();\n        }\n      },\n\n      /**\n       * Renders custom event content with sport and pool information.\n       * @param {Object} arg - Event render info.\n       * @returns {Object} - Custom DOM nodes.\n       */\n      renderEventContent(arg) {\n        const container = document.createElement('div');\n        container.classList.add('flex', 'flex-col', 'space-y-1');\n\n        const headerContainer = document.createElement('div');\n        headerContainer.classList.add(\n          'flex',\n          'justify-between',\n          'items-center'\n        );\n\n        const title = document.createElement('span');\n        title.innerText = arg.event.title;\n        title.classList.add('font-semibold', 'text-white');\n\n        headerContainer.appendChild(title);\n\n        // Check if the event is editable and not a background event\n        if (this.isEditable && arg.event.display !== 'background') {\n          const editIcon = document.createElement('span');\n          editIcon.innerHTML = '&#9998;';\n          editIcon.classList.add('edit-icon');\n          editIcon.style.color = 'yellow';\n          editIcon.style.cursor = 'pointer';\n          editIcon.style.padding = '0 5px';\n\n          editIcon.addEventListener('click', (e) => {\n            e.stopPropagation();\n            this.openEditModal(arg.event);\n          });\n\n          const deleteIcon = document.createElement('span');\n          deleteIcon.innerHTML = '&#10060;';\n          deleteIcon.classList.add('delete-icon');\n          deleteIcon.style.color = 'white';\n          deleteIcon.style.cursor = 'pointer';\n          deleteIcon.style.padding = '0 5px';\n\n          deleteIcon.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            this.deleteEvent(arg.event);\n          });\n\n          headerContainer.appendChild(editIcon);\n\n          let pressTimer;\n          deleteIcon.addEventListener('touchstart', (e) => {\n            e.stopPropagation();\n            pressTimer = setTimeout(() => {\n              this.deleteEvent(arg.event);\n            }, 600);\n          });\n          deleteIcon.addEventListener('touchend', () => {\n            clearTimeout(pressTimer);\n          });\n          headerContainer.appendChild(deleteIcon);\n        }\n\n        // For background events or events without a game, we might not have start and end times\n        const startTime = arg.event.start\n          ? this.formatDisplayTime(arg.event.start)\n          : '';\n        const endTime = arg.event.end\n          ? this.formatDisplayTime(arg.event.end)\n          : '';\n        const timeRange = document.createElement('div');\n        if (startTime && endTime) {\n          timeRange.innerText = `${startTime} - ${endTime}`;\n          timeRange.classList.add('text-sm', 'text-white');\n        }\n\n        // Display sport and pool information if 'game' exists\n        const game = arg.event.extendedProps.game;\n        if (game) {\n          const sportPoolInfo = document.createElement('div');\n          const poolName = game.pool ? game.pool.name : '';\n          const sportName = game.sport ? game.sport.name : '';\n          sportPoolInfo.innerText = `${poolName} - ${sportName}`;\n          sportPoolInfo.classList.add('text-xs', 'text-white');\n\n          container.appendChild(headerContainer);\n          container.appendChild(timeRange);\n          container.appendChild(sportPoolInfo);\n        } else {\n          // For events without 'game' (e.g., background events), only show the title and time range if available\n          container.appendChild(headerContainer);\n          if (startTime && endTime) {\n            container.appendChild(timeRange);\n          }\n        }\n\n        return { domNodes: [container] };\n      },\n\n      /**\n       * Downloads the planning as an Excel file.\n       * @returns {Promise<void>} - A promise that resolves when the download is complete.\n       */\n      async downloadExcel() {\n        try {\n          // Afficher un toast indiquant que le téléchargement démarre\n          const toastId = toast.info('Téléchargement du fichier en cours...', {\n            autoClose: false, // Empêche la fermeture automatique\n          });\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/export-data/excel`,\n            {\n              responseType: 'blob', // Demande un blob en réponse\n            }\n          );\n\n          // Créer une URL temporaire pour le fichier\n          const blob = response.data; // Axios renvoie le blob dans `data`\n          const url = window.URL.createObjectURL(blob);\n\n          // Créer un lien pour déclencher le téléchargement\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `tournament_${this.tourneyId}.xlsx`; // Nom du fichier\n          document.body.appendChild(a);\n          a.click();\n\n          // Nettoyer l'URL temporaire après le téléchargement\n          window.URL.revokeObjectURL(url);\n          // Mettre à jour le toast pour indiquer que le téléchargement est terminé\n          toast.update(toastId, {\n            render: 'Téléchargement terminé avec succès !',\n            type: toast.TYPE.SUCCESS,\n            autoClose: 2000, // Fermeture automatique après 5 secondes\n          });\n        } catch (error) {\n          console.error('Erreur lors du téléchargement Excel :', error);\n          toast.error(\n            error.message || \"Une erreur s'est produite lors du téléchargement.\"\n          );\n        }\n      },\n\n      /**\n       * Returns CSS class based on warning type.\n       * @param {string} type - Warning type.\n       * @returns {string} - CSS class.\n       */\n      warningClass(type) {\n        switch (type) {\n          case 'grave':\n            return 'text-red-600 font-bold';\n          case 'moyenne':\n            return 'text-orange-600 font-semibold';\n          case 'faible':\n            return 'text-yellow-600';\n          default:\n            return '';\n        }\n      },\n\n      /**\n       * Handles selection on the calendar to create a new game.\n       * @param {Object} selectionInfo - Selection info from FullCalendar.\n       */\n      handleSelect(selectionInfo) {\n        if (!this.isEditable) return;\n        const poolSchedule = this.findPoolScheduleForSelection(selectionInfo);\n\n        if (poolSchedule) {\n          // Si un poolSchedule est trouvé, remplir les données en conséquence\n          this.createFormData = {\n            startTime: this.formatDateTime(selectionInfo.start),\n            endTime: this.calculateEndTime(\n              selectionInfo.start,\n              this.scheduleConfig.gameDuration\n            ),\n            poolScheduleId: poolSchedule.id,\n            teamAId: null,\n            teamBId: null,\n            fieldId: null,\n            sportId: null,\n          };\n        } else {\n          // Si aucun poolSchedule n'est trouvé, permettre la création sans poolScheduleId\n          this.createFormData = {\n            startTime: this.formatDateTime(selectionInfo.start),\n            endTime: this.calculateEndTime(\n              selectionInfo.start,\n              this.scheduleConfig.gameDuration\n            ),\n            poolScheduleId: null,\n            fieldId: selectionInfo.resource.id,\n            sportId: null,\n            teamAId: null,\n            teamBId: null,\n          };\n        }\n        this.showCreateModal = true;\n      },\n\n      /**\n       * Finds the pool schedule for a given selection.\n       * @param {Object} selectionInfo - Selection info from FullCalendar.\n       * @returns {Object|null} - The matching pool schedule or null.\n       */\n      findPoolScheduleForSelection(selectionInfo) {\n        const selectionStart = selectionInfo.start;\n        const selectionEnd = selectionInfo.end;\n        const resourceId = selectionInfo.resource.id;\n\n        // Iterate over all poolSchedules\n        for (const pool of this.pools) {\n          for (const schedule of pool.schedules) {\n            // Check if the schedule is on the same field\n            if (schedule.fieldId.toString() === resourceId) {\n              const scheduleStart = new Date(\n                `${schedule.date}T${schedule.startTime}`\n              );\n              const scheduleEnd = new Date(\n                `${schedule.date}T${schedule.endTime}`\n              );\n\n              // Check if the selection is within the schedule\n              if (\n                selectionStart >= scheduleStart &&\n                selectionEnd <= scheduleEnd\n              ) {\n                return schedule;\n              }\n            }\n          }\n        }\n        return null;\n      },\n\n      /**\n       * Finds a pool by its schedule ID.\n       * @param {number} scheduleId - The schedule ID.\n       * @returns {Object|null} - The matching pool or null.\n       */\n      findPoolByScheduleId(scheduleId) {\n        for (const pool of this.pools) {\n          if (pool.schedules.some((s) => s.id === scheduleId)) {\n            return pool;\n          }\n        }\n        return null;\n      },\n\n      /**\n       * Formats a Date object to 'YYYY-MM-DDTHH:MM' format.\n       * @param {Date} date - The date to format.\n       * @returns {string} - The formatted date string.\n       */\n      formatDateTime(date) {\n        const d = new Date(date);\n        if (isNaN(d.getTime())) {\n          return null;\n        }\n        const year = d.getFullYear().toString().padStart(4, '0');\n        const month = (d.getMonth() + 1).toString().padStart(2, '0');\n        const day = d.getDate().toString().padStart(2, '0');\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        return `${year}-${month}-${day}T${hours}:${minutes}`;\n      },\n\n      /**\n       * Calculates the end time based on start time and duration.\n       * @param {Date} startTime - The start time.\n       * @param {number} durationMinutes - Duration in minutes.\n       * @returns {string} - The calculated end time in 'YYYY-MM-DDTHH:MM' format.\n       */\n      calculateEndTime(startTime, durationMinutes) {\n        const endDate = new Date(startTime.getTime() + durationMinutes * 60000);\n        return this.formatDateTime(endDate);\n      },\n\n      /**\n       * Saves a new game after form submission.\n       */\n      async saveNewEvent() {\n        try {\n          const data = {\n            teamAId: this.createFormData.teamAId,\n            teamBId: this.createFormData.teamBId,\n            startTime: this.createFormData.startTime.replace('T', ' ') + ':00',\n            endTime: this.createFormData.endTime.replace('T', ' ') + ':00',\n          };\n\n          if (this.createFormData.poolScheduleId) {\n            data.poolScheduleId = this.createFormData.poolScheduleId;\n          } else {\n            data.fieldId = Number(this.createFormData.fieldId);\n            data.sportId = this.createFormData.sportId;\n          }\n\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/games`,\n            data\n          );\n\n          const newGame = response.data;\n\n          // Manually assign the field to the new game if it's not included in the response\n          if (!newGame.field && data.fieldId) {\n            const field = this.fields.find((f) => f.id === data.fieldId);\n            if (field) {\n              newGame.field = field;\n            } else {\n              console.warn(`Field with ID ${data.fieldId} not found.`);\n            }\n          }\n\n          // Similarly, assign the sport if it's not included\n          if (!newGame.sport && data.sportId) {\n            const sport = this.sports.find((s) => s.id === data.sportId);\n            if (sport) {\n              newGame.sport = sport;\n            } else {\n              console.warn(`Sport with ID ${data.sportId} not found.`);\n            }\n          }\n\n          this.games.push(newGame);\n          this.refreshCalendarEvents();\n          this.showCreateModal = false;\n        } catch (error) {\n          console.error('Erreur lors de la création du match :', error);\n          toast.error('Erreur lors de la création du match.');\n        }\n      },\n\n      /**\n       * Helper function to format time from a Date object.\n       * @param startTime\n       * @param endTime\n       * @param fieldId\n       */\n      findPoolScheduleAtPosition(startTime, endTime, fieldId) {\n        for (const pool of this.pools) {\n          for (const schedule of pool.schedules) {\n            if (schedule.fieldId.toString() === fieldId) {\n              const scheduleStart = new Date(\n                `${schedule.date}T${schedule.startTime}`\n              );\n              const scheduleEnd = new Date(\n                `${schedule.date}T${schedule.endTime}`\n              );\n              if (startTime >= scheduleStart && endTime <= scheduleEnd) {\n                return schedule;\n              }\n            }\n          }\n        }\n        return null;\n      },\n\n      /**\n       * Handles the drag and drop of events on the calendar.\n       * Allows moving within the same pool schedule.\n       * @param {Object} info - Event drop info from FullCalendar.\n       */\n      async handleEventDrop(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n\n        const event = info.event;\n        const eventId = event.id;\n        const newFieldId = event.getResources()[0]?.id;\n        const newStart = event.start;\n        const newEnd = event.end;\n        const currentGame = event.extendedProps.game;\n\n        try {\n          const poolScheduleAtNewPosition = this.findPoolScheduleAtPosition(\n            newStart,\n            newEnd,\n            newFieldId\n          );\n\n          let data = {\n            startTime: this.formatTime(newStart),\n            endTime: this.formatTime(newEnd),\n            fieldId: newFieldId,\n            poolScheduleId: currentGame.poolScheduleId || null,\n          };\n\n          if (currentGame.poolScheduleId) {\n            // Game has a poolScheduleId\n            if (\n              !poolScheduleAtNewPosition ||\n              poolScheduleAtNewPosition.id !== currentGame.poolScheduleId\n            ) {\n              toast.warning(\n                'Vous ne pouvez pas déplacer ce match en dehors de son pool schedule.'\n              );\n              info.revert();\n              return;\n            }\n\n            if (poolScheduleAtNewPosition.id !== currentGame.poolScheduleId) {\n              // Check if sports match\n              if (poolScheduleAtNewPosition.sportId !== currentGame.sport.id) {\n                toast.warning(\n                  'Vous ne pouvez pas déplacer ce match vers un pool schedule avec un sport différent.'\n                );\n                info.revert();\n                return;\n              }\n              // Update poolScheduleId\n              data.poolScheduleId = poolScheduleAtNewPosition.id;\n            }\n            // Update data\n            data.poolScheduleId = currentGame.poolScheduleId;\n          } else {\n            // Game does not have a poolScheduleId\n            if (poolScheduleAtNewPosition) {\n              toast.warning(\n                'Vous ne pouvez pas déplacer ce match dans un créneau de pool.'\n              );\n              info.revert();\n              return;\n            }\n            // Ensure poolScheduleId remains null\n            data.poolScheduleId = null;\n          }\n\n          const response = await apiService.put(\n            `/tourneys/${this.tourneyId}/games/${eventId}`,\n            data\n          );\n\n          // Update the game locally\n          const index = this.games.findIndex(\n            (g) => g.id.toString() === event.id\n          );\n          if (index !== -1) {\n            this.games[index] = response.data;\n          }\n\n          // Update event properties\n          event.setExtendedProp('game', response.data);\n        } catch (error) {\n          console.error(\"Erreur lors du déplacement de l'événement :\", error);\n          info.revert();\n        }\n      },\n\n      /**\n       * Finds the poolSchedule for a given event.\n       * @param {Object} event - The event object from FullCalendar.\n       * @returns {Object|null} - The matching poolSchedule or null.\n       */\n      findPoolScheduleForEvent(event) {\n        const eventStart = event.start;\n        const eventEnd = event.end;\n        const resourceId = event.getResources()[0]?.id;\n\n        for (const pool of this.pools) {\n          for (const schedule of pool.schedules) {\n            if (schedule.fieldId.toString() === resourceId) {\n              const scheduleStart = new Date(\n                `${schedule.date}T${schedule.startTime}`\n              );\n              const scheduleEnd = new Date(\n                `${schedule.date}T${schedule.endTime}`\n              );\n              if (eventStart >= scheduleStart && eventEnd <= scheduleEnd) {\n                return schedule;\n              }\n            }\n          }\n        }\n        return null;\n      },\n\n      /**\n       * Handles event resizing on the calendar.\n       * @param {Object} info - Event resize info from FullCalendar.\n       */\n      async handleEventResize(info) {\n        if (!this.isEditable) {\n          info.revert();\n          return;\n        }\n        const event = info.event;\n        try {\n          const eventId = event.id;\n          const fieldId = event.getResources()[0]?.id;\n\n          if (!eventId || !fieldId) {\n            console.error(\n              \"Problème d'ID : Terrain ou événement mal identifié.\"\n            );\n            info.revert();\n            return;\n          }\n\n          const data = {\n            fieldId: fieldId,\n            startTime: this.formatTime(event.start),\n            endTime: this.formatTime(event.end),\n            date: this.tourney.dateTourney,\n          };\n\n          // Ensure the resized event stays within its pool schedule\n          const poolSchedule = this.findPoolScheduleForEvent(event);\n\n          if (\n            (event.extendedProps.game.poolScheduleId && !poolSchedule) ||\n            (poolSchedule &&\n              event.extendedProps.game.poolScheduleId !== poolSchedule.id)\n          ) {\n            // Prevent resizing outside of the pool schedule\n            toast.error(\n              'Vous ne pouvez pas redimensionner ce match en dehors de son pool schedule.'\n            );\n            info.revert();\n            return;\n          }\n\n          if (poolSchedule) {\n            data.poolScheduleId = poolSchedule.id;\n          }\n\n          const response = await apiService.put(\n            `/tourneys/${this.tourneyId}/games/${eventId}`,\n            data\n          );\n\n          // Update the game locally\n          const index = this.games.findIndex(\n            (g) => g.id.toString() === eventId.toString()\n          );\n          if (index !== -1) {\n            this.games[index] = response.data;\n          }\n\n          // Update event properties\n          event.setExtendedProp('game', response.data);\n        } catch (error) {\n          console.error(\n            \"Erreur lors du redimensionnement de l'événement :\",\n            error\n          );\n          info.revert();\n        }\n      },\n\n      /**\n       * Saves edits to an event after form submission.\n       */\n      async saveEventEdits() {\n        try {\n          const data = {\n            teamAId: this.eventFormData.teamAId,\n            teamBId: this.eventFormData.teamBId,\n            startTime: this.eventFormData.startTime.replace('T', ' ') + ':00',\n            endTime: this.eventFormData.endTime.replace('T', ' ') + ':00',\n            fieldId: this.eventFormData.fieldId,\n          };\n          const response = await apiService.put(\n            `/tourneys/${this.tourneyId}/games/${this.eventToEdit.id}`,\n            data\n          );\n\n          // Update the game locally\n          const index = this.games.findIndex(\n            (g) => g.id.toString() === this.eventToEdit.id.toString()\n          );\n          if (index !== -1) {\n            this.games[index] = response.data;\n          }\n\n          // Update event properties\n          const event = this.eventToEdit;\n          event.setExtendedProp('game', response.data);\n          this.refreshCalendarEvents();\n          this.showEditModal = false;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la sauvegarde des modifications :',\n            error\n          );\n          toast.error('Erreur lors de la sauvegarde des modifications.');\n        }\n      },\n\n      /**\n       * Deletes an event.\n       * @param {Object} event - The event object from FullCalendar.\n       */\n      async deleteEvent(event) {\n        if (!this.isEditable) return;\n        try {\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/games/${event.id}`\n          );\n          event.remove();\n          // Remove the game from the local list\n          this.games = this.games.filter(\n            (g) => g.id.toString() !== event.id.toString()\n          );\n        } catch (error) {\n          console.error('Erreur lors de la suppression du match :', error);\n          toast.error('Erreur lors de la suppression du match.');\n        }\n      },\n\n      /**\n       * Formats date for display in events.\n       * @param {Date} date - The date to format.\n       * @returns {string} - The formatted time.\n       */\n      formatDisplayTime(date) {\n        const d = new Date(date);\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        return `${hours}:${minutes}`;\n      },\n\n      /**\n       * Formats date to 'YYYY-MM-DD HH:MM:SS' format.\n       * @param {Date} date - The date to format.\n       * @returns {string} - The formatted date string.\n       */\n      formatTime(date) {\n        const d = new Date(date);\n        if (isNaN(d.getTime())) {\n          return null;\n        }\n        const year = d.getFullYear().toString().padStart(4, '0');\n        const month = (d.getMonth() + 1).toString().padStart(2, '0');\n        const day = d.getDate().toString().padStart(2, '0');\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        const seconds = d.getSeconds().toString().padStart(2, '0');\n        return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n      },\n\n      /**\n       * Opens the schedule configuration modal.\n       */\n      openScheduleConfigModal() {\n        this.showScheduleConfigModal = true;\n        this.loadScheduleConfig();\n      },\n\n      /**\n       * Opens the edit modal for an event.\n       * @param {Object} event - The event object from FullCalendar.\n       */\n      openEditModal(event) {\n        this.eventToEdit = event;\n        const game = event.extendedProps.game;\n        this.eventFormData = {\n          teamAId: game.teamA.id,\n          teamBId: game.teamB.id,\n          startTime: this.formatDateTime(event.start),\n          endTime: this.formatDateTime(event.end),\n          fieldId: event.getResources()[0]?.id,\n        };\n        this.showEditModal = true;\n      },\n\n      /**\n       * Loads the existing schedule configuration.\n       */\n      async loadScheduleConfig() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/schedule`\n          );\n          if (response.data) {\n            this.scheduleConfig = response.data;\n          }\n        } catch (error) {\n          if (error.response && error.response.status === 404) {\n            console.warn(\n              'Aucune configuration existante du planning trouvée. Utilisation des valeurs par défaut.'\n            );\n          } else {\n            console.error(\n              'Erreur lors de la récupération de la configuration du planning :',\n              error\n            );\n          }\n        }\n      },\n\n      /**\n       * Opens the generate planning confirmation modal.\n       */\n      openGeneratePlanningModal() {\n        this.showGeneratePlanningConfirmation = true;\n      },\n\n      /**\n       * Closes the generate planning confirmation modal.\n       */\n      closeGeneratePlanningConfirmation() {\n        this.showGeneratePlanningConfirmation = false;\n      },\n\n      /**\n       * Opens the clear planning confirmation modal.\n       */\n      confirmClearPlanning() {\n        this.showClearPlanningConfirmation = true;\n      },\n\n      /**\n       * Closes the clear planning confirmation modal.\n       */\n      closeClearPlanningConfirmation() {\n        this.showClearPlanningConfirmation = false;\n      },\n\n      /**\n       * Handles the planning generation.\n       */\n      async handlePlanningGenerated() {\n        await this.fetchPlanningDetails();\n        this.closeGeneratePlanningConfirmation();\n        this.validatePlanning();\n      },\n\n      /**\n       * Validates the event drop action.\n       * @param event\n       * @param resourceId\n       */\n      validateEventDrop(event, resourceId) {\n        // Récupérer l'événement déplacé\n        const game = event.extendedProps.game;\n\n        // Vérifier si le poolSchedule correspondant existe\n        const poolSchedule = this.poolSchedules.find(\n          (ps) =>\n            ps.id === game.poolScheduleId &&\n            ps.field.id.toString() === resourceId\n        );\n\n        // Si aucune correspondance n'est trouvée, l'action est invalide\n        return !!poolSchedule;\n      },\n\n      /**\n       * Clears the planning.\n       */\n      async clearPlanning() {\n        try {\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/planning/games/reset`\n          );\n          toast.success('Planning des matchs supprimé avec succès !');\n          this.showClearPlanningConfirmation = false;\n          await this.fetchPlanningDetails();\n        } catch (error) {\n          console.error('Erreur lors de la suppression du planning :', error);\n          toast.error('Erreur lors de la suppression du planning.');\n        }\n      },\n\n      /**\n       * Validates the planning.\n       */\n      async validatePlanning() {\n        try {\n          const response = await apiService.post(\n            `/tourneys/${this.tourneyId}/planning/games/validate`\n          );\n\n          const validationResults = response.data.validation;\n\n          // Afficher les erreurs de validation\n          if (validationResults.hasErrors) {\n            const newWarnings = [];\n            if (validationResults.errors.high.length > 0) {\n              // Erreurs graves\n              validationResults.errors.high.forEach((err) => {\n                newWarnings.push({ type: 'grave', message: err });\n              });\n            }\n            if (validationResults.errors.mid.length > 0) {\n              // Erreurs moyennes\n              validationResults.errors.mid.forEach((err) => {\n                newWarnings.push({ type: 'moyenne', message: err });\n              });\n            }\n            if (validationResults.errors.low.length > 0) {\n              // Erreurs faibles\n              validationResults.errors.low.forEach((err) => {\n                newWarnings.push({ type: 'faible', message: err });\n              });\n            }\n            this.warnings = newWarnings;\n            this.showWarningsModal = true;\n          } else {\n            toast.success('Le planning des matchs est valide sans erreurs.');\n            this.warnings = [];\n            this.showWarningsModal = false;\n          }\n        } catch (error) {\n          console.error('Erreur lors de la validation du planning :', error);\n          toast.error('Erreur lors de la validation du planning.');\n        }\n      },\n      /**\n       * Saves the schedule configuration.\n       */\n      async saveScheduleConfig() {\n        try {\n          let successMessage = '';\n          if (this.scheduleConfig.id) {\n            await apiService.put(\n              `/tourneys/${this.tourneyId}/schedule/${this.scheduleConfig.id}`,\n              this.scheduleConfig\n            );\n            successMessage =\n              'Configuration du planning des matchs mise à jour avec succès !';\n          } else {\n            await apiService.post(\n              `/tourneys/${this.tourneyId}/schedule`,\n              this.scheduleConfig\n            );\n            successMessage =\n              'Configuration du planning des matchs enregistrée avec succès !';\n          }\n          this.showScheduleConfigModal = false;\n          await this.fetchPlanningDetails();\n          toast.success(successMessage);\n        } catch (error) {\n          console.error(\n            'Erreur lors de la sauvegarde de la configuration du planning :',\n            error\n          );\n          toast.error(\n            'Erreur lors de la sauvegarde de la configuration du planning.'\n          );\n        }\n      },\n\n      /**\n       * Closes the warnings modal.\n       */\n      closeWarningsModal() {\n        this.showWarningsModal = false;\n        this.warnings = [];\n      },\n\n      /**\n       * Validates the schedule configuration form.\n       * @returns {Object} - Form errors.\n       */\n      validateForm() {\n        let formData;\n        let formType = '';\n\n        /**\n         * Déterminer quel formulaire est actuellement affiché.\n         */\n        if (this.showCreateModal) {\n          formData = this.createFormData;\n          formType = 'create';\n        } else if (this.showEditModal) {\n          formData = this.eventFormData;\n          formType = 'edit';\n        } else if (this.showScheduleConfigModal) {\n          formData = this.scheduleConfig;\n          formType = 'schedule';\n        } else {\n          formData = {};\n        }\n\n        const errors = {};\n\n        if (formType === 'create' || formType === 'edit') {\n          // Validation pour les formulaires de création et de modification des matchs\n          if (!formData.teamAId) {\n            errors.teamAId = \"Veuillez sélectionner l'équipe A.\";\n          }\n          if (!formData.teamBId) {\n            errors.teamBId = \"Veuillez sélectionner l'équipe B.\";\n          }\n          if (\n            formData.teamAId &&\n            formData.teamBId &&\n            formData.teamAId === formData.teamBId\n          ) {\n            errors.teamBId = \"L'équipe B doit être différente de l'équipe A.\";\n          }\n\n          if (!formData.poolScheduleId) {\n            if (!formData.fieldId) {\n              errors.fieldId = 'Veuillez sélectionner un terrain.';\n            }\n            if (!formData.sportId) {\n              errors.sportId = 'Veuillez sélectionner un sport.';\n            }\n          }\n        }\n\n        if (formType === 'schedule') {\n          // Validation pour le formulaire de configuration des horaires\n          const {\n            startTime,\n            endTime,\n            introStart,\n            introEnd,\n            lunchStart,\n            lunchEnd,\n            outroStart,\n            outroEnd,\n          } = formData;\n\n          const timeStringToNumber = (timeStr) => {\n            const [hours, minutes, seconds] = timeStr.split(':').map(Number);\n            return hours * 3600 + minutes * 60 + (seconds || 0);\n          };\n\n          const startTimeNum = timeStringToNumber(startTime);\n          const endTimeNum = timeStringToNumber(endTime);\n\n          if (startTimeNum >= endTimeNum) {\n            errors.startTime =\n              \"L'heure de début doit être inférieure à l'heure de fin.\";\n            errors.endTime =\n              \"L'heure de fin doit être supérieure à l'heure de début.\";\n          }\n\n          const timePairs = [\n            {\n              start: introStart,\n              end: introEnd,\n              label: 'Introduction',\n              startField: 'introStart',\n              endField: 'introEnd',\n            },\n            {\n              start: lunchStart,\n              end: lunchEnd,\n              label: 'Déjeuner',\n              startField: 'lunchStart',\n              endField: 'lunchEnd',\n            },\n            {\n              start: outroStart,\n              end: outroEnd,\n              label: 'Conclusion',\n              startField: 'outroStart',\n              endField: 'outroEnd',\n            },\n          ];\n\n          for (const pair of timePairs) {\n            if (pair.start && pair.end) {\n              const pairStartNum = timeStringToNumber(pair.start);\n              const pairEndNum = timeStringToNumber(pair.end);\n\n              if (pairStartNum >= pairEndNum) {\n                errors[\n                  pair.startField\n                ] = `L'heure de début doit être inférieure à l'heure de fin pour la section ${pair.label}.`;\n                errors[\n                  pair.endField\n                ] = `L'heure de fin doit être supérieure à l'heure de début pour la section ${pair.label}.`;\n              }\n              if (pairStartNum < startTimeNum || pairEndNum > endTimeNum) {\n                errors[\n                  pair.startField\n                ] = `Les heures de ${pair.label} doivent être comprises entre le début (${startTime}) et la fin (${endTime}) du planning global.`;\n                errors[\n                  pair.endField\n                ] = `Les heures de ${pair.label} doivent être comprises entre le début (${startTime}) et la fin (${endTime}) du planning global.`;\n              }\n            } else if ((pair.start && !pair.end) || (!pair.start && pair.end)) {\n              errors[\n                pair.startField\n              ] = `Veuillez fournir à la fois l'heure de début et de fin pour la section ${pair.label}.`;\n              errors[\n                pair.endField\n              ] = `Veuillez fournir à la fois l'heure de début et de fin pour la section ${pair.label}.`;\n            }\n          }\n        }\n\n        return errors;\n      },\n\n      /**\n       * Checks screen size and adjusts terrains per page.\n       */\n      checkScreenSize() {\n        this.isSmallScreen = window.innerWidth < 768;\n        this.terrainsPerPage = this.isSmallScreen ? 2 : 10;\n      },\n\n      /**\n       * Adjusts terrains per page based on screen width.\n       */\n      adjustTerrainsPerPage() {\n        const screenWidth = window.innerWidth;\n\n        if (screenWidth >= 1200) {\n          this.terrainsPerPage = 6;\n        } else if (screenWidth >= 1000) {\n          this.terrainsPerPage = 4;\n        } else if (screenWidth >= 800) {\n          this.terrainsPerPage = 3;\n        } else if (screenWidth >= 600) {\n          this.terrainsPerPage = 2;\n        } else {\n          this.terrainsPerPage = 2;\n        }\n      },\n    },\n\n    async mounted() {\n      this.adjustTerrainsPerPage();\n      window.addEventListener('resize', this.adjustTerrainsPerPage);\n      await this.fetchPlanningDetails();\n    },\n  };\n</script>\n\n<style scoped>\n  .navigation-button {\n    transition: transform 0.2s;\n  }\n\n  .navigation-button:hover {\n    transform: scale(1.2);\n  }\n\n  .fc-timegrid-slot:hover {\n    cursor: crosshair;\n  }\n\n  select {\n    background-color: #f9f9f9;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 0.5rem;\n  }\n  @import '@/assets/fullcalendar.css';\n</style>\n","import { render } from \"./TourneyPlanningGames.vue?vue&type=template&id=5652e828&scoped=true\"\nimport script from \"./TourneyPlanningGames.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyPlanningGames.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyPlanningGames.vue?vue&type=style&index=0&id=5652e828&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5652e828\"]])\n\nexport default __exports__","// router/adminRoutes.js\nimport AdminDashboard from '@/views/admin/dashboard/AdminDashboard.vue';\nimport TourneysList from '@/views/admin/tourneys/TourneysList.vue';\nimport TourneyDetails from '@/views/admin/tourneys/TourneyDetails.vue';\nimport SportsManagement from '@/views/admin/sports/SportsManagement.vue';\nimport AdminUsersList from '@/views/admin/users/AdminUserList.vue';\nimport AdminUserProfile from '@/views/admin/users/AdminUserProfile.vue';\nimport TourneyFieldsManagement from '@/views/admin/tourneys/TourneyFieldsManagement.vue';\nimport TourneySportsFields from '@/views/admin/tourneys/TourneySportsFields.vue';\nimport TourneyTeams from '@/views/admin/tourneys/teams/TourneyTeams.vue';\nimport TourneyUnassignedUsers from '@/views/admin/tourneys/teams/TourneyUnassignedUsers.vue';\nimport TourneyTeamUsers from '@/views/admin/tourneys/teams/TourneyTeamUsers.vue';\nimport TourneyPools from '@/views/admin/tourneys/pools/TourneyPools.vue';\nimport TourneyPoolDetails from '@/views/admin/tourneys/pools/TourneyPoolDetails.vue';\nimport TourneyUnassignedTeams from '@/views/admin/tourneys/pools/TourneyUnassignedTeams.vue';\nimport TourneyPlanningPools from '@/views/admin/tourneys/planning/TourneyPlanningPools.vue';\nimport TourneyPlanningGames from '@/views/admin/tourneys/planning/TourneyPlanningGames.vue';\n\nexport default [\n  {\n    path: '/admin',\n    name: 'Admin',\n    component: AdminDashboard,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys',\n    name: 'AdminTourneysList',\n    component: TourneysList,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId',\n    name: 'AdminTourneyDetails',\n    component: TourneyDetails,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/sports',\n    name: 'AdminSportsManagement',\n    component: SportsManagement,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/users',\n    name: 'AdminUsersList',\n    component: AdminUsersList,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/users/:userId',\n    name: 'AdminUserProfile',\n    component: AdminUserProfile,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/fields',\n    name: 'AdminTourneyFieldsManagement',\n    component: TourneyFieldsManagement,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/sports-fields',\n    name: 'AdminTourneySportsFields',\n    component: TourneySportsFields,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/teams',\n    name: 'AdminTourneyTeams',\n    component: TourneyTeams,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/teams/:teamId/users',\n    name: 'AdminTourneyTeamUsers',\n    component: TourneyTeamUsers,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/unassigned-users',\n    name: 'AdminTourneyUnassignedUsers',\n    component: TourneyUnassignedUsers,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/pools',\n    name: 'AdminTourneyPools',\n    component: TourneyPools,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/pools/:poolId',\n    name: 'AdminTourneyPoolDetails',\n    component: TourneyPoolDetails,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/pools/unassigned-teams',\n    name: 'AdminTourneyPoolsUnassignedTeams',\n    component: TourneyUnassignedTeams,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/planning/pools',\n    name: 'AdminTourneyPlanningPools',\n    component: TourneyPlanningPools,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n  {\n    path: '/admin/tourneys/:tourneyId/planning/games',\n    name: 'AdminTourneyPlanningGames',\n    component: TourneyPlanningGames,\n    meta: { requiresAuth: true, permission: 'viewAdminPage' },\n  },\n];\n","<template>\n  <div>\n    <h1>Bienvenue Utilisateur {{ userName }}</h1>\n    <p>Voici votre tableau de bord.</p>\n  </div>\n</template>\n\n<script>\n  import { mapState } from 'vuex';\n\n  export default {\n    name: 'UserPage',\n    computed: {\n      ...mapState({\n        userName: (state) => state.user?.name, // Récupère le nom de l'utilisateur\n      }),\n    },\n  };\n</script>\n\n<style scoped>\n  /* Style personnalisé pour la page Utilisateur */\n</style>\n","import { render } from \"./UserDashboard.vue?vue&type=template&id=2801b338&scoped=true\"\nimport script from \"./UserDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./UserDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./UserDashboard.vue?vue&type=style&index=0&id=2801b338&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2801b338\"]])\n\nexport default __exports__","<template>\n  <div v-if=\"userId !== null\">\n    <ProfilePageComponent :userId=\"userId\" :isAdmin=\"isAdmin\" />\n  </div>\n  <div v-else>\n    <p>Vous avez été déconnecté.</p>\n  </div>\n</template>\n\n<script>\n  import ProfilePageComponent from '@/components/ProfilePageComponent.vue';\n\n  export default {\n    components: {\n      ProfilePageComponent,\n    },\n    computed: {\n      userId() {\n        return this.$store.state.user ? this.$store.state.user.id : null;\n      },\n      isAdmin() {\n        // Vérifier si l'utilisateur est admin en fonction de son roleId\n        return this.$store.state?.user && this.$store.state.user?.roleId === 1;\n      },\n    },\n    watch: {\n      userId(newVal) {\n        if (newVal === null) {\n          // L'utilisateur est déconnecté, rediriger vers la page de login\n          this.$router.push('/login');\n        }\n      },\n    },\n  };\n</script>\n","import { render } from \"./UserProfile.vue?vue&type=template&id=bdf46064\"\nimport script from \"./UserProfile.vue?vue&type=script&lang=js\"\nexport * from \"./UserProfile.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- src/views/user/UserTourneys.vue -->\n<template>\n  <div class=\"p-6\">\n    <div\n      class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8\"\n    >\n      <!-- Titre de la page -->\n      <TitleComponent title=\"Mes tournois\" />\n\n      <!-- Filtres -->\n      <div class=\"flex flex-wrap items-center gap-4 sm:gap-8 mt-4 sm:mt-0\">\n        <FilterComponent\n          :filters=\"filters\"\n          @filter-change=\"handleFilterChange\"\n        />\n      </div>\n    </div>\n\n    <!-- Grille des tournois -->\n    <div\n      class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\"\n    >\n      <!-- Cartes des tournois existants -->\n      <CardEditComponent\n        v-for=\"tourney in filteredTourneys\"\n        :key=\"tourney.id\"\n        :title=\"tourney.name\"\n        :location=\"tourney.location\"\n        :date=\"tourney.dateTourney\"\n        :status=\"tourney.status\"\n        :registration-status=\"tourney.registrationStatus\"\n        :title-color=\"getTitleColor(tourney)\"\n        @click=\"viewTourneyDetails(tourney)\"\n      >\n        <template #button-actions>\n          <ButtonComponent\n            v-if=\"tourney.status !== 'draft'\"\n            variant=\"primary\"\n            fontAwesomeIcon=\"info-circle\"\n            @click.stop=\"goToInfo(tourney)\"\n          >\n            Infos\n          </ButtonComponent>\n        </template>\n      </CardEditComponent>\n    </div>\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import CardEditComponent from '@/components/CardEditComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import FilterComponent from '@/components/FilterComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      CardEditComponent,\n      TitleComponent,\n      FilterComponent,\n      ButtonComponent,\n    },\n    data() {\n      return {\n        userTourneys: [],\n        filterStatus: '',\n        filterDate: '',\n        filters: [\n          {\n            label: 'Filtrer par statut',\n            value: this.filterStatus || '',\n            placeholder: 'Tous les statuts',\n            options: [\n              { label: 'Tous les statuts', value: '' },\n              { label: 'Brouillon', value: 'draft' },\n              { label: 'Prêt', value: 'ready' },\n              { label: 'En cours', value: 'active' },\n              { label: 'Terminé', value: 'completed' },\n            ],\n          },\n          {\n            label: 'Filtrer par date',\n            value: this.filterDate || '',\n            options: [\n              { label: 'Toutes les dates', value: '' },\n              { label: 'À venir', value: 'upcoming' },\n              { label: 'Passés', value: 'past' },\n            ],\n          },\n        ],\n      };\n    },\n    computed: {\n      filteredTourneys() {\n        return this.userTourneys.filter((tourney) => {\n          const statusMatches = this.filterStatus\n            ? tourney.status === this.filterStatus\n            : true;\n          const dateMatches =\n            this.filterDate === 'upcoming'\n              ? new Date(tourney.dateTourney) >= new Date()\n              : this.filterDate === 'past'\n              ? new Date(tourney.dateTourney) < new Date()\n              : true;\n          return statusMatches && dateMatches;\n        });\n      },\n    },\n    methods: {\n      async fetchUserTourneys() {\n        const userId = this.$store.state.user.id;\n        try {\n          let response;\n          if (this.isAdmin()) {\n            // S'il est admin global, récupérer tous les tournois\n            response = await apiService.get('/tourneys');\n          } else {\n            // Sinon, récupérer uniquement les tournois de l'utilisateur\n            response = await apiService.get(`/users/${userId}/tourneys`);\n          }\n          this.userTourneys = response.data;\n\n          // Sauvegarder les tournois dans le localStorage\n          localStorage.setItem(\n            'userTourneys',\n            JSON.stringify(this.userTourneys)\n          );\n        } catch (error) {\n          console.error('Erreur lors de la récupération des tournois:', error);\n          toast.error('Erreur lors de la récupération des tournois!');\n\n          // Charger les données du localStorage en mode hors ligne\n          if (!navigator.onLine) {\n            const storedTourneys = localStorage.getItem('userTourneys');\n            if (storedTourneys) {\n              this.userTourneys = JSON.parse(storedTourneys);\n            } else {\n              console.warn('Aucun tournoi trouvé en cache local.');\n            }\n          }\n        }\n      },\n      isAdmin() {\n        return this.$store.state.user?.roleId === 1;\n      },\n      handleFilterChange(filter) {\n        // Mettre à jour les filtres sélectionnés\n        if (filter.label === 'Filtrer par statut') {\n          this.filterStatus = filter.value;\n        } else if (filter.label === 'Filtrer par date') {\n          this.filterDate = filter.value;\n        }\n      },\n      getTitleColor(tourney) {\n        if (tourney.status === 'active') {\n          return '#48bb78'; // Vert pour 'active'\n        } else if (tourney.status === 'completed') {\n          return '#a0aec0'; // Gris pour 'completed'\n        } else {\n          if (tourney.registrationStatus === 'active') {\n            return '#ed8936'; // Orange pour inscriptions ouvertes\n          } else if (\n            tourney.registrationStatus === 'notStarted' ||\n            tourney.registrationStatus === 'completed'\n          ) {\n            return '#f56565'; // Rouge pour inscriptions fermées\n          } else {\n            return '#4299e1'; // Bleu par défaut\n          }\n        }\n      },\n      goToInfo(tourney) {\n        this.$router.push(`/tourneys/${tourney.id}/infos`);\n      },\n\n      viewTourneyDetails(tourney) {\n        if (!this.isCardClickable(tourney)) {\n          return; // Ne pas rediriger si la carte n'est pas cliquable\n        }\n\n        // Priorité sur le statut du tournoi\n        if (\n          tourney.status === 'active' ||\n          tourney.status === 'completed' ||\n          this.isAdmin()\n        ) {\n          // Rediriger vers 'planning'\n          this.$router.push(`/tourneys/${tourney.id}/planning`);\n        } else if (\n          tourney.registrationStatus === 'active' ||\n          tourney.registrationStatus === 'completed'\n        ) {\n          // Rediriger vers 'join-team'\n          this.$router.push(`/tourneys/${tourney.id}/join-team`);\n        } else {\n          return; // Ne pas rediriger si le statut est inconnu\n        }\n      },\n      isCardClickable(tourney) {\n        if (this.isAdmin()) {\n          return true; // Toujours cliquable pour un administrateur\n        }\n        // Si les inscriptions sont fermées et le tournoi n'est ni actif ni terminé\n        if (\n          (tourney.registrationStatus === 'draft' ||\n            tourney.registrationStatus === 'notStarted') &&\n          tourney.status !== 'active' &&\n          tourney.status !== 'completed'\n        ) {\n          return false; // Ne pas permettre le clic\n        }\n        return true; // Permettre le clic\n      },\n    },\n    mounted() {\n      this.fetchUserTourneys();\n    },\n  };\n</script>\n\n<style scoped>\n  /* Ajouter des styles personnalisés si nécessaire */\n</style>\n","import { render } from \"./UserTourneys.vue?vue&type=template&id=08faebea&scoped=true\"\nimport script from \"./UserTourneys.vue?vue&type=script&lang=js\"\nexport * from \"./UserTourneys.vue?vue&type=script&lang=js\"\n\nimport \"./UserTourneys.vue?vue&type=style&index=0&id=08faebea&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-08faebea\"]])\n\nexport default __exports__","<!-- src/views/user/TourneyJoinTeam.vue -->\n<template>\n  <div>\n    <div class=\"p-6\">\n      <!-- Titre de la page et statut des inscriptions -->\n      <div class=\"flex items-center mb-2 justify-between\">\n        <TitleComponent title=\"Equipes du tournoi\"></TitleComponent>\n        <!-- Section \"Quitter le Tournoi\" -->\n        <div v-if=\"isRegistrationActive\">\n          <ButtonComponent variant=\"danger\" @click=\"confirmQuitTournament\">\n            Quitter Tournoi\n          </ButtonComponent>\n        </div>\n      </div>\n      <div class=\"p-2\">\n        <p v-if=\"isRegistrationActive\" class=\"text-green-600\">\n          Les inscriptions sont ouvertes. Vous pouvez rejoindre ou quitter un\n          groupe.\n        </p>\n        <p v-else-if=\"isRegistrationClosed\" class=\"text-yellow-600\">\n          Les inscriptions sont fermées. Vous ne pouvez pas rejoindre ou quitter\n          un groupe.\n        </p>\n        <p v-else-if=\"isRegistrationCompleted\" class=\"text-red-600\">\n          Les inscriptions sont terminées. Vous ne pouvez pas rejoindre ou\n          quitter un groupe.\n        </p>\n      </div>\n\n      <!-- Section de votre équipe -->\n      <div v-if=\"userTeam\" class=\"mb-8\">\n        <h2 class=\"text-2xl font-semibold mb-4\">Votre équipe</h2>\n        <div\n          class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n        >\n          <CardEditComponent\n            :title=\"userTeam.teamName || 'Nom manquant'\"\n            :cornerCount=\"`${\n              userTeam.usersTourneys ? userTeam.usersTourneys.length : 0\n            }/${getTeamCapacity(userTeam)}`\"\n            :titleColor=\"getStatusColor(userTeam)\"\n            @click=\"openTeamDetails(userTeam)\"\n          >\n            <template #button-actions>\n              <ButtonComponent\n                v-if=\"isRegistrationActive\"\n                @click.stop=\"confirmLeaveTeam\"\n                variant=\"danger\"\n              >\n                Quitter\n              </ButtonComponent>\n            </template>\n            <template #user-list>\n              <ul class=\"grid grid-cols-2 gap-2 mt-2\">\n                <li\n                  v-for=\"userTourney in userTeam.usersTourneys || []\"\n                  :key=\"userTourney.userId\"\n                  class=\"flex items-center text-sm text-light-form-text dark:text-dark-form-text truncate\"\n                >\n                  <font-awesome-icon icon=\"user\" class=\"mr-2 text-gray-500\" />\n                  <span class=\"truncate\">{{ userTourney.user.name }}</span>\n                </li>\n              </ul>\n            </template>\n          </CardEditComponent>\n\n          <!-- Confirmation de suppression -->\n          <DeleteConfirmationModal\n            :title=\"'Quitter le groupe'\"\n            :message=\"'Êtes-vous sûr de vouloir quitter le groupe ?'\"\n            :isVisible=\"showDeleteConfirmation\"\n            :textButton=\"'Quitter'\"\n            @form-cancel=\"closeDeleteConfirmation\"\n            @confirm=\"leaveTeam\"\n          />\n        </div>\n      </div>\n\n      <!-- Section des autres équipes -->\n      <h2 class=\"text-2xl font-semibold mt-8 mb-4\">Toutes les équipes</h2>\n      <!-- Options de recherche et filtres -->\n      <div class=\"mb-4 flex items-center space-x-4\">\n        <input\n          v-model=\"searchQuery\"\n          type=\"text\"\n          placeholder=\"Rechercher un groupe ou un utilisateur\"\n          class=\"border p-2 rounded w-full md:w-1/3 dark:bg-dark-menu\"\n        />\n        <select\n          v-model=\"selectedFilter\"\n          class=\"border p-2 rounded dark:bg-dark-menu\"\n        >\n          <option value=\"\">Tous les groupes</option>\n          <option value=\"non-full\">Groupes partiels</option>\n          <option value=\"full\">Groupes pleins</option>\n          <option value=\"empty\">Groupes vides</option>\n        </select>\n      </div>\n\n      <!-- Liste des autres équipes -->\n      <div\n        class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n      >\n        <CardEditComponent\n          v-for=\"team in filteredTeams\"\n          :key=\"team.id\"\n          :title=\"team.teamName || 'Nom manquant'\"\n          :cornerCount=\"`${team.usersTourneys.length}/${getTeamCapacity(team)}`\"\n          :titleColor=\"getStatusColor(team)\"\n          :isEditable=\"isRegistrationActive\"\n          @click=\"openTeamDetails(team)\"\n        >\n          <template #button-actions>\n            <ButtonComponent\n              v-if=\"!userTeam && isRegistrationActive\"\n              :disabled=\"team.usersTourneys.length >= getTeamCapacity(team)\"\n              @click.stop=\"joinTeam(team.id)\"\n              variant=\"primary\"\n            >\n              Rejoindre\n            </ButtonComponent>\n          </template>\n          <template #user-list>\n            <ul class=\"grid grid-cols-2 gap-2 mt-2\">\n              <li\n                v-for=\"userTourney in team.usersTourneys\"\n                :key=\"userTourney.userId\"\n                class=\"flex items-center text-sm text-light-form-text dark:text-dark-form-text truncate\"\n              >\n                <font-awesome-icon icon=\"user\" class=\"mr-2 text-gray-500\" />\n                <span class=\"truncate\">{{ userTourney.user.name }}</span>\n              </li>\n            </ul>\n          </template>\n        </CardEditComponent>\n      </div>\n\n      <!-- Message si les inscriptions sont fermées ou terminées et que l'utilisateur n'est pas dans une équipe -->\n      <div v-if=\"!userTeam && !isRegistrationActive\" class=\"mt-4\">\n        <p>\n          Les inscriptions sont fermées ou terminées. Vous ne pouvez pas\n          rejoindre un groupe.\n        </p>\n      </div>\n\n      <!-- Confirmation de suppression pour quitter le tournoi -->\n      <DeleteConfirmationModal\n        :title=\"'Quitter le Tournoi'\"\n        :message=\"'Quitter le tournoi vous supprimera de votre équipe. Avertissez vos coéquipiers afin que leur équipe reste valide.'\"\n        :hardDeleteMessage=\"'Cette action est définitive. Vous pourrez rejoindre le tournoi à nouveau avec un token d\\'invitation tant que les inscriptions sont ouvertes.'\"\n        :isVisible=\"showQuitConfirmation\"\n        :isHardDelete=\"true\"\n        :textButton=\"'Quitter'\"\n        @form-cancel=\"closeQuitConfirmation\"\n        @confirm=\"leaveTournament\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapActions } from 'vuex';\n  import apiService from '@/services/apiService';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import CardEditComponent from '@/components/CardEditComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import { toast } from 'vue3-toastify';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n\n  export default {\n    components: {\n      TitleComponent,\n      CardEditComponent,\n      ButtonComponent,\n      DeleteConfirmationModal,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        teams: [],\n        userTeam: null,\n        teamSetup: null,\n        registrationStatus: null,\n        searchQuery: '', // Variable pour la recherche\n        selectedFilter: '', // Variable pour le filtre\n        showDeleteConfirmation: false,\n        hardDeleteMessage:\n          'Êtes-vous sûr de vouloir quitter le tournoi ? Cette action est irréversible. Vous pourrez le rejoindre à nouveau avec un token invit tant que les inscriptions sont ouvertes.',\n        showQuitConfirmation: false,\n      };\n    },\n    computed: {\n      isRegistrationActive() {\n        return this.registrationStatus === 'active';\n      },\n      isRegistrationClosed() {\n        return this.registrationStatus === 'draft';\n      },\n      isRegistrationCompleted() {\n        return this.registrationStatus === 'completed';\n      },\n      currentUserId() {\n        return this.$store.state.user ? this.$store.state.user.id : null;\n      },\n      otherTeams() {\n        if (this.userTeam) {\n          return this.teams.filter((team) => team.id !== this.userTeam.id);\n        }\n        return this.teams;\n      },\n      filteredTeams() {\n        let teams = this.otherTeams;\n\n        // Appliquer les filtres\n        if (this.selectedFilter === 'non-full') {\n          teams = teams.filter(\n            (team) =>\n              team.usersTourneys.length < this.getTeamCapacity(team) &&\n              team.usersTourneys.length > 0 &&\n              team.type === 'player'\n          );\n        } else if (this.selectedFilter === 'full') {\n          teams = teams.filter(\n            (team) =>\n              team.usersTourneys.length >= this.getTeamCapacity(team) &&\n              team.type === 'player'\n          );\n        } else if (this.selectedFilter === 'empty') {\n          teams = teams.filter(\n            (team) => team.usersTourneys.length === 0 && team.type === 'player'\n          );\n        }\n\n        // Filtrer par recherche\n        if (this.searchQuery) {\n          const query = this.searchQuery.toLowerCase();\n          teams = teams.filter((team) => {\n            const teamNameMatch = team.teamName\n              ? team.teamName.toLowerCase().includes(query)\n              : false;\n            const userNameMatch = team.usersTourneys.some((userTourney) =>\n              userTourney.user.name.toLowerCase().includes(query)\n            );\n            return teamNameMatch || userNameMatch;\n          });\n        }\n\n        return teams;\n      },\n    },\n    methods: {\n      ...mapActions('tourney', ['fetchTourneyStatuses']),\n      async fetchData() {\n        try {\n          // Récupérer les statuts du tournoi\n          await this.fetchTourneyStatuses(this.tourneyId);\n\n          // Récupérer les détails des équipes et des utilisateurs du tournoi\n          const teamsResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}/teams-details`\n          );\n\n          // Décomposer la réponse pour extraire les informations nécessaires\n          this.teamSetup = teamsResponse.data.teamSetup;\n          this.teams = teamsResponse.data.teams;\n          this.unassignedUsers = teamsResponse.data.unassignedUsers;\n\n          // Vérifier si l'utilisateur actuel est déjà dans une équipe\n          const userId = this.currentUserId;\n\n          // Récupérer les membres de l'équipe de l'utilisateur\n          const userTourney = teamsResponse.data.allUsers.find(\n            (userTourney) => userTourney.userId === userId && userTourney.team\n          );\n\n          if (userTourney) {\n            this.userTeam = this.teams.find(\n              (team) => team.id === userTourney.teamId\n            );\n          } else {\n            this.userTeam = null;\n          }\n\n          // Mettre à jour le statut d'inscription à partir de la méthode séparée\n          await this.fetchRegistrationStatus();\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données:', error);\n          toast.error('Erreur lors de la récupération des données.');\n        }\n      },\n      async fetchRegistrationStatus() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/registration-status`\n          );\n          this.registrationStatus = response.data.registrationStatus;\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la récupération du statut d'inscription:\",\n            error\n          );\n          toast.error(\n            \"Erreur lors de la récupération du statut d'inscription.\"\n          );\n        }\n      },\n      getTeamCapacity(team) {\n        if (team.type === 'assistant') {\n          // Capacité spécifique pour les équipes d'assistants si nécessaire\n          return (\n            this.teamSetup.playerPerTeam * this.teamSetup.maxTeamNumber ||\n            'Infinity'\n          );\n        }\n        return this.teamSetup ? this.teamSetup.playerPerTeam : 0;\n      },\n      getStatusColor(team) {\n        // Vérifier si usersTourneys est défini avant d'accéder à sa propriété length\n        const teamSize = team.usersTourneys ? team.usersTourneys.length : 0;\n\n        const minPlayers = this.teamSetup ? this.teamSetup.minPlayerPerTeam : 0;\n        const maxPlayers = this.getTeamCapacity(team);\n\n        if (teamSize >= maxPlayers) {\n          return 'red'; // Équipe pleine\n        } else if (teamSize >= minPlayers) {\n          return 'green'; // Équipe valide\n        } else if (teamSize > 0) {\n          return 'orange'; // Équipe partiellement remplie\n        } else {\n          return 'gray'; // Équipe vide\n        }\n      },\n      async joinTeam(teamId) {\n        this.showDeleteConfirmation = false;\n        try {\n          if (this.userTeam) {\n            toast.error(\n              'Vous êtes déjà dans un groupe. Veuillez quitter votre groupe avant de rejoindre un autre.'\n            );\n            return;\n          }\n          const userId = this.currentUserId;\n          await apiService.post(\n            `/tourneys/${this.tourneyId}/teams/${teamId}/users`,\n            {\n              userId,\n            }\n          );\n          toast.success('Vous avez rejoint le groupe avec succès.');\n          // Rafraîchir les données\n          this.fetchData();\n        } catch (error) {\n          console.error(\n            'Erreur lors de la tentative de rejoindre le groupe:',\n            error\n          );\n          if (\n            error.response &&\n            error.response.data &&\n            error.response.data.message\n          ) {\n            toast.error(error.response.data.message);\n          } else {\n            toast.error('Erreur lors de la tentative de rejoindre le groupe.');\n          }\n        }\n      },\n      confirmLeaveTeam() {\n        this.showDeleteConfirmation = true;\n      },\n      closeDeleteConfirmation() {\n        this.showDeleteConfirmation = false;\n      },\n      async leaveTeam() {\n        try {\n          if (!this.userTeam) {\n            toast.error(\"Vous n'êtes pas dans un groupe.\");\n            return;\n          }\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/teams/${this.userTeam.id}/users/${this.currentUserId}`\n          );\n          toast.success('Vous avez quitté le groupe avec succès.');\n          // Rafraîchir les données\n          this.fetchData();\n        } catch (error) {\n          console.error(\n            'Erreur lors de la tentative de quitter le groupe:',\n            error\n          );\n          toast.error('Erreur lors de la tentative de quitter le groupe.');\n        }\n      },\n      openTeamDetails(team) {\n        // Naviguer vers la page de détails de l'équipe\n        this.$router.push(\n          `/tourneys/${this.tourneyId}/teams/${team.id}/details`\n        );\n      },\n      // Méthodes pour quitter le tournoi\n      confirmQuitTournament() {\n        this.showQuitConfirmation = true;\n      },\n      closeQuitConfirmation() {\n        this.showQuitConfirmation = false;\n      },\n      async leaveTournament() {\n        try {\n          await apiService.delete(\n            `/tourneys/${this.tourneyId}/users/${this.currentUserId}`\n          );\n\n          // Rediriger l'utilisateur vers une autre page, par exemple la liste des tournois\n          this.$router.push('/tourneys');\n        } catch (error) {\n          console.error(\n            'Erreur lors de la tentative de quitter le tournoi:',\n            error\n          );\n          if (\n            error.response &&\n            error.response.data &&\n            error.response.data.message\n          ) {\n            toast.error(error.response.data.message);\n          } else {\n            toast.error('Erreur lors de la tentative de quitter le tournoi.');\n          }\n        } finally {\n          this.closeQuitConfirmation();\n        }\n      },\n    },\n    mounted() {\n      this.fetchData();\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles personnalisés */\n</style>\n","import { render } from \"./TourneyJoinTeam.vue?vue&type=template&id=0473a5b8&scoped=true\"\nimport script from \"./TourneyJoinTeam.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyJoinTeam.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyJoinTeam.vue?vue&type=style&index=0&id=0473a5b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0473a5b8\"]])\n\nexport default __exports__","<!-- src/views/user/TourneyTeamDetails.vue -->\n<template>\n  <div class=\"p-6\">\n    <div v-if=\"team\">\n      <TitleComponent :title=\"team.teamName\" />\n\n      <div class=\"mt-4\">\n        <h2 class=\"text-xl font-semibold\">Membres de l'équipe :</h2>\n        <ul class=\"mt-2\">\n          <li\n            v-for=\"userTourney in team.usersTourneys\"\n            :key=\"userTourney.userId\"\n            class=\"flex items-center justify-between p-2 border-b\"\n          >\n            <div>\n              <p class=\"font-medium\">{{ userTourney.user.name }}</p>\n              <p class=\"text-sm\">{{ userTourney.user.email }}</p>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <ButtonComponent @click=\"goBack\" variant=\"secondary\" class=\"mt-4\">\n        Retour\n      </ButtonComponent>\n    </div>\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      TitleComponent,\n      ButtonComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        teamId: this.$route.params.teamId,\n        team: null,\n      };\n    },\n    methods: {\n      async fetchTeamDetails() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/teams/${this.teamId}`\n          );\n          this.team = response.data;\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la récupération des détails de l'équipe:\",\n            error\n          );\n          toast.error(\n            \"Erreur lors de la récupération des détails de l'équipe.\"\n          );\n        }\n      },\n      goBack() {\n        this.$router.go(-1);\n      },\n    },\n    mounted() {\n      this.fetchTeamDetails();\n    },\n  };\n</script>\n\n<style scoped>\n  /* Styles personnalisés */\n</style>\n","import { render } from \"./TourneyTeamDetails.vue?vue&type=template&id=3d6a7e5d&scoped=true\"\nimport script from \"./TourneyTeamDetails.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyTeamDetails.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyTeamDetails.vue?vue&type=style&index=0&id=3d6a7e5d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3d6a7e5d\"]])\n\nexport default __exports__","<!-- src/views/user/tourneys/TourneyPlanning.vue -->\n<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <SubMenuComponent :tourneyId=\"tourneyId\" />\n\n    <!-- Titre principal -->\n    <h1 v-if=\"!isAdmin\" class=\"text-2xl font-bold my-4 px-4\">\n      {{ tourney.name }}\n      <span v-if=\"userRoleInTourney === 'player'\">\n        - {{ userTeam?.teamName }} - {{ userPool?.name }}\n      </span>\n      <span v-if=\"userRoleInTourney === 'assistant'\">\n        - Arbitrage des matchs\n      </span>\n      <span v-if=\"userRoleInTourney === 'guest'\">\n        (Vous êtes invité - accès en lecture seule)\n      </span>\n    </h1>\n\n    <!-- Filtres et options d'affichage -->\n    <div class=\"flex flex-wrap items-center gap-4 my-2 px-4\">\n      <!-- Filtre des Pools -->\n      <v-select\n        :options=\"poolOptions\"\n        v-model=\"selectedPoolId\"\n        placeholder=\"All Pools\"\n        :clearable=\"true\"\n        :searchable=\"true\"\n        label=\"name\"\n        :reduce=\"(pool) => pool.id\"\n        class=\"w-40 flex-shrink-0\"\n        style=\"min-width: 150px\"\n      />\n\n      <!-- Filtre des Terrains -->\n      <v-select\n        :options=\"fieldOptions\"\n        v-model=\"selectedFieldId\"\n        placeholder=\"All Terrains\"\n        :clearable=\"true\"\n        :searchable=\"true\"\n        label=\"name\"\n        :reduce=\"(field) => field.id\"\n        class=\"w-40 flex-shrink-0\"\n        style=\"min-width: 150px\"\n      />\n\n      <!-- Filtre des Game IDs -->\n      <v-select\n        :options=\"gameOptions\"\n        v-model=\"selectedGameId\"\n        placeholder=\"All Games\"\n        :clearable=\"true\"\n        :searchable=\"true\"\n        label=\"name\"\n        :reduce=\"(game) => game.id\"\n        class=\"w-40 flex-shrink-0\"\n        style=\"min-width: 150px\"\n      />\n\n      <!-- Bascule des couleurs -->\n      <label class=\"flex items-center cursor-pointer flex-shrink-0\">\n        <div class=\"relative\">\n          <input type=\"checkbox\" v-model=\"useUnifiedColors\" class=\"sr-only\" />\n          <div\n            class=\"block w-14 h-8 rounded-full transition-colors duration-300\"\n            :class=\"{\n              'bg-light-menuActive dark:bg-dark-menuActive': useUnifiedColors,\n              'bg-light-pool-infoText dark:bg-dark-pool-infoText':\n                !useUnifiedColors,\n            }\"\n          ></div>\n          <div\n            class=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-transform duration-300\"\n            :class=\"{ 'translate-x-full': useUnifiedColors }\"\n          ></div>\n        </div>\n        <span\n          class=\"ml-2 hidden md:block text-light-form-text dark:text-dark-form-text\"\n        >\n          {{ useUnifiedColors ? 'Couleur par Poule' : 'Couleur par Sport' }}\n        </span>\n      </label>\n\n      <!-- Bouton pour basculer entre l'affichage des matchs et des pools -->\n      <ButtonComponent\n        @click=\"toggleDisplayMode\"\n        variant=\"'secondary'\"\n        :fontAwesomeIcon=\"displayMode === 'games' ? 'th' : 'futbol'\"\n      >\n        Show {{ displayMode === 'games' ? 'Pools' : 'Matchs' }}\n      </ButtonComponent>\n\n      <!-- Pagination et Bouton Show All Fields -->\n      <div class=\"flex flex-wrap w-full items-center gap-2 sm:gap-4\">\n        <!-- Contrôles de Pagination -->\n        <div\n          v-if=\"!showAllTerrains && totalPages > 1\"\n          class=\"flex items-center gap-2\"\n        >\n          <button\n            v-if=\"currentPage > 1\"\n            @click=\"currentPage--\"\n            class=\"text-2xl px-2 py-1 rounded navigation-button\"\n          >\n            &lt;\n          </button>\n          <select\n            v-model=\"currentPage\"\n            class=\"bg-light-form-background dark:bg-dark-form-background text-light-form-text dark:text-dark-form-text border border-light-form-border-default dark:border-dark-form-border-default rounded-md px-2 py-1\"\n          >\n            <option v-for=\"page in totalPages\" :key=\"page\" :value=\"page\">\n              Page {{ page }} / {{ totalPages }}\n            </option>\n          </select>\n          <button\n            v-if=\"currentPage < totalPages\"\n            @click=\"currentPage++\"\n            class=\"text-2xl px-2 py-1 rounded navigation-button\"\n          >\n            &gt;\n          </button>\n        </div>\n\n        <!-- Bouton Show All Fields -->\n        <div class=\"ml-auto\">\n          <button\n            v-if=\"fields.length > terrainsPerPage\"\n            @click=\"toggleShowAllTerrains\"\n            class=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          >\n            {{ showAllTerrains ? 'Reduce' : 'All Fields' }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Affichage si les données sont chargées -->\n    <div v-if=\"fields.length && pools.length && games.length\">\n      <!-- Affichage des prochains matchs de l'utilisateur (uniquement si player ou assistant) -->\n      <CollapsibleBox\n        v-if=\"\n          userRoleInTourney !== 'admin' &&\n          userRoleInTourney !== 'guest' &&\n          userNextGames.length\n        \"\n        title=\"Mes prochains matchs :\"\n      >\n        <ul class=\"list-disc pl-5\">\n          <li v-for=\"game in userNextGames\" :key=\"game.id\">\n            <span class=\"font-semibold\">\n              {{ formatDateTimeDisplay(game.startTime) }} :\n            </span>\n            Team: {{ game.teamANumber }} vs {{ game.teamBNumber }} sur le\n            terrain\n            {{ game.field.name }}\n          </li>\n        </ul>\n      </CollapsibleBox>\n\n      <!-- Calendrier avec les Terrains comme ressources -->\n      <div v-if=\"tourney.dateTourney && paginatedFilteredFields.length\">\n        <FullCalendar\n          ref=\"fullCalendar\"\n          :options=\"calendarOptions\"\n          :key=\"calendarKey\"\n        />\n      </div>\n    </div>\n    <div v-else>\n      <p>\n        Aucune donnée hors ligne. Veuillez accéder à cette page une première\n        fois en ligne.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState, mapActions } from 'vuex';\n  import FullCalendar from '@fullcalendar/vue3';\n  import timeGridPlugin from '@fullcalendar/timegrid';\n  import interactionPlugin from '@fullcalendar/interaction';\n  import resourceTimeGridPlugin from '@fullcalendar/resource-timegrid';\n  import apiService from '@/services/apiService';\n  import SubMenuComponent from '@/components/user/SubMenuComponent.vue';\n  import vSelect from 'vue-select';\n  import 'vue-select/dist/vue-select.css';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import CollapsibleBox from '@/components/user/CollapsibleBox.vue';\n  import { extractTeamNumber } from '@/utils/format.js';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      FullCalendar,\n      SubMenuComponent,\n      vSelect,\n      ButtonComponent,\n      CollapsibleBox,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        tourney: {},\n        fields: [],\n        teams: [],\n        games: [],\n        pools: [],\n        sports: [],\n        userNextGames: [],\n        scheduleConfig: {},\n        useUnifiedColors: true,\n        colorMap: {},\n        displayMode: 'games', // 'games' ou 'pools'\n        currentPage: 1, // Page actuelle de pagination des terrains\n        terrainsPerPage: 10, // Nombre de terrains visibles par page\n        showAllTerrains: false, // Permet d'afficher tous les terrains\n        assistantMessage: '',\n        userTeam: null,\n        userPool: null,\n        calendarKey: 0, // Clé pour forcer le re-render de FullCalendar\n      };\n    },\n    computed: {\n      ...mapState('tourney', {\n        statuses: (state) => state.statuses,\n        tourneyType: (state) => state.tourneyType,\n      }),\n\n      // Mapping des propriétés de Vuex avec getters et setters\n      ...mapState('userTourney', {\n        _selectedPoolId: (state) => state.selectedPoolId,\n        _selectedFieldId: (state) => state.selectedFieldId,\n        _selectedGameId: (state) => state.selectedGameId,\n      }),\n\n      // Propriétés calculées avec getters et setters\n      selectedPoolId: {\n        get() {\n          return this._selectedPoolId;\n        },\n        set(value) {\n          this.setSelectedPool(value === null ? null : parseInt(value, 10));\n        },\n      },\n      selectedFieldId: {\n        get() {\n          return this._selectedFieldId;\n        },\n        set(value) {\n          this.setSelectedField(value === null ? null : parseInt(value, 10));\n        },\n      },\n      selectedGameId: {\n        get() {\n          return this._selectedGameId;\n        },\n        set(value) {\n          this.setSelectedGame(value === null ? null : parseInt(value, 10));\n        },\n      },\n\n      /**\n       * Détermine le rôle global de l'utilisateur (admin global ou non).\n       * @returns {boolean} true si admin global, sinon false.\n       */\n      isAdmin() {\n        return this.$store.state?.user && this.$store.state.user?.roleId === 1;\n      },\n      generateUniqueColor() {\n        return (id) => {\n          if (!id) return '#888888';\n          if (this.colorMap[id]) {\n            return this.colorMap[id];\n          }\n          const hue = (id * 137.508) % 360;\n          const color = `hsl(${hue}, 70%, 60%)`;\n          this.colorMap[id] = color;\n          return color;\n        };\n      },\n\n      /**\n       * Retourne une liste contenant \"All Pools\" + pools du tournoi.\n       * @returns {Array} Liste des pools avec option \"All Pools\".\n       */\n      poolOptions() {\n        return [{ id: null, name: 'All Pools' }, ...this.pools];\n      },\n\n      /**\n       * Retourne une liste contenant \"All Terrains\" + terrains du tournoi.\n       * @returns {Array} Liste des terrains avec option \"All Terrains\".\n       */\n      fieldOptions() {\n        return [{ id: null, name: 'All Terrains' }, ...this.fields];\n      },\n\n      /**\n       * Retourne une liste contenant \"All Games\" + games du tournoi.\n       * @returns {Array} Liste des games avec option \"All Games\".\n       */\n      gameOptions() {\n        return [\n          { id: null, name: 'All Games' },\n          ...this.games.map((game) => ({\n            id: game.id,\n            name: `Game ${game.id} - ${game.teamA?.teamName} vs ${game.teamB?.teamName}`,\n          })),\n        ];\n      },\n\n      /**\n       * Filtre les jeux en fonction des filtres sélectionnés.\n       * @returns {Array} Liste filtrée des jeux.\n       */\n      filteredGames() {\n        return this.games.filter((game) => {\n          if (this.selectedPoolId && game.pool?.id !== this.selectedPoolId) {\n            return false;\n          }\n          if (this.selectedFieldId && game.field?.id !== this.selectedFieldId) {\n            return false;\n          }\n          if (this.selectedGameId && game.id !== this.selectedGameId) {\n            return false;\n          }\n          return true;\n        });\n      },\n\n      /**\n       * Filtre les terrains à afficher en fonction des événements filtrés.\n       * @returns {Array} Liste des terrains avec au moins un événement filtré.\n       */\n      filteredFields() {\n        const fieldIdsWithEvents = new Set();\n\n        // Ajoute les terrains des jeux filtrés\n        this.filteredGames.forEach((game) => {\n          if (game.field && game.field.id) {\n            fieldIdsWithEvents.add(game.field.id);\n          }\n        });\n\n        // Ajoute les terrains des poolSchedules filtrés\n        this.pools.forEach((pool) => {\n          if (this.selectedPoolId && pool.id !== this.selectedPoolId) {\n            return;\n          }\n          pool.schedules.forEach((schedule) => {\n            if (\n              this.selectedFieldId &&\n              schedule.fieldId !== this.selectedFieldId\n            ) {\n              return;\n            }\n            fieldIdsWithEvents.add(schedule.fieldId);\n          });\n        });\n\n        if (this.showAllTerrains) {\n          // Si tous les terrains sont affichés, retourner tous les terrains\n          return this.fields;\n        }\n\n        return this.fields.filter((field) => fieldIdsWithEvents.has(field.id));\n      },\n\n      /**\n       * Retourne la liste des terrains filtrés à afficher selon la pagination.\n       * @returns {Array} Liste paginée de terrains filtrés.\n       */\n      paginatedFilteredFields() {\n        if (this.showAllTerrains) {\n          return this.sortedFields; // Retourne tous les terrains sans découpage\n        }\n        const filteredFields = this.filteredFields;\n        return filteredFields.slice(\n          (this.currentPage - 1) * this.terrainsPerPage,\n          this.currentPage * this.terrainsPerPage\n        );\n      },\n\n      /**\n       * Calcule le nombre total de pages pour l'affichage des terrains.\n       * @returns {number} Nombre de pages.\n       */\n      totalPages() {\n        if (this.showAllTerrains) {\n          return 1; // Une seule page lorsqu'on affiche tous les terrains\n        }\n        return Math.ceil(this.filteredFields.length / this.terrainsPerPage);\n      },\n\n      /**\n       * Liste des terrains paginés après filtrage.\n       * @returns {Array} Liste paginée de terrains filtrés.\n       */\n      paginatedFields() {\n        return this.paginatedFilteredFields;\n      },\n\n      /**\n       * Détermine le rôle de l'utilisateur dans ce tournoi.\n       * Les rôles possibles sont :\n       * - admin : si roleId === 1\n       * - assistant : si l'utilisateur a le rôle assistant sur ce tournoi (via store)\n       * - player : si l'utilisateur a une userTeam de type 'player'\n       * - guest : sinon\n       *\n       * @returns {string} 'admin', 'assistant', 'player' ou 'guest'\n       */\n      userRoleInTourney() {\n        const isAdmin = this.isAdmin;\n        const isAssistant = this.$store.getters['userTourney/isAssistant'];\n        // Si userTeam existe et de type player -> player\n        // Sinon guest\n        if (isAdmin) return 'admin';\n        if (isAssistant) return 'assistant';\n        if (this.userTeam && this.userTeam.type === 'player') return 'player';\n        return 'guest';\n      },\n\n      /**\n       * Options du calendrier FullCalendar en fonction du displayMode.\n       * @returns {Object} Options pour FullCalendar.\n       */\n      calendarOptions() {\n        if (!this.tourney.dateTourney) {\n          console.error('La date du tournoi n’est pas disponible');\n          return {};\n        }\n\n        const events = [];\n\n        // Afficher les pauses (intro, déjeuner, conclusion)\n        this.addBreakTimes(events);\n\n        // Selon le mode d'affichage, on ajoute soit les matchs, soit les poolSchedules\n        if (this.displayMode === 'games') {\n          this.addGamesToEvents(events);\n        } else {\n          this.addPoolSchedulesToEvents(events);\n        }\n\n        // Ajouter les transitions entre les pools\n        this.addPoolTransitions(events);\n\n        return {\n          plugins: [timeGridPlugin, interactionPlugin, resourceTimeGridPlugin],\n          schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',\n          initialView: 'resourceTimeGridDay',\n          timeZone: 'local',\n          initialDate: this.tourney.dateTourney,\n          editable: false,\n          droppable: false,\n          eventStartEditable: false,\n          eventDurationEditable: false,\n          selectable: false,\n          height: 800,\n          slotMinTime: this.adjustedSlotMinTime(),\n          slotMaxTime: this.adjustedSlotMaxTime(),\n          slotDuration: this.displayMode === 'games' ? '00:05:00' : '00:15:00',\n          slotLabelInterval:\n            this.displayMode === 'games' ? '00:15:00' : '01:00:00',\n          allDaySlot: false,\n          resources: this.paginatedFilteredFields.map((field) => ({\n            id: field.id.toString(),\n            title: field.name,\n          })),\n          events: events,\n          resourceAreaHeaderContent: 'Terrains',\n          slotLabelFormat: {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false,\n          },\n          headerToolbar: false,\n          eventClick: this.handleEventClick,\n          eventContent: this.renderEventContent,\n        };\n      },\n      sortedFields() {\n        return [...this.fields].sort((a, b) => {\n          // Trier par nom numérique si les noms sont des nombres\n          const aNum = parseInt(a.name);\n          const bNum = parseInt(b.name);\n          if (!isNaN(aNum) && !isNaN(bNum)) {\n            return aNum - bNum;\n          }\n          // Sinon, trier alphabétiquement\n          return a.name.localeCompare(b.name);\n        });\n      },\n    },\n    watch: {\n      /**\n       * Met à jour le calendrier lorsque showAllTerrains change.\n       */\n      showAllTerrains() {\n        if (this.$refs.fullCalendar) {\n          this.$refs.fullCalendar.getApi().refetchResources();\n          this.$refs.fullCalendar.getApi().refetchEvents();\n        }\n      },\n      /**\n       * Met à jour le calendrier lorsque la page courante change.\n       */\n      currentPage() {\n        if (this.$refs.fullCalendar) {\n          this.$refs.fullCalendar.getApi().refetchResources();\n          this.$refs.fullCalendar.getApi().refetchEvents();\n        }\n      },\n      /**\n       * Réinitialise la pagination et met à jour les paramètres de requête lorsque les filtres changent.\n       */\n      selectedPoolId() {\n        this.currentPage = 1; // Réinitialiser la pagination\n        this.calendarKey += 1; // Forcer le re-render\n        this.updateQueryParams();\n      },\n      selectedFieldId() {\n        this.currentPage = 1;\n        this.calendarKey += 1;\n        this.updateQueryParams();\n      },\n      selectedGameId() {\n        this.currentPage = 1;\n        this.calendarKey += 1;\n        this.updateQueryParams();\n      },\n      /**\n       * Charge les filtres depuis les query params lorsque ceux-ci changent.\n       */\n      '$route.query'() {\n        this.loadFiltersFromQuery();\n      },\n      /**\n       * Rafraîchit les événements lorsque les couleurs unifiées changent.\n       */\n      useUnifiedColors() {\n        if (this.$refs.fullCalendar) {\n          // Rafraîchir le calendrier pour appliquer les nouvelles couleurs\n          this.$refs.fullCalendar.getApi().refetchEvents();\n        }\n      },\n    },\n    methods: {\n      ...mapActions('tourney', [\n        'fetchTourneyStatuses',\n        'setTournamentName',\n        'clearTournamentName',\n      ]),\n\n      ...mapActions('userTourney', [\n        'setSelectedPool',\n        'setSelectedField',\n        'setSelectedGame',\n      ]),\n\n      /**\n       * Met à jour les paramètres de requête en fonction des filtres sélectionnés.\n       */\n      updateQueryParams() {\n        this.$router.replace({\n          path: this.$route.path,\n          query: {\n            ...this.$route.query,\n            pool: this.selectedPoolId,\n            field: this.selectedFieldId,\n            game: this.selectedGameId,\n          },\n        });\n      },\n      /**\n       * Bascule l'affichage de tous les terrains.\n       */\n      toggleShowAllTerrains() {\n        this.showAllTerrains = !this.showAllTerrains;\n        this.currentPage = 1;\n        if (this.$refs.fullCalendar) {\n          this.$refs.fullCalendar.getApi().refetchResources();\n          this.$refs.fullCalendar.getApi().refetchEvents();\n        }\n      },\n\n      /**\n       * Charge les filtres depuis les paramètres de requête (query params).\n       */\n      loadFiltersFromQuery() {\n        const { pool, field, game } = this.$route.query;\n\n        if (pool !== undefined && pool !== 'null') {\n          const poolId = parseInt(pool, 10);\n          this.setSelectedPool(!isNaN(poolId) ? poolId : null);\n        } else {\n          this.setSelectedPool(null);\n        }\n\n        if (field !== undefined && field !== 'null') {\n          const fieldId = parseInt(field, 10);\n          this.setSelectedField(!isNaN(fieldId) ? fieldId : null);\n        } else {\n          this.setSelectedField(null);\n        }\n\n        if (game !== undefined && game !== 'null') {\n          const gameId = parseInt(game, 10);\n          this.setSelectedGame(!isNaN(gameId) ? gameId : null);\n        } else {\n          this.setSelectedGame(null);\n        }\n      },\n\n      /**\n       * Recupère toutes les données nécessaires pour le planning.\n       * Gestion PWA\n       */\n      async fetchAllData() {\n        try {\n          await this.fetchPlanningDetails();\n          await this.fetchUserTeamAndPool();\n          await this.fetchUserNextGames();\n\n          this.saveAllToLocalStorage(); // Sauvegarder toutes les données dans localStorage\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données :', error);\n          this.loadAllFromLocalStorage();\n        }\n      },\n\n      /**\n       * Récupère les données de planning (terrains, pools, games, sports...)\n       */\n      async fetchPlanningDetails() {\n        try {\n          await this.fetchTourneyStatuses(this.tourneyId);\n\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/planning/details`\n          );\n\n          const data = response.data;\n\n          this.fields = data.fields || [];\n          this.pools = data.pools || [];\n          this.games = data.games || [];\n          this.sports = data.sports || [];\n          this.scheduleConfig = data.scheduleTourney || {};\n\n          // Récupérer les détails du tournoi (pour la date)\n          const tourneyResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}`\n          );\n          this.tourney = tourneyResponse.data;\n\n          // Récupérer les équipes avec leur poolId\n          const teamsResponse = await apiService.get(\n            `/tourneys/${this.tourneyId}/teams`\n          );\n          this.teams = teamsResponse.data;\n\n          if (!this.tourney.dateTourney) {\n            console.warn(\"La date du tournoi n'est pas définie.\");\n          }\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du planning:',\n            error\n          );\n        }\n      },\n      saveAllToLocalStorage() {\n        localStorage.setItem(\n          `planning-${this.tourneyId}`,\n          JSON.stringify({\n            fields: this.fields,\n            pools: this.pools,\n            games: this.games,\n            scheduleConfig: this.scheduleConfig,\n            userTeam: this.userTeam,\n            userPool: this.userPool,\n            userNextGames: this.userNextGames,\n            tourney: this.tourney,\n          })\n        );\n      },\n\n      loadAllFromLocalStorage() {\n        const savedData = localStorage.getItem(`planning-${this.tourneyId}`);\n        if (savedData) {\n          const data = JSON.parse(savedData);\n\n          this.fields = data.fields || [];\n          this.pools = data.pools || [];\n          this.games = data.games || [];\n          this.scheduleConfig = data.scheduleConfig || {};\n          this.userTeam = data.userTeam || {};\n          this.userPool = data.userPool || null;\n          this.userNextGames = data.userNextGames || [];\n          this.tourney = data.tourney || {};\n        } else {\n          console.warn(\n            'Aucune donnée sauvegardée trouvée dans le localStorage.'\n          );\n        }\n      },\n\n      /**\n       * Met fin à tous les matchs (uniquement accessible par un admin)\n       */\n      async completeAllMatches() {\n        try {\n          const response = await apiService.put(\n            `/tourneys/${this.tourneyId}/games/complete-all-games`\n          );\n          if (response.status === 200) {\n            toast.success(response.data.message);\n            // Rafraîchir les données du calendrier\n            await this.fetchPlanningDetails();\n            this.calendarKey += 1; // Forcer le re-render\n          }\n        } catch (error) {\n          console.error('Erreur lors de la mise à jour des matchs :', error);\n          toast.error('Erreur lors de la mise à jour des matchs.');\n        }\n      },\n\n      /**\n       * Récupère les prochains matchs de l'utilisateur.\n       * Ne doit être appelé que si l'utilisateur est player ou assistant.\n       */\n      async fetchUserNextGames() {\n        // Si l'utilisateur n'est pas player ou assistant, on ne fait pas cette requête\n        if (\n          this.userRoleInTourney === 'admin' ||\n          this.userRoleInTourney === 'guest'\n        ) {\n          return;\n        }\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/games/next`\n          );\n\n          if (Array.isArray(response.data)) {\n            // L'utilisateur a des prochains matchs\n            this.userNextGames = response.data.map((game) => {\n              const teamA = this.teams.find((team) => team.id === game.teamAId);\n              const teamB = this.teams.find((team) => team.id === game.teamBId);\n\n              return {\n                ...game,\n                teamANumber: teamA?.teamName\n                  ? extractTeamNumber(teamA.teamName, 'A')\n                  : 'A',\n                teamBNumber: teamB?.teamName\n                  ? extractTeamNumber(teamB.teamName, 'B')\n                  : 'B',\n              };\n            });\n          } else if (response.data.message) {\n            // Message pour assistant\n            this.assistantMessage = response.data.message;\n          }\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la récupération des prochains matchs de l'utilisateur :\",\n            error\n          );\n          // Si 404, c'est peut-être normal si l'utilisateur n'a pas de matchs\n        }\n      },\n\n      /**\n       * Récupère l'équipe de l'utilisateur et la pool associée.\n       * Ne doit être appelé que si l'utilisateur est player ou assistant.\n       */\n      async fetchUserTeamAndPool() {\n        if (this.isAdmin) {\n          // L'admin n'a pas d'équipe\n          return;\n        }\n\n        try {\n          const userId = this.$store.state.user.id;\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/users/${userId}`\n          );\n\n          // Vérifiez si la team et pool existent\n          this.userTeam = response.data.team || null;\n          this.userPool =\n            this.userTeam && this.userTeam.pool ? this.userTeam.pool : null;\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la récupération de l'équipe de l'utilisateur :\",\n            error\n          );\n        }\n      },\n\n      /**\n       * Ajuste le nombre de terrains par page en fonction de la largeur de l'écran.\n       */\n      adjustTerrainsPerPage() {\n        const screenWidth = window.innerWidth;\n\n        if (screenWidth >= 1200) {\n          this.terrainsPerPage = 10;\n        } else if (screenWidth >= 1000) {\n          this.terrainsPerPage = 8;\n        } else if (screenWidth >= 800) {\n          this.terrainsPerPage = 7;\n        } else if (screenWidth >= 600) {\n          this.terrainsPerPage = 5;\n        } else {\n          this.terrainsPerPage = 3;\n        }\n      },\n\n      /**\n       * Gère le clic sur un événement du calendrier (redirige vers la page du match).\n       * @param {Object} info Informations sur l'événement cliqué.\n       */\n      handleEventClick(info) {\n        const event = info.event;\n        const game = event.extendedProps.game;\n        if (game) {\n          // Rediriger vers la page du match\n          this.$router.push({\n            name: 'UserTourneyGameDetails',\n            params: {\n              tourneyId: this.tourneyId,\n              gameId: game.id,\n            },\n          });\n        }\n      },\n\n      /**\n       * Bascule entre l'affichage 'games' et 'pools'.\n       */\n      toggleDisplayMode() {\n        this.displayMode = this.displayMode === 'games' ? 'pools' : 'games';\n        // Rafraîchir le calendrier\n        if (this.$refs.fullCalendar) {\n          this.$refs.fullCalendar.getApi().refetchEvents();\n        }\n        // Mettre à jour la clé pour forcer le re-render\n        this.calendarKey += 1;\n      },\n\n      /**\n       * Ajoute les matchs en tant qu'événements dans le calendrier.\n       * @param {Array} events Tableau d'événements\n       */\n      addGamesToEvents(events) {\n        const now = new Date();\n        this.filteredGames.forEach((game) => {\n          if (!game.field) {\n            console.warn(\n              `Le match avec l'ID ${game.id} n'a pas de terrain assigné.`\n            );\n            return;\n          }\n\n          const gameStart = new Date(game.startTime);\n          const gameEnd = new Date(game.endTime);\n          const isCurrentGame = now >= gameStart && now <= gameEnd;\n\n          const teamATeamName = game.teamA?.teamName || 'Équipe A';\n          const teamBTeamName = game.teamB?.teamName || 'Équipe B';\n\n          const teamANumber = teamATeamName\n            ? extractTeamNumber(teamATeamName, 'A')\n            : 'A';\n          const teamBNumber = teamBTeamName\n            ? extractTeamNumber(teamBTeamName, 'B')\n            : 'B';\n\n          events.push({\n            id: game.id.toString(),\n            resourceId: game.field.id.toString(),\n            title: `${\n              game.pool?.name || 'Team'\n            }: ${teamANumber} vs ${teamBNumber}`,\n            start: gameStart,\n            end: gameEnd,\n            backgroundColor: isCurrentGame\n              ? '#FF0000' // Rouge pour le match en cours\n              : this.useUnifiedColors\n              ? this.generateUniqueColor(game.pool?.id)\n              : game.sport?.color || '#3B82F6',\n            textColor: '#FFFFFF',\n            extendedProps: { game },\n          });\n        });\n      },\n\n      /**\n       * Ajoute les poolSchedules en tant qu'événements dans le calendrier.\n       * @param {Array} events Tableau d'événements\n       */\n      addPoolSchedulesToEvents(events) {\n        this.pools.forEach((pool) => {\n          if (this.selectedPoolId && pool.id !== this.selectedPoolId) {\n            return;\n          }\n          pool.schedules.forEach((schedule) => {\n            if (\n              this.selectedFieldId &&\n              schedule.fieldId !== this.selectedFieldId\n            ) {\n              return;\n            }\n            events.push({\n              id: `pool-${pool.id}-schedule-${schedule.id}`,\n              resourceId: schedule.fieldId.toString(),\n              title: `${pool.name} - ${schedule.sport?.name}`,\n              start: `${schedule.date}T${schedule.startTime}`,\n              end: `${schedule.date}T${schedule.endTime}`,\n              backgroundColor: this.useUnifiedColors\n                ? this.generateUniqueColor(pool.id)\n                : schedule.sport?.color || '#3B82F6',\n              textColor: '#FFFFFF',\n              extendedProps: { poolSchedule: schedule },\n            });\n          });\n        });\n      },\n\n      /**\n       * Ajuste l'heure de début du slot.\n       * @returns {string} Heure minimale du slot.\n       */\n      adjustedSlotMinTime() {\n        const startTime = this.scheduleConfig.startTime || '07:00:00';\n        return this.roundDownTime(startTime);\n      },\n\n      /**\n       * Ajuste l'heure de fin du slot.\n       * @returns {string} Heure maximale du slot.\n       */\n      adjustedSlotMaxTime() {\n        const endTime = this.scheduleConfig.endTime || '23:00:00';\n        return this.roundUpTime(endTime);\n      },\n\n      /**\n       * Arrondit le temps vers le bas (heures pleines).\n       * @param {string} timeStr Une chaîne HH:MM:SS\n       * @returns {string} Heure arrondie vers le bas.\n       */\n      roundDownTime(timeStr) {\n        let [hours, minutes, seconds] = timeStr.split(':').map(Number);\n        if (minutes > 0 || seconds > 0) {\n          hours = Math.max(0, hours);\n        }\n        return `${hours.toString().padStart(2, '0')}:00:00`;\n      },\n\n      /**\n       * Arrondit le temps vers le haut (heures pleines).\n       * @param {string} timeStr Une chaîne HH:MM:SS\n       * @returns {string} Heure arrondie vers le haut.\n       */\n      roundUpTime(timeStr) {\n        let [hours, minutes, seconds] = timeStr.split(':').map(Number);\n        if (minutes > 0 || seconds > 0) {\n          hours += 1;\n        }\n        if (hours >= 24) hours = 23;\n        return `${hours.toString().padStart(2, '0')}:00:00`;\n      },\n\n      /**\n       * Formate la date/heure pour l'affichage.\n       * @param {string|number} dateTime Timestamp/Date\n       * @returns {string} Chaîne formatée JJ/MM/AAAA à HHhMM\n       */\n      formatDateTimeDisplay(dateTime) {\n        const d = new Date(dateTime);\n        const day = d.getDate().toString().padStart(2, '0');\n        const month = (d.getMonth() + 1).toString().padStart(2, '0');\n        const year = d.getFullYear();\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        return `${day}/${month}/${year} à ${hours}h${minutes}`;\n      },\n\n      /**\n       * Ajoute les événements de pauses (introduction, déjeuner, conclusion) au calendrier.\n       * @param {Array} events Tableau d'événements\n       */\n      addBreakTimes(events) {\n        const breaks = [\n          {\n            title: 'Introduction',\n            startTime: this.scheduleConfig.introStart,\n            endTime: this.scheduleConfig.introEnd,\n          },\n          {\n            title: 'Déjeuner',\n            startTime: this.scheduleConfig.lunchStart,\n            endTime: this.scheduleConfig.lunchEnd,\n          },\n          {\n            title: 'Conclusion',\n            startTime: this.scheduleConfig.outroStart,\n            endTime: this.scheduleConfig.outroEnd,\n          },\n        ];\n\n        breaks.forEach((breakTime) => {\n          if (breakTime.startTime && breakTime.endTime) {\n            events.push({\n              id: `break-${breakTime.title}`,\n              resourceIds: this.paginatedFilteredFields.map((field) =>\n                field.id.toString()\n              ),\n              title: breakTime.title,\n              start: `${this.tourney.dateTourney}T${breakTime.startTime}`,\n              end: `${this.tourney.dateTourney}T${breakTime.endTime}`,\n              backgroundColor: '#965612', // Couleur or\n              textColor: '#000000', // Texte noir\n              display: 'background',\n            });\n          }\n        });\n      },\n\n      /**\n       * Ajoute les périodes de transition entre les pools au calendrier.\n       * @param {Array} events Tableau d'événements\n       */\n      addPoolTransitions(events) {\n        const transitionDuration = parseInt(\n          this.scheduleConfig.transitionPoolTime\n        );\n        if (!transitionDuration || isNaN(transitionDuration)) {\n          return; // Pas de durée de transition définie\n        }\n\n        this.pools.forEach((pool) => {\n          if (this.selectedPoolId && pool.id !== this.selectedPoolId) {\n            return;\n          }\n          pool.schedules.forEach((schedule) => {\n            const transitionStartDateTime = new Date(\n              `${schedule.date}T${schedule.endTime}`\n            );\n            const transitionEndDateTime = new Date(\n              transitionStartDateTime.getTime() + transitionDuration * 60000\n            );\n\n            if (\n              this.selectedFieldId &&\n              schedule.fieldId !== this.selectedFieldId\n            ) {\n              return;\n            }\n            events.push({\n              id: `transition-${pool.id}-${schedule.id}`,\n              resourceId: schedule.fieldId.toString(),\n              title: 'Transition',\n              start: transitionStartDateTime,\n              end: transitionEndDateTime,\n              backgroundColor: '#808080', // Gris moyen\n              display: 'background',\n            });\n          });\n        });\n      },\n\n      /**\n       * Rend le contenu des événements du calendrier (affichage custom).\n       * @param {Object} arg Informations sur l'événement\n       * @returns {Object} Des nœuds DOM pour l'affichage\n       */\n      renderEventContent(arg) {\n        // Crée le conteneur principal\n        const container = document.createElement('div');\n        container.classList.add(\n          'flex',\n          'flex-col',\n          'space-y-1',\n          'cursor-pointer',\n          'hover:invert'\n        );\n\n        // Conteneur d'en-tête (titre)\n        const headerContainer = document.createElement('div');\n        headerContainer.classList.add(\n          'flex',\n          'justify-between',\n          'items-center'\n        );\n\n        const title = document.createElement('span');\n        title.innerText = arg.event.title;\n        title.classList.add('font-semibold', 'text-white');\n        headerContainer.appendChild(title);\n\n        // Ajoute l'en-tête\n        container.appendChild(headerContainer);\n\n        const startTime = arg.event.start\n          ? this.formatDisplayTime(arg.event.start)\n          : '';\n        const endTime = arg.event.end\n          ? this.formatDisplayTime(arg.event.end)\n          : '';\n\n        // Ajoute le timeRange si startTime et endTime existent et que ce n'est pas une transition\n        if (startTime && endTime && arg.event.title !== 'Transition') {\n          const timeRange = document.createElement('div');\n          timeRange.innerText = `${startTime} - ${endTime}`;\n          timeRange.classList.add('text-sm', 'text-white');\n          container.appendChild(timeRange);\n        }\n\n        // Si c'est un \"game\", on affiche le sport et la pool\n        const game = arg.event.extendedProps.game;\n        if (game) {\n          const sportPoolInfo = document.createElement('div');\n          const poolName = game.pool ? game.pool.name : '';\n          const sportName = game.sport ? game.sport.name : '';\n\n          sportPoolInfo.innerText = `${poolName} - ${sportName}`;\n          sportPoolInfo.classList.add('text-xs', 'text-white');\n\n          // Ajout du sport/pool info\n          container.appendChild(sportPoolInfo);\n        }\n\n        return { domNodes: [container] };\n      },\n\n      /**\n       * Formate l'heure d'un événement en HH:MM.\n       * @param {Date} date\n       * @returns {string} Heure formatée\n       */\n      formatDisplayTime(date) {\n        const d = new Date(date);\n        const hours = d.getHours().toString().padStart(2, '0');\n        const minutes = d.getMinutes().toString().padStart(2, '0');\n        return `${hours}:${minutes}`;\n      },\n    },\n    async mounted() {\n      this.adjustTerrainsPerPage();\n      window.addEventListener('resize', this.adjustTerrainsPerPage);\n\n      if (navigator.onLine) {\n        await this.fetchAllData(); // En ligne : récupérer toutes les données\n      } else {\n        this.loadAllFromLocalStorage(); // Hors ligne : charger les données sauvegardées\n        console.warn('Vous êtes hors ligne. Chargement des données locales.');\n      }\n\n      this.loadFiltersFromQuery();\n    },\n  };\n</script>\n\n<style scoped>\n  @import '@/assets/fullcalendar.css';\n</style>\n","<template>\n  <div\n    :class=\"['tourney-nav', isNavVisible ? 'visible' : 'hidden']\"\n    class=\"tourney-nav w-full z-50 bg-light-subMenu-background dark:bg-dark-subMenu-background shadow-lg border-b border-light-subMenu-border dark:border-dark-subMenu-border\"\n  >\n    <!-- PLANNING -->\n    <router-link\n      :to=\"`/tourneys/${tourneyId}/planning`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{\n        active: $route.name === 'UserTourneyPlanning',\n      }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'calendar-alt']\" />\n      <span class=\"hidden sm:inline\"> Planning</span>\n    </router-link>\n\n    <!-- SCORE -->\n    <router-link\n      :to=\"`/tourneys/${tourneyId}/scores`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{ active: $route.name === 'UserTourneyScores' }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'list-ol']\" />\n      <span class=\"hidden sm:inline\"> Scores</span>\n    </router-link>\n\n    <!-- DETAILS -->\n    <router-link\n      :to=\"`/tourneys/${tourneyId}/details`\"\n      class=\"tourney-nav-item text-light-subMenu-text dark:text-dark-subMenu-text hover:bg-light-subMenu-hoverBackground dark:hover:bg-dark-subMenu-hoverBackground hover:text-light-subMenu-hoverText dark:hover:text-dark-subMenu-hoverText\"\n      :class=\"{ active: $route.name === 'UserTourneyDetails' }\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'info-circle']\" />\n      <span class=\"hidden sm:inline\"> Infos</span>\n    </router-link>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        activeTab: 'planning', // Par défaut, on montre les détails du tournoi\n        isNavVisible: true, // Défini la visibilité par défaut du menu\n      };\n    },\n    methods: {\n      selectTab(tab) {\n        this.activeTab = tab;\n      },\n    },\n    props: {\n      tourneyId: {\n        type: String,\n        required: true,\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  .tourney-nav {\n    display: flex;\n    background-color: white; /* Un gris très léger pour tout le fond du sous-menu */\n    border-bottom: 1px solid #e2e8f0;\n    margin: 0; /* Coller au menu principal */\n  }\n\n  .tourney-nav-item {\n    cursor: pointer;\n    font-weight: 600;\n    color: #4a5568; /* Couleur gris foncé pour un bon contraste */\n    padding: 1.5rem 0; /* Plus de padding pour agrandir la zone cliquable */\n    text-align: center;\n    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;\n    flex: 1; /* Chaque item occupe 25% de la largeur */\n    position: relative;\n  }\n\n  .tourney-nav-item:hover {\n    background-color: #e2e8f0; /* Un gris légèrement plus foncé au hover */\n    color: #2f855a; /* Vert plus foncé au survol pour l’interaction */\n  }\n\n  .tourney-nav-item.active {\n    color: #2f855a; /* Vert pour indiquer que l’élément est actif */\n    font-weight: bold;\n  }\n  .tourney-nav-item div {\n    position: relative;\n  }\n\n  .tourney-nav-item.active::after {\n    content: '';\n    position: absolute;\n    bottom: 0; /* Barre verte en bas de l'élément */\n    left: 1%; /* La barre occupe le quart de la largeur de l'élément */\n    width: 98%; /* Barre qui prend environ 75% de la largeur de l'item */\n    height: 4px;\n    background-color: #38a169; /* Couleur verte élégante pour indiquer l'onglet actif */\n    border-radius: 4px; /* Barre arrondie pour plus de fluidité */\n  }\n</style>\n","import { render } from \"./SubMenuComponent.vue?vue&type=template&id=7ecaf748&scoped=true\"\nimport script from \"./SubMenuComponent.vue?vue&type=script&lang=js\"\nexport * from \"./SubMenuComponent.vue?vue&type=script&lang=js\"\n\nimport \"./SubMenuComponent.vue?vue&type=style&index=0&id=7ecaf748&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7ecaf748\"]])\n\nexport default __exports__","<!-- CollapsibleBox.vue -->\n<template>\n  <div class=\"mb-4\">\n    <button\n      @click=\"isOpen = !isOpen\"\n      class=\"w-full flex justify-between items-center bg-blue-500 text-white px-4 py-2 rounded\"\n    >\n      <span>{{ title }}</span>\n      <span v-if=\"isOpen\">-</span>\n      <span v-else>+</span>\n    </button>\n    <div v-show=\"isOpen\" class=\"mt-2 p-4 border rounded\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {\n      title: {\n        type: String,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        isOpen: true,\n      };\n    },\n  };\n</script>\n","import { render } from \"./CollapsibleBox.vue?vue&type=template&id=7f9e2662\"\nimport script from \"./CollapsibleBox.vue?vue&type=script&lang=js\"\nexport * from \"./CollapsibleBox.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Extrait le numéro de l'équipe à partir du nom de l'équipe.\n * Si le numéro n'est pas trouvable, retourne un fallback.\n * \n * @param {string} teamName - Le nom de l'équipe (par exemple \"Team 40\").\n * @param {string|number} fallback - La valeur de retour par défaut si aucun numéro n'est trouvé.\n * @returns {string|number} Le numéro extrait ou le fallback.\n */\nexport function extractTeamNumber(teamName, fallback = 'Unknown') {\n    if (!teamName || typeof teamName !== 'string') {\n        return fallback;\n    }\n\n    const parts = teamName.split(' ');\n    return parts.length > 1 && !isNaN(parts[1]) ? parts[1] : fallback;\n}\n","import { render } from \"./TourneyPlanning.vue?vue&type=template&id=fa94e376&scoped=true\"\nimport script from \"./TourneyPlanning.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyPlanning.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyPlanning.vue?vue&type=style&index=0&id=fa94e376&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fa94e376\"]])\n\nexport default __exports__","<!-- src/views/user/tourneys/TourneyGameDetails.vue -->\n<template>\n  <div v-if=\"socketError\" class=\"alert alert-warning\">\n    {{ socketError }}\n  </div>\n  <div v-if=\"match\" class=\"p-4 relative\">\n    <!-- \"Header\" -->\n    <div v-if=\"match\" class=\"relative\">\n      <div class=\"grid grid-cols-3 items-center gap-4\">\n        <!-- Colonne gauche -->\n        <div class=\"text-left\">\n          <ButtonComponent\n            variant=\"secondary\"\n            fontAwesomeIcon=\"arrow-left\"\n            @click=\"goBack\"\n            class=\"mb-2\"\n          >\n            <span class=\"\">Retour</span>\n          </ButtonComponent>\n          <p class=\"text-lg\">\n            <font-awesome-icon icon=\"gavel\" class=\"mr-2\" />\n            <span class=\"hidden sm:inline\">Arbitre: </span>\n            <span class=\"ml-1\">{{\n              assistantName ? assistantName : 'N/A'\n            }}</span>\n          </p>\n          <p class=\"text-lg\">\n            <font-awesome-icon icon=\"eye\" class=\"mr-2\" />\n            <span class=\"hidden sm:inline\">Spectateurs: </span>\n            <span class=\"ml-1\">{{ spectatorCount }}</span>\n          </p>\n        </div>\n\n        <!-- Colonne centrale -->\n        <div class=\"text-center\">\n          <h2 class=\"text-2xl font-bold\">\n            {{ match.field.name }} | {{ match.sport.name }}\n          </h2>\n          <p class=\"text-lg\" v-if=\"match.pool\">\n            {{ match.pool.name }} - ID: {{ match.id }}\n          </p>\n          <p class=\"text-lg\">\n            <span class=\"hidden sm:inline\">Heure: </span>\n            {{ formatTime(match.startTime) }} -\n            {{ formatTime(match.endTime) }}\n          </p>\n        </div>\n\n        <!-- Colonne droite -->\n        <div class=\"text-right flex justify-start md:justify-end items-center\">\n          <!-- Sélecteur de statut du match -->\n          <StatusSelectorComponent\n            v-if=\"canEdit\"\n            :tourneyId=\"tourneyId\"\n            statusKey=\"matchStatus\"\n            :statusOptions=\"gameStatusOptions\"\n            :modelValue=\"match.status\"\n            label=\"Statut: \"\n            :hideWhenNotStarted=\"false\"\n            @statusChange=\"onMatchStatusChange\"\n          />\n\n          <!-- Afficher le statut pour les players -->\n          <div v-else>\n            <p class=\"text-lg font-semibold\">\n              {{ getMatchStatusLabel(match.status, isPaused) }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Affichage du match -->\n    <div class=\"flex flex-col items-center\">\n      <div class=\"flex items-center justify-center mb-4\">\n        <!-- Équipe A -->\n        <div class=\"flex flex-col items-center mr-4\">\n          <h2 class=\"text-xl font-bold flex items-center\">\n            {{ match.teamA.teamName }}\n            <font-awesome-icon\n              v-if=\"teamAResult === 'winner'\"\n              icon=\"trophy\"\n              class=\"text-green-500 ml-2\"\n            />\n            <font-awesome-icon\n              v-if=\"teamAResult === 'loser'\"\n              icon=\"trophy\"\n              class=\"text-red-500 ml-2\"\n            />\n          </h2>\n          <div class=\"player-list max-h-40 overflow-y-auto mt-2\">\n            <ul>\n              <li v-for=\"player in teamAPlayers\" :key=\"player.id\">\n                <font-awesome-icon icon=\"user\" class=\"mr-2\" />\n                {{ player.name }}\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <!-- Score et chronomètre -->\n        <div class=\"flex flex-col items-center mx-8\">\n          <div class=\"flex items-center whitespace-nowrap\">\n            <!-- Pour les assistants/admins : inputs modifiables -->\n            <div v-if=\"canEdit && match.status === 'in_progress'\">\n              <input\n                v-model.number=\"scoreTeamA\"\n                type=\"number\"\n                class=\"w-16 text-center text-4xl font-bold bg-transparent border-none\"\n                @input=\"updateScores\"\n              />\n              <span class=\"text-4xl font-bold mx-2\">-</span>\n              <input\n                v-model.number=\"scoreTeamB\"\n                type=\"number\"\n                class=\"w-16 text-center text-4xl font-bold bg-transparent border-none\"\n                @input=\"updateScores\"\n              />\n            </div>\n            <!-- Pour les joueurs : affichage en lecture seule -->\n            <div v-else>\n              <span class=\"text-4xl font-bold\">{{ scoreTeamA || 0 }}</span>\n              <span class=\"text-4xl font-bold mx-2\">-</span>\n              <span class=\"text-4xl font-bold\">{{ scoreTeamB || 0 }}</span>\n            </div>\n          </div>\n          <!-- Centrer le timer pour tous les utilisateurs -->\n          <div class=\"mt-2 text-lg font-semibold text-center\">\n            {{ formattedTime }}\n          </div>\n          <!-- Boutons de contrôle du timer -->\n          <div\n            class=\"mt-2 flex items-center justify-center space-x-2 flex-wrap\"\n            v-if=\"canEdit && match.status === 'in_progress'\"\n          >\n            <button\n              v-if=\"!timerRunning && !isPaused\"\n              @click=\"startTimer\"\n              class=\"px-4 py-2 bg-green-500 dark:bg-green-600 text-white rounded\"\n            >\n              Démarrer\n            </button>\n            <button\n              v-else-if=\"timerRunning && !isPaused\"\n              @click=\"pauseTimer\"\n              class=\"px-4 py-2 bg-yellow-500 dark:bg-yellow-600 text-white rounded\"\n            >\n              Pause\n            </button>\n            <button\n              v-else-if=\"isPaused\"\n              @click=\"startTimer\"\n              class=\"px-4 py-2 bg-green-500 dark:bg-green-600 text-white rounded\"\n            >\n              Reprendre\n            </button>\n            <!-- Bouton Reset -->\n            <button\n              @click=\"openResetConfirmation\"\n              class=\"px-4 py-2 bg-red-500 dark:bg-red-600 text-white rounded ml-2\"\n            >\n              Réinitialiser\n            </button>\n          </div>\n        </div>\n\n        <!-- Équipe B -->\n        <div class=\"flex flex-col items-center ml-4\">\n          <h2 class=\"text-xl font-bold flex items-center\">\n            {{ match.teamB.teamName }}\n            <font-awesome-icon\n              v-if=\"teamBResult === 'winner'\"\n              icon=\"trophy\"\n              class=\"text-green-500 ml-2\"\n            />\n            <font-awesome-icon\n              v-if=\"teamBResult === 'loser'\"\n              icon=\"trophy\"\n              class=\"text-red-500 ml-2\"\n            />\n          </h2>\n          <div class=\"player-list max-h-40 overflow-y-auto mt-2\">\n            <ul>\n              <li v-for=\"player in teamBPlayers\" :key=\"player.id\">\n                <font-awesome-icon icon=\"user\" class=\"mr-2\" />\n                {{ player.name }}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <!-- Indication de Match Nul -->\n      <div v-if=\"isDraw\" class=\"mt-4 text-lg font-semibold\">Match Nul</div>\n\n      <!-- Événements du match (pour les arbitres et admins) -->\n      <div\n        v-if=\"canEdit && match.status === 'in_progress'\"\n        class=\"flex flex-wrap justify-center mt-4 gap-4\"\n      >\n        <!-- Boutons d'événements -->\n        <ButtonComponent\n          @click=\"openEventModal('goal')\"\n          variant=\"primary\"\n          fontAwesomeIcon=\"futbol\"\n        >\n          Score\n        </ButtonComponent>\n        <ButtonComponent\n          @click=\"openEventModal('foul')\"\n          variant=\"info\"\n          fontAwesomeIcon=\"exclamation-circle\"\n        >\n          Faute\n        </ButtonComponent>\n        <ButtonComponent\n          @click=\"openEventModal('yellow_card')\"\n          variant=\"warning\"\n          fontAwesomeIcon=\"square\"\n        >\n          Carton Jaune\n        </ButtonComponent>\n        <ButtonComponent\n          @click=\"openEventModal('red_card')\"\n          variant=\"danger\"\n          fontAwesomeIcon=\"flag\"\n        >\n          Carton Rouge\n        </ButtonComponent>\n      </div>\n\n      <!-- Timeline des événements -->\n      <div class=\"relative w-full max-w-2xl mx-auto mt-8\">\n        <div class=\"max-h-96 overflow-y-auto\">\n          <ul class=\"timeline w-full mx-auto relative\">\n            <li\n              v-for=\"event in sortedGameEvents\"\n              :key=\"event.id\"\n              class=\"relative mb-6 flex items-center\"\n            >\n              <!-- Icône pour chaque événement -->\n              <div\n                class=\"absolute left-1/2 transform -translate-x-1/2\"\n                style=\"top: 0\"\n              >\n                <div\n                  :class=\"{\n                    'bg-yellow-500 dark:bg-yellow-600':\n                      event.type === 'yellow_card',\n                    'bg-red-500 dark:bg-yellow-700': event.type === 'red_card',\n                    'bg-green-600 dark:bg-green-700': event.type === 'goal',\n                    'bg-blue-500 dark:bg-blue-600': event.type === 'foul',\n                  }\"\n                  class=\"rounded-full w-10 h-10 flex items-center justify-center text-white text-lg shadow-md\"\n                >\n                  <font-awesome-icon :icon=\"getEventIcon(event.type)\" />\n                </div>\n              </div>\n\n              <!-- Box contenant les détails de l'événement -->\n              <div\n                :class=\"getEventPositionClass(event)\"\n                class=\"timeline-box bg-gray-100 dark:bg-gray-800 p-2 rounded-lg shadow-md w-64\"\n              >\n                <p class=\"font-semibold\">{{ getEventDescription(event) }}</p>\n                <p\n                  v-if=\"event.description\"\n                  class=\"text-sm text-gray-700 dark:text-gray-400\"\n                >\n                  {{ event.description }}\n                </p>\n                <p class=\"text-sm text-gray-500\">\n                  {{ formatEventTime(event.createdAt) }}\n                  <span v-if=\"event.matchTime !== undefined\">\n                    - {{ formatElapsedTime(event.matchTime) }}\n                  </span>\n                </p>\n                <!-- Boutons de suppression et d'édition -->\n                <div class=\"flex justify-between mt-2\">\n                  <!-- Bouton de suppression -->\n                  <button\n                    v-if=\"isAuthorized && match.status === 'in_progress'\"\n                    @click=\"deleteEvent(event.id)\"\n                    class=\"text-red-500 hover:text-red-700\"\n                    title=\"Supprimer l'événement\"\n                  >\n                    <font-awesome-icon icon=\"trash\" />\n                  </button>\n                  <!-- Bouton d'édition -->\n                  <button\n                    v-if=\"isAuthorized && match.status === 'in_progress'\"\n                    @click=\"openEditEventModal(event)\"\n                    class=\"text-yellow-500 hover:text-yellow-700\"\n                    title=\"Modifier l'événement\"\n                  >\n                    <font-awesome-icon icon=\"pen\" />\n                  </button>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <!-- Confirmation de réinitialisation -->\n      <DeleteConfirmationModal\n        :isVisible=\"showResetConfirmation\"\n        title=\"Confirmer la Réinitialisation\"\n        message=\"Êtes-vous sûr de vouloir réinitialiser les scores et les événements de ce match ? Cette action est irréversible.\"\n        textButton=\"Réinitialiser\"\n        @form-cancel=\"closeResetConfirmation\"\n        @confirm=\"handleResetConfirm\"\n      />\n    </div>\n\n    <!-- Modal pour ajouter un événement -->\n    <ModalComponent\n      :isVisible=\"showEventModal\"\n      :title=\"getEventTitle(eventType)\"\n      @close=\"closeEventModal\"\n    >\n      <template #content>\n        <FormComponent\n          v-model=\"eventFormData\"\n          :fields=\"eventFormFields\"\n          @form-submit=\"submitEvent\"\n          @form-cancel=\"closeEventModal\"\n          :isEditable=\"true\"\n        />\n      </template>\n    </ModalComponent>\n\n    <!-- Modal édition d'événement -->\n    <ModalComponent\n      :isVisible=\"showEditEventModal\"\n      title=\"Modifier l'Événement\"\n      @close=\"closeEditEventModal\"\n    >\n      <template #content>\n        <form @submit.prevent=\"submitEditEvent\" class=\"space-y-4\">\n          <!-- Sélecteur de Team -->\n          <div>\n            <label class=\"block mb-2 font-semibold\">Équipe</label>\n            <select\n              v-model=\"editEventFormData.teamId\"\n              class=\"w-full border border-gray-300 rounded px-2 py-1\"\n              required\n            >\n              <option :value=\"match.teamA.id\">\n                {{ match.teamA.teamName }}\n              </option>\n              <option :value=\"match.teamB.id\">\n                {{ match.teamB.teamName }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Sélecteur de Type d'Événement -->\n          <div>\n            <label class=\"block mb-2 font-semibold\">Type d'Événement</label>\n            <select\n              v-model=\"editEventFormData.type\"\n              class=\"w-full border border-gray-300 rounded px-2 py-1\"\n              required\n            >\n              <option value=\"goal\">But</option>\n              <option value=\"foul\">Faute</option>\n              <option value=\"yellow_card\">Carton Jaune</option>\n              <option value=\"red_card\">Carton Rouge</option>\n            </select>\n          </div>\n\n          <!-- Champ Description -->\n          <div>\n            <label class=\"block mb-2 font-semibold\">Description</label>\n            <input\n              type=\"text\"\n              v-model=\"editEventFormData.description\"\n              class=\"w-full border border-gray-300 rounded px-2 py-1\"\n              placeholder=\"Description de l'événement\"\n            />\n          </div>\n\n          <!-- Boutons de Soumission -->\n          <div class=\"flex justify-end space-x-2\">\n            <ButtonComponent variant=\"secondary\" @click=\"closeEditEventModal\">\n              Annuler\n            </ButtonComponent>\n            <ButtonComponent variant=\"primary\" type=\"submit\">\n              Enregistrer\n            </ButtonComponent>\n          </div>\n        </form>\n      </template>\n    </ModalComponent>\n  </div>\n</template>\n\n<script>\n  import { mapState } from 'vuex';\n  import apiService from '@/services/apiService';\n  import { getSocket } from '@/services/socketService';\n  import ModalComponent from '@/components/ModalComponent.vue';\n  import FormComponent from '@/components/FormComponent.vue';\n  import StatusSelectorComponent from '@/components/StatusSelectorComponent.vue';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import DeleteConfirmationModal from '@/components/DeleteConfirmationModal.vue';\n  import { toast } from 'vue3-toastify';\n\n  export default {\n    components: {\n      ModalComponent,\n      FormComponent,\n      StatusSelectorComponent,\n      ButtonComponent,\n      DeleteConfirmationModal,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        tourney: null,\n        match: null,\n        scoreTeamA: 0,\n        scoreTeamB: 0,\n        timer: null,\n        timerRunning: false,\n        elapsedTime: 0,\n        totalPausedTime: 0,\n        pausedAt: null,\n        actionInProgress: false, // Verrou pour empêcher le spam des actions\n        isPaused: false,\n        teamAPlayers: [],\n        teamBPlayers: [],\n        gameEvents: [],\n        showEventModal: false,\n        eventType: '',\n        eventFormData: {\n          teamId: null,\n          description: '',\n        },\n        socketError: null,\n        gameStatusOptions: [\n          { value: 'scheduled', label: 'Prévu' },\n          { value: 'in_progress', label: 'En cours' },\n          { value: 'completed', label: 'Terminé' },\n        ],\n        spectatorCount: 0,\n        assistantName: '',\n        showResetConfirmation: false,\n        showEditEventModal: false,\n        editEventFormData: {\n          teamId: null,\n          type: '',\n          description: '',\n        },\n        eventBeingEdited: null,\n      };\n    },\n    computed: {\n      ...mapState('userTourney', {\n        selectedPoolId: (state) => state.selectedPoolId,\n        selectedFieldId: (state) => state.selectedFieldId,\n        selectedGameId: (state) => state.selectedGameId,\n      }),\n\n      /**\n       * Détermine si l'utilisateur actuel peut modifier le match.\n       * @returns {boolean} - Vrai si l'utilisateur peut modifier le match.\n       */\n      canEdit() {\n        const isAdmin = this.$store.state.user?.roleId === 1;\n        const isAssistant = this.$store.getters['userTourney/isAssistant'];\n\n        const isTournamentActive =\n          this.tourney && this.tourney.status === 'active';\n\n        if (isAdmin) return true;\n        if (isAssistant && isTournamentActive) return true;\n        return false;\n      },\n      eventFormFields() {\n        if (!this.match) return [];\n        return [\n          {\n            name: 'teamId',\n            label: 'Équipe',\n            type: 'select',\n            options: [\n              {\n                value: this.match.teamA.id,\n                label: this.match.teamA.teamName,\n              },\n              {\n                value: this.match.teamB.id,\n                label: this.match.teamB.teamName,\n              },\n            ],\n            required: true,\n          },\n          {\n            name: 'description',\n            label: 'Description',\n            type: 'text',\n            required: false,\n          },\n        ];\n      },\n\n      /**\n       * Détermine si l'utilisateur actuel peut voir les détails du match.\n       * @returns {boolean} - Vrai si l'utilisateur peut voir les détails du match.\n       */\n      isAdmin() {\n        return this.$store.state.user.roleId === 1;\n      },\n\n      /**\n       * Détermine si l'utilisateur actuel est autorisé à effectuer des actions sur le match.\n       * @returns {boolean} - Vrai si l'utilisateur est autorisé.\n       */\n      isAuthorized() {\n        const isAssistant = this.$store.getters['userTourney/isAssistant'];\n        const isAdmin = this.$store.state.user?.roleId === 1;\n        return isAssistant || isAdmin;\n      },\n\n      /**\n       * Trie les événements du match par ordre chronologique décroissant.\n       * @returns {Array} - Les événements triés.\n       */\n      sortedGameEvents() {\n        return [...this.gameEvents].sort(\n          (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n        );\n      },\n\n      /**\n       * Formate le temps de match en minutes et secondes.\n       * @returns {string} - Le temps formaté.\n       */\n      formattedTime() {\n        const minutes = Math.floor(this.elapsedTime / 60)\n          .toString()\n          .padStart(2, '0');\n        const seconds = (this.elapsedTime % 60).toString().padStart(2, '0');\n        return `${minutes}:${seconds}`;\n      },\n\n      /**\n       * Résultat de l'équipe A (gagnant, perdant ou match nul).\n       * @returns {string} - Le résultat de l'équipe A.\n       */\n      teamAResult() {\n        if (this.match.status !== 'completed') return null;\n        if (this.scoreTeamA > this.scoreTeamB) return 'winner';\n        if (this.scoreTeamA < this.scoreTeamB) return 'loser';\n        return 'draw';\n      },\n\n      /**\n       * Résultat de l'équipe B (gagnant, perdant ou match nul).\n       * @returns {string} - Le résultat de l'équipe B.\n       */\n      teamBResult() {\n        if (this.match.status !== 'completed') return null;\n        if (this.scoreTeamB > this.scoreTeamA) return 'winner';\n        if (this.scoreTeamB < this.scoreTeamA) return 'loser';\n        return 'draw';\n      },\n\n      /**\n       * Détermine si le match est un match nul.\n       * @returns {boolean} - Vrai si le match est un match nul.\n       */\n      isDraw() {\n        return (\n          this.match.status === 'completed' &&\n          this.scoreTeamA === this.scoreTeamB\n        );\n      },\n    },\n    methods: {\n      /**\n       * Récupère les détails du match depuis l'API et initialise le timer et les sockets.\n       * @returns {Promise<void>}\n       */\n      async fetchMatchDetails() {\n        try {\n          const { tourneyId, gameId } = this.$route.params;\n          const response = await apiService.get(\n            `/tourneys/${tourneyId}/games/${gameId}`\n          );\n          this.match = response.data;\n          this.scoreTeamA = this.match.scoreTeamA || 0;\n          this.scoreTeamB = this.match.scoreTeamB || 0;\n\n          // Récupérer les joueurs des équipes\n          this.teamAPlayers = this.match.teamA.players || [];\n          this.teamBPlayers = this.match.teamB.players || [];\n\n          // Définir le nom de l'assistant\n          this.assistantName = this.match.assistant\n            ? this.match.assistant.name\n            : 'N/A';\n\n          // Initialiser le timer\n          if (this.match.realStartTime) {\n            this.timerRunning = !this.match.isPaused && !this.match.realEndTime;\n            this.totalPausedTime =\n              parseInt(this.match.totalPausedTime, 10) || 0;\n            this.pausedAt = this.match.pausedAt\n              ? new Date(this.match.pausedAt)\n              : null;\n            this.isPaused = this.match.isPaused;\n\n            this.calculateElapsedTime();\n\n            if (this.timerRunning && !this.timer) {\n              this.timer = setInterval(() => {\n                this.calculateElapsedTime();\n              }, 1000);\n            }\n          }\n\n          // Récupérer les événements du match\n          await this.fetchGameEvents();\n\n          // Configurer les sockets\n          this.setupSocket();\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du match :',\n            error\n          );\n        }\n      },\n\n      /**\n       * Récupère les statuts du tournoi depuis l'API.\n       * @returns {Promise<void>}\n       */\n      async fetchTourneyStatus() {\n        try {\n          const response = await apiService.get(`/tourneys/${this.tourneyId}`);\n          this.tourney = response.data; // On stocke le tournoi complet, y compris son statut\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération du statut du tournoi :',\n            error\n          );\n        }\n      },\n\n      /**\n       * Récupère les événements du match depuis l'API.\n       * @returns {Promise<void>}\n       */\n      async fetchGameEvents() {\n        try {\n          const { tourneyId, gameId } = this.$route.params;\n          const eventsResponse = await apiService.get(\n            `/tourneys/${tourneyId}/games/${gameId}/events`\n          );\n          this.gameEvents = eventsResponse.data;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des événements du match :',\n            error\n          );\n        }\n      },\n\n      /**\n       * Calcule le temps écoulé du match en tenant compte des pauses.\n       */\n      calculateElapsedTime() {\n        if (!this.match.realStartTime) {\n          this.elapsedTime = 0;\n          return;\n        }\n\n        let currentTime = new Date();\n        if (this.isPaused && this.pausedAt) {\n          currentTime = new Date(this.pausedAt);\n        } else if (this.match.realEndTime) {\n          currentTime = new Date(this.match.realEndTime);\n        }\n\n        const realStart = new Date(this.match.realStartTime);\n        const totalPaused = parseInt(this.totalPausedTime, 10) || 0;\n        const elapsedMilliseconds = currentTime - realStart - totalPaused;\n\n        if (isNaN(elapsedMilliseconds) || elapsedMilliseconds < 0) {\n          this.elapsedTime = 0;\n          console.error('Calcul du temps écoulé a échoué ou est négatif.');\n        } else {\n          this.elapsedTime = Math.floor(elapsedMilliseconds / 1000);\n        }\n      },\n\n      /**\n       * Démarre ou reprend le timer du match.\n       */\n      startTimer() {\n        if (!this.isAuthorized || this.actionInProgress) return;\n        this.actionInProgress = true;\n        const socket = getSocket();\n\n        if (!this.match.realStartTime) {\n          // Démarrage initial du match\n          socket.emit('startMatchTimer', {\n            matchId: this.match.id,\n          });\n        } else if (this.isPaused) {\n          // Reprise après une pause\n          socket.emit('startMatchTimer', {\n            matchId: this.match.id,\n          });\n        }\n      },\n\n      /**\n       * Met en pause le timer du match.\n       */\n      pauseTimer() {\n        if (!this.isAuthorized || this.actionInProgress) return;\n        if (!this.timerRunning) return;\n        this.actionInProgress = true;\n\n        const socket = getSocket();\n        socket.emit('pauseMatchTimer', {\n          matchId: this.match.id,\n        });\n      },\n\n      /**\n       * Réinitialise le timer du match.\n       */\n      resetTimer() {\n        if (!this.isAuthorized) return;\n\n        const socket = getSocket();\n        socket.emit('resetMatchTimer', {\n          matchId: this.match.id,\n        });\n      },\n\n      /**\n       * Arrête le timer du match (par exemple, lorsque le match est terminé).\n       */\n      stopTimer() {\n        if (!this.timer) return;\n\n        const socket = getSocket();\n        socket.emit('stopMatchTimer', {\n          matchId: this.match.id,\n        });\n      },\n\n      /**\n       * Met à jour le statut du match après validation.\n       * @param {string} newStatus - Le nouveau statut souhaité.\n       */\n      async updateMatchStatus(newStatus) {\n        // Vérifier si le changement de statut est autorisé\n        if (\n          (newStatus === 'completed' || newStatus === 'scheduled') &&\n          this.timerRunning\n        ) {\n          toast.error(\n            'Le match est en cours, veuillez le terminer avant de changer le statut.'\n          );\n          return;\n        }\n\n        const socket = getSocket();\n\n        try {\n          // Émettre l'événement de mise à jour du statut au backend\n          socket.emit('updateMatchStatus', {\n            matchId: this.match.id,\n            status: newStatus,\n          });\n\n          // Si le statut est 'completed' ou 'scheduled', arrêter le timer localement\n          if (newStatus === 'completed' || newStatus === 'scheduled') {\n            this.stopTimer();\n          }\n        } catch (error) {\n          console.error(\n            'Erreur lors de la mise à jour du statut du match :',\n            error\n          );\n          toast.error('Erreur lors de la mise à jour du statut du match.');\n        }\n      },\n\n      /**\n       * Go back to planning avec préservation des filtres\n       */\n      goBack() {\n        this.$router.push({\n          path: `/tourneys/${this.tourneyId}/planning`,\n          query: {\n            pool: this.selectedPoolId,\n            field: this.selectedFieldId,\n            game: this.selectedGameId,\n          },\n        });\n      },\n\n      /**\n       * Configure les écouteurs Socket.IO pour les mises à jour en temps réel.\n       */\n      setupSocket() {\n        const socket = getSocket();\n        if (!socket) {\n          console.warn(\n            \"Socket non disponible. L'utilisateur est peut-être déconnecté.\"\n          );\n          return;\n        }\n\n        // Rejoindre la salle du match via Socket.IO\n        socket.emit('joinGame', this.match.id);\n\n        // Écouter les mises à jour du score\n        socket.on('scoreUpdated', (data) => {\n          this.scoreTeamA = data.scoreTeamA;\n          this.scoreTeamB = data.scoreTeamB;\n        });\n\n        // Écouter les événements du match\n        socket.on('gameEvent', (event) => {\n          this.gameEvents.push(event);\n        });\n\n        // Écouter les mises à jour des événements du match\n        socket.on('gameEventUpdated', (updatedEvent) => {\n          const index = this.gameEvents.findIndex(\n            (e) => e.id === updatedEvent.id\n          );\n          if (index !== -1) {\n            // Utilisez splice pour remplacer l'élément de manière réactive\n            this.gameEvents.splice(index, 1, updatedEvent);\n          }\n        });\n\n        // Écouter le démarrage ou la reprise du timer\n        socket.on('startMatchTimer', (data) => {\n          if (data.matchId === this.match.id) {\n            if (!this.match.realStartTime) {\n              this.match.realStartTime = new Date(data.realStartTime);\n            }\n            this.totalPausedTime = parseInt(data.totalPausedTime, 10) || 0;\n            this.pausedAt = data.pausedAt ? new Date(data.pausedAt) : null;\n            this.isPaused = data.isPaused;\n            this.timerRunning = !data.isPaused && !this.match.realEndTime;\n\n            // Mettre à jour le nom de l'assistant\n            this.assistantName = data.assistant ? data.assistant : 'N/A';\n            if (this.timerRunning && !this.timer) {\n              this.timer = setInterval(() => {\n                this.calculateElapsedTime();\n              }, 1000);\n            }\n\n            // Désactiver le verrouillage\n            this.actionInProgress = false;\n          }\n        });\n\n        // Écouter la mise en pause du timer\n        socket.on('pauseMatchTimer', (data) => {\n          if (data.matchId === this.match.id) {\n            clearInterval(this.timer);\n            this.timer = null;\n            this.pausedAt = data.pausedAt ? new Date(data.pausedAt) : null;\n            this.isPaused = data.isPaused;\n            this.timerRunning = false;\n            this.calculateElapsedTime();\n\n            // Mettre à jour le nom de l'assistant\n            this.assistantName = data.assistant ? data.assistant : 'N/A';\n\n            // Désactiver le verrouillage\n            this.actionInProgress = false;\n          }\n        });\n\n        // Écouter l'arrêt du timer\n        socket.on('stopMatchTimer', (data) => {\n          if (data.matchId === this.match.id) {\n            clearInterval(this.timer);\n            this.timer = null;\n            this.match.realEndTime = new Date(data.realEndTime);\n            this.isPaused = false;\n            this.timerRunning = false;\n            this.calculateElapsedTime();\n\n            // Mettre à jour le nom de l'assistant\n            this.assistantName = data.assistant ? data.assistant : 'N/A';\n          }\n        });\n\n        // Écouter la réinitialisation du timer\n        socket.on('resetMatchTimer', (data) => {\n          if (data.matchId === this.match.id) {\n            this.timerRunning = false;\n            this.elapsedTime = 0;\n            this.match.realStartTime = null;\n            this.match.realEndTime = null;\n            this.totalPausedTime = 0;\n            this.pausedAt = null;\n            this.isPaused = false;\n            this.assistantName = data.assistant ? data.assistant : 'N/A';\n\n            if (this.timer) {\n              clearInterval(this.timer);\n              this.timer = null;\n            }\n          }\n        });\n\n        // Écouter les mises à jour du statut du match\n        socket.on('matchStatusUpdated', (data) => {\n          if (data.matchId === this.match.id) {\n            this.match.status = data.status;\n            this.isPaused = data.isPaused;\n            this.pausedAt = data.pausedAt ? new Date(data.pausedAt) : null;\n            this.totalPausedTime = data.totalPausedTime || 0;\n\n            // Si le statut est 'completed', arrêter le timer\n            if (data.status === 'completed') {\n              this.stopTimer();\n            }\n            // Si le statut est 'in_progress', ajuster le timer en fonction de isPaused\n            else if (data.status === 'in_progress') {\n              this.timerRunning = !this.isPaused && !this.match.realEndTime;\n              if (this.timerRunning && !this.timer) {\n                this.timer = setInterval(() => {\n                  this.calculateElapsedTime();\n                }, 1000);\n              }\n            }\n          }\n        });\n\n        // Écouter la suppression d'un événement\n        socket.on('deleteGameEvent', (data) => {\n          this.gameEvents = this.gameEvents.filter(\n            (event) => event.id !== data.eventId\n          );\n        });\n\n        // Écouter le spectatorCount\n        socket.on('spectatorCount', (data) => {\n          this.spectatorCount = data.count;\n        });\n\n        // Ecouter la suppression de tous les events du match\n        socket.on('deleteAllGameEvents', (data) => {\n          if (data.gameId === this.match.id) {\n            this.gameEvents = [];\n            this.scoreTeamA = 0;\n            this.scoreTeamB = 0;\n          }\n        });\n      },\n\n      /**\n       * Soumet un nouvel événement de match.\n       */\n      submitEvent() {\n        const { tourneyId } = this.$route.params;\n        const event = {\n          type: this.eventType,\n          teamId: this.eventFormData.teamId,\n          description: this.eventFormData.description,\n          matchTime: this.elapsedTime,\n        };\n        // Envoyer l'événement via Socket.IO\n        const socket = getSocket();\n        socket.emit('gameEvent', {\n          tourneyId: parseInt(tourneyId),\n          gameId: this.match.id,\n          event,\n        });\n        // Fermer la modal\n        this.closeEventModal();\n      },\n\n      /**\n       * Obtient le titre pour la modal d'événement en fonction du type d'événement.\n       * @param {string} eventType - Le type d'événement.\n       * @returns {string} - Le titre de la modal.\n       */\n      getEventTitle(eventType) {\n        switch (eventType) {\n          case 'goal':\n            return 'Ajouter un But';\n          case 'foul':\n            return 'Ajouter une Faute';\n          case 'yellow_card':\n            return 'Ajouter un Carton Jaune';\n          case 'red_card':\n            return 'Ajouter un Carton Rouge';\n          default:\n            return 'Ajouter un Événement';\n        }\n      },\n      /**\n       * Ouvre la modal pour ajouter un nouvel événement.\n       * @param {string} eventType - Le type d'événement à ajouter.\n       */\n      openEventModal(eventType) {\n        this.eventType = eventType;\n        this.eventFormData = {\n          teamId: this.match.teamA.id,\n          description: '',\n        };\n        this.showEventModal = true;\n      },\n\n      /**\n       * Ferme la modal d'ajout d'événement.\n       */\n      closeEventModal() {\n        this.eventFormData = {\n          teamId: null,\n          description: '',\n        };\n        this.showEventModal = false;\n      },\n\n      /**\n       * Met à jour les scores et notifie les autres clients.\n       */\n      updateScores() {\n        if (!this.isAuthorized) return;\n        const { tourneyId } = this.$route.params;\n        const socket = getSocket();\n\n        // Convertir les valeurs en nombre, 0 par défaut\n        let scoreA = parseInt(this.scoreTeamA, 10);\n        let scoreB = parseInt(this.scoreTeamB, 10);\n\n        if (isNaN(scoreA)) scoreA = 0;\n        if (isNaN(scoreB)) scoreB = 0;\n\n        this.scoreTeamA = scoreA;\n        this.scoreTeamB = scoreB;\n\n        socket.emit('updateScore', {\n          tourneyId: parseInt(tourneyId),\n          gameId: this.match.id,\n          scoreTeamA: this.scoreTeamA,\n          scoreTeamB: this.scoreTeamB,\n        });\n      },\n\n      /**\n       * Supprime un événement de match.\n       * @param {number} eventId - L'ID de l'événement à supprimer.\n       */\n      async deleteEvent(eventId) {\n        try {\n          const { tourneyId, gameId } = this.$route.params;\n          // Envoyer la requête pour supprimer l'événement\n          await apiService.delete(\n            `/tourneys/${tourneyId}/games/${gameId}/events/${eventId}`\n          );\n          // Supprimer l'événement localement\n          this.gameEvents = this.gameEvents.filter(\n            (event) => event.id !== eventId\n          );\n          // Informer les autres clients via Socket.IO\n          const socket = getSocket();\n          socket.emit('deleteGameEvent', {\n            tourneyId: parseInt(tourneyId),\n            gameId: this.match.id,\n            eventId,\n          });\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la suppression de l'événement :\",\n            error\n          );\n        }\n      },\n\n      /**\n       * Obtient la classe CSS pour positionner l'événement dans la timeline.\n       * @param {Object} event - L'objet événement.\n       * @returns {string} - La classe CSS.\n       */\n      getEventPositionClass(event) {\n        if (event.teamId === this.match.teamA.id) {\n          return 'mr-auto text-right pr-10';\n        } else if (event.teamId === this.match.teamB.id) {\n          return 'ml-auto text-left pl-10';\n        } else {\n          return 'mx-auto text-center';\n        }\n      },\n\n      /**\n       * Obtient l'icône de l'événement en fonction de son type.\n       * @param {string} eventType - Le type d'événement.\n       * @returns {Array} - L'icône FontAwesome.\n       */\n      getEventIcon(eventType) {\n        switch (eventType) {\n          case 'goal':\n            return ['fas', 'futbol'];\n          case 'foul':\n            return ['fas', 'exclamation-circle'];\n          case 'yellow_card':\n            return ['fas', 'square'];\n          case 'red_card':\n            return ['fas', 'flag'];\n          default:\n            return ['fas', 'question-circle'];\n        }\n      },\n\n      /**\n       * Obtient la description de l'événement pour l'affichage.\n       * @param {Object} event - L'objet événement.\n       * @returns {string} - La description de l'événement.\n       */\n      getEventDescription(event) {\n        let teamName = 'Inconnu';\n        if (event.teamId === this.match.teamA.id) {\n          teamName = this.match.teamA.teamName;\n        } else if (event.teamId === this.match.teamB.id) {\n          teamName = this.match.teamB.teamName;\n        }\n        switch (event.type) {\n          case 'goal':\n            return `${teamName} - Point marqué`;\n          case 'foul':\n            return `${teamName} - Faute commise`;\n          case 'yellow_card':\n            return `${teamName} - Carton Jaune`;\n          case 'red_card':\n            return `${teamName} - Carton Rouge`;\n          default:\n            return `${teamName} - Événement`;\n        }\n      },\n\n      /**\n       * Formate un timestamp en HH:MM:SS.\n       * @param {string|number} timestamp - Le timestamp à formater.\n       * @returns {string} - L'heure formatée.\n       */\n      formatEventTime(timestamp) {\n        const date = new Date(timestamp);\n        const hours = date.getHours().toString().padStart(2, '0');\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n        const seconds = date.getSeconds().toString().padStart(2, '0');\n        return `${hours}:${minutes}:${seconds}`;\n      },\n\n      /**\n       * Formate le temps du match en HH:MM.\n       * @param {string|number} timestamp - Le timestamp à formater.\n       * @returns {string} - L'heure formatée.\n       */\n      formatTime(timestamp) {\n        if (!timestamp) return 'N/A';\n        const date = new Date(timestamp);\n        const hours = date.getHours().toString().padStart(2, '0');\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n        return `${hours}:${minutes}`;\n      },\n\n      /**\n       * Formate le temps écoulé en MM:SS.\n       * @param {number} seconds - Le temps écoulé en secondes.\n       * @returns {string} - Le temps écoulé formaté.\n       */\n      formatElapsedTime(seconds) {\n        const minutes = Math.floor(seconds / 60).toString();\n        const secs = (seconds % 60).toString().padStart(2, '0');\n        if (minutes === '0') {\n          return `${secs}''`;\n        }\n        return `${minutes}'${secs}''`;\n      },\n\n      /**\n       * Obtient le libellé du statut du match.\n       * @param {string} status - Le code du statut.\n       * @returns {string} - Le libellé du statut.\n       */\n      getMatchStatusLabel(status) {\n        switch (status) {\n          case 'scheduled':\n            return 'Prévu';\n          case 'in_progress':\n            return 'En cours';\n          case 'completed':\n            return 'Terminé';\n          default:\n            return 'Inconnu';\n        }\n      },\n\n      /**\n       * Gère le changement de statut du match.\n       * @param {string} newStatus - Le nouveau statut.\n       */\n      onMatchStatusChange(newStatus) {\n        this.updateMatchStatus(newStatus);\n      },\n      /**\n       * Ouvre la modale de confirmation de réinitialisation.\n       */\n      openResetConfirmation() {\n        this.showResetConfirmation = true;\n      },\n\n      /**\n       * Ferme la modale de confirmation de réinitialisation.\n       */\n      closeResetConfirmation() {\n        this.showResetConfirmation = false;\n      },\n\n      /**\n       * Gère la confirmation de la réinitialisation.\n       * Réinitialise les scores et les événements du match.\n       */\n      handleResetConfirm() {\n        this.showResetConfirmation = false;\n        this.resetMatch();\n      },\n\n      /**\n       * Ouvre la modale d'édition d'événement.\n       * @param event\n       */\n      openEditEventModal(event) {\n        this.eventBeingEdited = event;\n        this.editEventFormData = {\n          teamId: event.teamId || this.match.teamA.id,\n          type: event.type || 'goal',\n          description: event.description || '',\n        };\n        this.showEditEventModal = true;\n      },\n\n      /**\n       * Ferme la modale d'édition d'événement.\n       * Réinitialise les données du formulaire.\n       */\n      closeEditEventModal() {\n        this.eventBeingEdited = null;\n        this.editEventFormData = {\n          teamId: null,\n          type: '',\n          description: '',\n        };\n        this.showEditEventModal = false;\n      },\n\n      /**\n       * Soumet les modifications apportées à un événement.\n       * Met à jour l'événement via l'API.\n       * @returns {Promise<void>}\n       */\n      async submitEditEvent() {\n        if (!this.eventBeingEdited) return;\n        try {\n          const { tourneyId, gameId } = this.$route.params;\n          await apiService.put(\n            `/tourneys/${tourneyId}/games/${gameId}/events/${this.eventBeingEdited.id}`,\n            {\n              teamId: this.editEventFormData.teamId,\n              type: this.editEventFormData.type,\n              description: this.editEventFormData.description,\n            }\n          );\n\n          // Mettre à jour l'événement localement\n          const index = this.gameEvents.findIndex(\n            (e) => e.id === this.eventBeingEdited.id\n          );\n          if (index !== -1) {\n            this.gameEvents[index].teamId = this.editEventFormData.teamId;\n            this.gameEvents[index].type = this.editEventFormData.type;\n            this.gameEvents[index].description =\n              this.editEventFormData.description;\n          }\n\n          this.closeEditEventModal();\n          toast.success('Événement mis à jour avec succès');\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la mise à jour de l'événement :\",\n            error\n          );\n          toast.error(\"Erreur lors de la mise à jour de l'événement.\");\n        }\n      },\n\n      /**\n       * Réinitialise les scores et les événements du match.\n       */\n      async resetMatch() {\n        if (!this.isAuthorized) return;\n\n        const socket = getSocket();\n\n        try {\n          // Réinitialiser les scores via Socket.IO\n          socket.emit('resetMatchTimer', {\n            matchId: this.match.id,\n          });\n\n          // Supprimer tous les événements du match via API\n          await this.deleteAllEvents();\n        } catch (error) {\n          console.error('Erreur lors de la réinitialisation du match :', error);\n          toast.error('Erreur lors de la réinitialisation du match.');\n        }\n      },\n\n      /**\n       * Supprime tous les événements du match via l'API.\n       */\n      async deleteAllEvents() {\n        try {\n          const { tourneyId, gameId } = this.$route.params;\n\n          // Récupérer tous les événements du match\n          const eventsResponse = await apiService.get(\n            `/tourneys/${tourneyId}/games/${gameId}/events`\n          );\n          const events = eventsResponse.data;\n\n          // Supprimer chaque événement\n          const deletePromises = events.map((event) =>\n            apiService.delete(\n              `/tourneys/${tourneyId}/games/${gameId}/events/${event.id}`\n            )\n          );\n\n          await Promise.all(deletePromises);\n\n          // Informer les autres clients via Socket.IO\n          const socket = getSocket();\n          socket.emit('deleteAllGameEvents', {\n            tourneyId: parseInt(tourneyId),\n            gameId: this.match.id,\n          });\n\n          // Mettre à jour localement\n          this.gameEvents = [];\n\n          toast.success('Le match a été réinitialisé avec succès !');\n        } catch (error) {\n          console.error('Erreur lors de la réinitialisation du match :', error);\n          toast.error('Erreur lors de la réinitialisation du match.');\n        }\n      },\n    },\n    beforeUnmount() {\n      const socket = getSocket();\n      if (socket) {\n        socket.emit('leaveGame', this.match.id);\n        socket.off('scoreUpdated');\n        socket.off('gameEvent');\n        socket.off('startMatchTimer');\n        socket.off('pauseMatchTimer');\n        socket.off('resetMatchTimer');\n        socket.off('stopMatchTimer');\n        socket.off('deleteGameEvent');\n        socket.off('matchStatusUpdated');\n        socket.off('deleteAllGameEvents');\n      }\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    },\n    async mounted() {\n      await this.fetchTourneyStatus();\n      await this.fetchMatchDetails();\n    },\n  };\n</script>\n\n<style scoped>\n  .timeline {\n    position: relative;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .timeline::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 50%;\n    width: 2px;\n    background-color: #6c6c6c;\n    transform: translateX(-50%);\n  }\n\n  .mr-auto.text-right.pr-10::after {\n    right: -20px;\n    border-left-color: #edf2f7; /* Couleur du box */\n  }\n\n  .ml-auto.text-left.pl-10::after {\n    left: -20px;\n    border-right-color: #edf2f7; /* Couleur du box */\n  }\n\n  .mx-auto.text-center::after {\n    left: -10px;\n    border-left-color: transparent;\n    border-right-color: transparent;\n  }\n\n  li {\n    display: flex;\n    justify-content: center;\n  }\n</style>\n","import { render } from \"./TourneyGameDetails.vue?vue&type=template&id=099db311&scoped=true\"\nimport script from \"./TourneyGameDetails.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyGameDetails.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyGameDetails.vue?vue&type=style&index=0&id=099db311&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-099db311\"]])\n\nexport default __exports__","<template>\n  <SubMenuComponent :tourneyId=\"tourneyId\" />\n  <div\n    class=\"p-4 bg-light-background dark:bg-dark-background transition-colors duration-300\"\n  >\n    <div class=\"flex justify-between items-center mb-4\">\n      <TitleComponent title=\"Classement du Tournoi\" />\n      <ButtonComponent @click=\"toggleView\" class=\"py-2 px-4\">\n        {{ compactView ? 'Vue détaillée' : 'Vue compacte' }}\n      </ButtonComponent>\n    </div>\n    <div v-if=\"loading\" class=\"text-center py-4\">Chargement...</div>\n    <div v-else>\n      <div\n        :class=\"[\n          'grid gap-4',\n          compactView\n            ? 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'\n            : 'grid-cols-1',\n        ]\"\n      >\n        <div\n          v-for=\"pool in results\"\n          :key=\"pool.poolId\"\n          class=\"p-4 rounded shadow bg-light-card dark:bg-dark-card\"\n        >\n          <h2\n            class=\"text-xl font-semibold mb-4 text-center text-light-title dark:text-dark-title\"\n          >\n            {{ pool.poolName }}\n          </h2>\n          <div>\n            <table class=\"w-full text-left border-collapse\">\n              <thead>\n                <tr\n                  class=\"border-b bg-light-details.background dark:bg-dark-details.background\"\n                >\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    Pos\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    Team\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    Pts\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    J\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    G\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    N\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    P\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    BM\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    BE\n                  </th>\n                  <th class=\"py-2 px-2 text-light-text dark:text-dark-text\">\n                    Diff\n                  </th>\n                </tr>\n              </thead>\n              <transition-group\n                tag=\"tbody\"\n                name=\"list\"\n                class=\"transition-wrapper\"\n              >\n                <tr\n                  v-for=\"(team, index) in sortedStandings(pool.standings)\"\n                  :key=\"team.teamId\"\n                  :class=\"[\n                    'border-b hover:bg-light-details.hover dark:hover:bg-dark-details.hover',\n                    compactView ? 'text-sm' : 'text-base',\n                  ]\"\n                >\n                  <td class=\"py-2 px-2 text-center\">{{ index + 1 }}</td>\n                  <td class=\"py-2 px-2 font-semibold\">{{ team.teamName }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.points }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.played }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.won }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.drawn }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.lost }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.goalsFor }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.goalsAgainst }}</td>\n                  <td class=\"py-2 px-2 text-center\">{{ team.goalDiff }}</td>\n                </tr>\n              </transition-group>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import apiService from '@/services/apiService';\n  import SubMenuComponent from '@/components/user/SubMenuComponent.vue';\n  import TitleComponent from '@/components/TitleComponent.vue';\n  import { getSocket } from '@/services/socketService';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n\n  export default {\n    components: {\n      TitleComponent,\n      SubMenuComponent,\n      ButtonComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        loading: true, // Initial loading state\n        results: [],\n        compactView: false,\n      };\n    },\n    methods: {\n      async fetchScores(showLoading = true) {\n        if (showLoading) {\n          this.loading = true;\n        }\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/scores`\n          );\n          this.results = response.data.results;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des scores :', error);\n        } finally {\n          if (showLoading) {\n            this.loading = false;\n          }\n        }\n      },\n      setupSocket() {\n        const socket = getSocket();\n        if (!socket) {\n          console.warn(\n            \"Socket non disponible. L'utilisateur est peut-être déconnecté.\"\n          );\n          return;\n        }\n\n        socket.emit('joinTourney', this.tourneyId);\n\n        socket.on('tourneyScoresUpdated', () => {\n          // Fetch scores without showing loading indicator\n          this.fetchScores(false);\n        });\n      },\n      sortedStandings(standings) {\n        // Retourner une copie triée pour éviter la mutation directe\n        return [...standings].sort((a, b) => {\n          if (a.points !== b.points) return b.points - a.points;\n          if (a.played !== b.played) return a.played - b.played;\n          return b.goalDiff - a.goalDiff;\n        });\n      },\n      toggleView() {\n        this.compactView = !this.compactView;\n      },\n    },\n    async mounted() {\n      await this.fetchScores(); // Initial fetch with loading=true\n      this.setupSocket();\n    },\n    beforeUnmount() {\n      const socket = getSocket();\n      if (socket) {\n        socket.emit('leaveTourney', this.tourneyId);\n        socket.off('tourneyScoresUpdated');\n      }\n    },\n  };\n  // TODO doc. https://vuejs.org/guide/built-ins/transition-group\n</script>\n\n<style scoped>\n  /* Transition styles for the list */\n  .list-enter-active,\n  .list-leave-active {\n    transition: all 0.5s ease;\n  }\n  .list-enter-from,\n  .list-leave-to {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  .list-move {\n    transition: transform 0.5s;\n  }\n\n  /* Optional: To prevent layout shift during transitions */\n  .transition-wrapper {\n    display: contents;\n  }\n</style>\n","import { render } from \"./TourneyScores.vue?vue&type=template&id=5710e63c&scoped=true\"\nimport script from \"./TourneyScores.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyScores.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyScores.vue?vue&type=style&index=0&id=5710e63c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5710e63c\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- Sous-menu du tournoi -->\n    <SubMenuComponent\n      v-if=\"$route.name !== 'UserTourneyInfos'\"\n      :tourneyId=\"tourneyId\"\n      @selectTab=\"selectTab\"\n    />\n    <!-- Contenu principal avec deux colonnes -->\n    <div class=\"grid grid-cols-1 gap-8 p-8 md:grid-cols-2 md:items-start\">\n      <!-- Détails du tournoi, Équipe Utilisateur, Statistiques -->\n      <div class=\"bg-light-card dark:bg-dark-card rounded-lg shadow-lg p-8\">\n        <!-- Nom du tournoi -->\n        <div class=\"flex items-center justify-between mb-4\">\n          <h2\n            class=\"text-3xl font-bold text-light-subMenu-activeText dark:text-dark-subMenu-activeText\"\n          >\n            {{ tourney.name }}\n          </h2>\n        </div>\n\n        <!-- Lieu et Date -->\n        <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-2\">\n          <strong>Lieu :</strong> {{ tourney.location }}\n        </p>\n        <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-2\">\n          <strong>Date :</strong> {{ formatDate(tourney.dateTourney) }}\n        </p>\n        <p class=\"text-base text-light-form-text dark:text-dark-form-text mb-2\">\n          <strong>Durée d'une partie :</strong> {{ gameDurationText }}\n        </p>\n\n        <!-- Informations sur l'équipe de l'utilisateur -->\n        <div class=\"mt-6\">\n          <h3\n            class=\"text-2xl font-semibold mb-2 text-light-form-text dark:text-dark-form-text\"\n          >\n            Mon Équipe\n          </h3>\n          <p\n            class=\"text-base text-light-form-text dark:text-dark-form-text mb-2\"\n          >\n            <strong>Nom de l'équipe :</strong> {{ userTeam.teamName }}\n          </p>\n          <p\n            class=\"text-base text-light-form-text dark:text-dark-form-text mb-2\"\n          >\n            <strong>Matchs restants :</strong> {{ userTeam.remainingMatches }}\n          </p>\n          <div class=\"mt-2\">\n            <h4\n              class=\"text-xl font-semibold text-light-form-text dark:text-dark-form-text\"\n            >\n              Membres :\n            </h4>\n            <ul class=\"list-disc list-inside mt-2\">\n              <li\n                v-for=\"player in userTeam.players\"\n                :key=\"player.id\"\n                class=\"text-base text-light-form-text dark:text-dark-form-text\"\n              >\n                {{ player.name }}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <!-- Carte OpenStreetMap -->\n      <div\n        class=\"bg-light-card dark:bg-dark-card rounded-lg shadow-lg p-4 sm:h-[50vh] h-[300px] mt-8 md:mt-0 relative\"\n      >\n        <div\n          v-if=\"!coordinatesAreValid\"\n          class=\"text-sm text-red-500 mt-2 text-center z-20\"\n        >\n          Les coordonnées ne sont pas valides, la carte affiche un lieu par\n          défaut (FR).\n        </div>\n        <div class=\"absolute inset-0\">\n          <l-map\n            v-if=\"mapIsReady\"\n            ref=\"map\"\n            :zoom=\"12\"\n            :center=\"[mapLatitude, mapLongitude]\"\n            class=\"h-full w-full\"\n          >\n            <l-tile-layer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              layer-type=\"base\"\n              name=\"OpenStreetMap\"\n            />\n            <l-marker :lat-lng=\"[mapLatitude, mapLongitude]\">\n              <l-popup>{{ tourney.location || 'Fribourg, Suisse' }}</l-popup>\n            </l-marker>\n          </l-map>\n          <!-- Bouton itinéraire -->\n          <div class=\"mt-4 flex justify-end relative z-30\">\n            <ButtonComponent\n              :variant=\"'primary'\"\n              fontAwesomeIcon=\"map-marker-alt\"\n              @click=\"openGoogleMaps\"\n            >\n              Itinéraire\n              <span class=\"hidden sm:inline\"> Avec Google Maps</span>\n            </ButtonComponent>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Liste des Sports -->\n    <div class=\"bg-light-card dark:bg-dark-card rounded-lg shadow-lg p-8 mt-8\">\n      <h3\n        class=\"text-2xl font-semibold mb-2 text-light-form-text dark:text-dark-form-text\"\n      >\n        Sports Joués\n      </h3>\n      <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        <div v-for=\"sport in sports\" :key=\"sport.id\" class=\"flex flex-col\">\n          <div class=\"flex items-center\">\n            <span\n              class=\"w-4 h-4 rounded-full mr-2\"\n              :style=\"{ backgroundColor: sport.color }\"\n            ></span>\n            <span\n              class=\"text-base font-semibold text-light-form-text dark:text-dark-form-text\"\n              >{{ sport.name }}</span\n            >\n          </div>\n          <p\n            v-if=\"sport.rules\"\n            class=\"text-sm text-light-form-text dark:text-dark-form-text mt-1\"\n          >\n            <strong>Règles: </strong>\n            <span v-if=\"isValidURL(sport.rules)\">\n              <a\n                :href=\"sport.rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                class=\"text-blue-500 underline\"\n              >\n                {{ sport.rules }}\n              </a>\n            </span>\n            <span v-else>\n              {{ sport.rules }}\n            </span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import 'leaflet/dist/leaflet.css';\n  import { LMap, LTileLayer, LMarker, LPopup } from '@vue-leaflet/vue-leaflet';\n  import apiService from '@/services/apiService';\n  import ButtonComponent from '@/components/ButtonComponent.vue';\n  import SubMenuComponent from '@/components/user/SubMenuComponent.vue';\n\n  export default {\n    components: {\n      LMap,\n      LTileLayer,\n      LMarker,\n      LPopup,\n      SubMenuComponent,\n      ButtonComponent,\n    },\n    data() {\n      return {\n        tourneyId: this.$route.params.tourneyId,\n        tourney: {},\n        sports: [],\n        userTeam: {\n          teamName: '',\n          players: [],\n          remainingMatches: 0,\n        },\n        gameDuration: null,\n        mapIsReady: false,\n      };\n    },\n    computed: {\n      coordinatesAreValid() {\n        const lat = this.tourney.latitude;\n        const lng = this.tourney.longitude;\n        return (\n          lat !== null &&\n          lng !== null &&\n          !isNaN(lat) &&\n          !isNaN(lng) &&\n          lat >= -90 &&\n          lat <= 90 &&\n          lng >= -180 &&\n          lng <= 180\n        );\n      },\n      mapLatitude() {\n        return this.coordinatesAreValid ? this.tourney.latitude : 46.8065;\n      },\n      mapLongitude() {\n        return this.coordinatesAreValid ? this.tourney.longitude : 7.1619;\n      },\n      googleMapsLink() {\n        if (this.coordinatesAreValid) {\n          const lat = this.tourney.latitude;\n          const lng = this.tourney.longitude;\n          return `https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`;\n        } else {\n          return 'https://www.google.com/maps/dir/?api=1&destination=46.8065,7.1619';\n        }\n      },\n      gameDurationText() {\n        if (this.gameDuration === null || this.gameDuration === undefined) {\n          return 'N/A';\n        }\n        return `${this.gameDuration} minutes`;\n      },\n    },\n    async mounted() {\n      await this.fetchTourneyDetails();\n      this.mapIsReady = true;\n    },\n    methods: {\n      selectTab(tab) {\n        this.activeTab = tab;\n      },\n      async fetchTourneyDetails() {\n        try {\n          const response = await apiService.get(\n            `/tourneys/${this.tourneyId}/details/user-view`\n          );\n          const data = response.data;\n          this.tourney = data.tourney;\n          this.sports = data.sports;\n          this.userTeam = data.userTeam;\n          this.gameDuration = data.gameDuration;\n        } catch (error) {\n          console.error(\n            'Erreur lors de la récupération des détails du tournoi (vue utilisateur) :',\n            error\n          );\n        }\n      },\n      isValidURL(string) {\n        try {\n          new URL(string);\n          return true;\n        } catch (_) {\n          return false;\n        }\n      },\n      formatDate(dateString) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(dateString).toLocaleDateString(undefined, options);\n      },\n      openGoogleMaps() {\n        window.open(this.googleMapsLink, '_blank');\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  .l-map {\n    height: 100%;\n    width: 100%;\n  }\n  .dark .leaflet-container {\n    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%);\n  }\n</style>\n","import { render } from \"./TourneyDetails.vue?vue&type=template&id=dfaf33ea&scoped=true\"\nimport script from \"./TourneyDetails.vue?vue&type=script&lang=js\"\nexport * from \"./TourneyDetails.vue?vue&type=script&lang=js\"\n\nimport \"./TourneyDetails.vue?vue&type=style&index=0&id=dfaf33ea&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dfaf33ea\"]])\n\nexport default __exports__","// src/router/tourneyGuard.js\n\nimport store from '@/store';\nimport { isAdmin } from '@/services/authService';\nimport apiService from '@/services/apiService';\n\nexport async function checkTournamentAccess(to, from, next) {\n  const isOffline = !navigator.onLine;\n  const userRole = store.getters['auth/userRole'];\n  const tourneyId = to.params.tourneyId;\n\n  if (isAdmin(userRole)) {\n    return next(); // Les admins ont accès libre\n  }\n\n  // Si hors ligne\n  if (isOffline) {\n    // Vérifier si on a des données en cache pour ce tournoi\n    const cachedData = localStorage.getItem(`planning-${tourneyId}`);\n    if (cachedData) {\n      // On a des données locales, on autorise la navigation\n      return next();\n    } else {\n      // Pas de données, retour à /tourneys\n      return next('/tourneys');\n    }\n  }\n\n  try {\n    // Vérifie si l'utilisateur est associé au tournoi\n    const response = await apiService.get(\n      `/users/me/tourneys/${tourneyId}/role`\n    );\n    const userRoleInTourney = response.data.tourneyRole;\n    if (userRoleInTourney) {\n      // Stocke le rôle dans le store si nécessaire\n      store.commit('userTourney/SET_TOURNEY_ROLE', userRoleInTourney);\n      return next();\n    } else {\n      // Si l'utilisateur essaie déjà d'accéder à '/tourneys', laisser passer\n      if (to.path === '/tourneys') {\n        return next();\n      }\n      // Sinon, rediriger vers la liste des tournois\n      return next('/tourneys');\n    }\n  } catch (error) {\n    console.error(\n      \"Erreur lors de la vérification de l'accès au tournoi:\",\n      error\n    );\n    // Si l'utilisateur essaie déjà d'accéder à '/tourneys', laisser passer\n    if (to.path === '/tourneys') {\n      return next();\n    }\n    return next('/tourneys'); // Redirection en cas d'erreur\n  }\n}\n\nexport async function checkTourneyRules(to, from, next) {\n  const isOffline = !navigator.onLine;\n  const userRole = store.getters['auth/userRole'];\n  const tourneyId = to.params.tourneyId;\n\n  if (isAdmin(userRole)) {\n    return next(); // Les admins ont toujours accès\n  }\n\n  // Si hors ligne\n  if (isOffline) {\n    // Vérifier si on a des données en cache pour ce tournoi\n    const cachedData = localStorage.getItem(`planning-${tourneyId}`);\n    if (cachedData) {\n      // On a des données locales, on autorise la navigation\n      return next();\n    } else {\n      // Pas de données, retour à /tourneys\n      return next('/tourneys');\n    }\n  }\n\n  try {\n    // Charger les données du tournoi depuis le store\n    const tourney = await store.dispatch(\n      'userTourney/fetchTourneyById',\n      tourneyId\n    );\n\n    if (!tourney) {\n      // Redirection vers la liste des tournois si le tournoi n'existe pas\n      return next('/tourneys');\n    }\n\n    // Conditions pour accéder aux différentes pages\n    const isTourneyActiveOrCompleted = ['active', 'completed'].includes(\n      tourney.status\n    );\n    const isRegistrationActiveOrCompleted = ['active', 'completed'].includes(\n      tourney.registrationStatus\n    );\n\n    // Vérification des permissions en fonction du statut du tournoi\n    if (isTourneyActiveOrCompleted) {\n      return next(); // Accès total si le tournoi est actif ou terminé\n    }\n\n    if (\n      ['draft', 'ready'].includes(tourney.status) &&\n      isRegistrationActiveOrCompleted\n    ) {\n      // Accès restreint si le tournoi est en mode \"draft\" ou \"ready\" mais l'inscription est active ou terminée\n      const restrictedPaths = [\n        `/tourneys/${tourneyId}/join-team`,\n        `/tourneys/${tourneyId}/teams/${to.params.teamId}/details`,\n      ];\n\n      if (restrictedPaths.includes(to.path)) {\n        return next(); // Accès autorisé pour ces pages spécifiques\n      }\n\n      // Redirection vers la liste des tournois au lieu de 'access-denied'\n      return next('/tourneys');\n    }\n\n    // Par défaut, redirection vers la liste des tournois\n    return next('/tourneys');\n  } catch (error) {\n    console.error(\n      'Erreur lors de la vérification des règles du tournoi :',\n      error\n    );\n    return next('/tourneys'); // Redirection en cas d'erreur\n  }\n}\n","// router/userRoutes.js\n\nimport UserDashboard from '@/views/user/UserDashboard.vue';\nimport UserProfile from '@/views/user/UserProfile.vue';\nimport UserTourneys from '@/views/user/UserTourneys.vue';\nimport TourneyJoinTeam from '@/views/user/tourneys/TourneyJoinTeam.vue';\nimport TourneyTeamDetails from '@/views/user/tourneys/TourneyTeamDetails.vue';\nimport TourneyPlanning from '@/views/user/tourneys/TourneyPlanning.vue';\nimport TourneyGameDetails from '@/views/user/tourneys/TourneyGameDetails.vue';\nimport TourneyScores from '@/views/user/tourneys/TourneyScores.vue';\nimport TourneyDetails from '@/views/user/tourneys/TourneyDetails.vue';\n\nimport {\n  checkTournamentAccess,\n  checkTourneyRules,\n} from '@/router/guards/tourneyGuard';\n\nexport default [\n  {\n    path: '/user',\n    name: 'UserDashboard',\n    component: UserDashboard,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n  },\n  {\n    path: '/profile',\n    name: 'UserProfile',\n    component: UserProfile,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n  },\n  {\n    path: '/tourneys',\n    name: 'UserTourneys',\n    component: UserTourneys,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n  },\n  {\n    path: '/tourneys/:tourneyId/join-team',\n    name: 'UserTourneyJoinTeam',\n    component: TourneyJoinTeam,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n    beforeEnter: [checkTournamentAccess, checkTourneyRules],\n  },\n  {\n    path: '/tourneys/:tourneyId/teams/:teamId/details',\n    name: 'UserTourneyTeamDetails',\n    component: TourneyTeamDetails,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n    beforeEnter: [checkTournamentAccess, checkTourneyRules],\n  },\n  {\n    path: '/tourneys/:tourneyId/planning',\n    name: 'UserTourneyPlanning',\n    component: TourneyPlanning,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n    beforeEnter: [checkTournamentAccess, checkTourneyRules],\n  },\n  {\n    path: '/tourneys/:tourneyId/games/:gameId',\n    name: 'UserTourneyGameDetails',\n    component: TourneyGameDetails,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n    beforeEnter: [checkTournamentAccess, checkTourneyRules],\n  },\n  {\n    path: '/tourneys/:tourneyId/scores',\n    name: 'UserTourneyScores',\n    component: TourneyScores,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n    beforeEnter: [checkTournamentAccess, checkTourneyRules],\n  },\n  {\n    path: '/tourneys/:tourneyId/details',\n    name: 'UserTourneyDetails',\n    component: TourneyDetails,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n    beforeEnter: [checkTournamentAccess, checkTourneyRules],\n  },\n\n  {\n    path: '/tourneys/:tourneyId/infos',\n    name: 'UserTourneyInfos',\n    component: TourneyDetails,\n    meta: { requiresAuth: true, permission: 'viewUserPage' },\n    beforeEnter: [checkTournamentAccess],\n  },\n];\n","import { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store';\nimport {\n  refreshToken,\n  hasPermission,\n  isTokenExpired,\n  handleTokenExpiration,\n} from '@/services/authService';\nimport { jwtDecode } from 'jwt-decode';\nimport apiService from '@/services/apiService';\n\n// Importation des fichiers de routes\nimport authRoutes from './authRoutes';\nimport adminRoutes from './adminRoutes';\nimport userRoutes from './userRoutes';\n\n// Définition des routes de l'application\nconst routes = [...authRoutes, ...adminRoutes, ...userRoutes];\n\n// Configuration du routeur Vue\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\n// Gestion des événements avant chaque navigation\nrouter.beforeEach(async (to, from, next) => {\n  const token = localStorage.getItem('token'); // Récupération du token JWT\n  const isAuthenticated = !!token; // Vérifie si l'utilisateur est authentifié\n\n  // Vérifier si l'application est hors ligne\n  const isOffline = !navigator.onLine;\n\n  // Sauvegarder le inviteToken s'il est présent\n  if (to.query.inviteToken) {\n    store.dispatch('saveInviteToken', to.query.inviteToken);\n  }\n\n  // Gestion des routes publiques (sans authentification requise)\n  if (to.meta.requiresAuth === false) {\n    if (isAuthenticated) {\n      const decoded = jwtDecode(token);\n      const userRole = decoded.roleId;\n      if (userRole === 1) {\n        return next('/admin/tourneys');\n      } else {\n        return next('/tourneys');\n      }\n    }\n    return next();\n  }\n\n  // Gestion des pages de connexion et d'inscription\n  if ((to.name === 'Login' || to.name === 'Register') && isAuthenticated) {\n    const decoded = jwtDecode(token);\n    const userRole = decoded.roleId;\n    if (userRole === 1) {\n      return next('/admin/tourneys');\n    } else {\n      return next('/tourneys');\n    }\n  }\n\n  // Gestion des routes protégées\n  if (to.meta.requiresAuth) {\n    // Si l'utilisateur n'est pas authentifié\n    if (!isAuthenticated) {\n      store.dispatch('logout');\n      return next('/login');\n    }\n\n    // Si le token est expiré\n    if (isTokenExpired()) {\n      handleTokenExpiration();\n      return next('/login');\n    }\n\n    // Gestion des pages accessibles hors ligne (/tourneys uniquement)\n    if (isOffline) {\n      if (to.path.startsWith('/tourneys')) {\n        console.warn('Mode hors ligne : accès autorisé pour /tourneys.');\n        return next();\n      } else if (to.path.startsWith('/admin') && isAuthenticated) {\n        console.warn('Mode hors ligne : accès admin possible avec données en cache.');\n        // Laisser passer sans redirection vers login\n        return next();\n      } else {\n        console.warn('Mode hors ligne : non admin ou non authentifié, redirection login.');\n        return next('/login');\n      }\n    }\n\n    // Rafraîchissement du token et gestion des permissions\n    try {\n      const newToken = await refreshToken();\n      localStorage.setItem('token', newToken);\n      apiService.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n\n      // Récupérer l'utilisateur\n      const userResponse = await apiService.get('/users/me');\n      const user = userResponse.data;\n      const decoded = jwtDecode(newToken);\n\n      store.commit('SET_AUTH', {\n        isAuthenticated: true,\n        user,\n        tokenExpiration: decoded.exp,\n      });\n\n      const userRole = user.roleId;\n\n      // Vérification des permissions d'accès à la route\n      if (to.meta.permission && !hasPermission(userRole, to.meta.permission)) {\n        return next('/access-denied');\n      }\n\n      // Gestion des tokens d'invitation\n      const inviteToken = store.state.inviteToken;\n      if (inviteToken) {\n        try {\n          await apiService.post('/tourneys/join', { token: inviteToken });\n          const decodedInvite = jwtDecode(inviteToken);\n          const tourneyId = decodedInvite.tourneyId;\n          store.dispatch('clearInviteToken');\n          return next(`/tourneys/${tourneyId}/join-team`);\n        } catch (err) {\n          console.error('Erreur lors de la jonction au tournoi:', err);\n        }\n        store.dispatch('clearInviteToken');\n        return next();\n      }\n\n      // Récupération des données spécifiques aux tournois\n      const isTournamentRoute =\n        (to.path.startsWith('/tourneys/') ||\n          to.path.startsWith('/admin/tourneys/')) &&\n        to.params.tourneyId;\n\n      if (isTournamentRoute) {\n        try {\n          const tourneyId = to.params.tourneyId;\n          await store.dispatch('tourney/fetchTourneyStatuses', tourneyId);\n        } catch (error) {\n          console.error('Erreur lors de la récupération du tournoi:', error);\n          if (error.response && error.response.status === 404) {\n            return next({ name: 'NotFoundPage' });\n          } else {\n            await store.dispatch('tourney/clearTournamentName');\n          }\n        }\n      } else {\n        store.dispatch('tourney/clearTournamentName');\n      }\n\n      return next();\n    } catch (error) {\n      console.error('Erreur lors du rafraîchissement du token:', error);\n      store.dispatch('logout');\n      return next('/login');\n    }\n  }\n\n  return next();\n});\n\nexport default router;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n    faQuestionCircle,\n    faMapMarkerAlt,\n    faCalendarAlt,\n    faCalendar,\n    faSun,\n    faMoon,\n    faUser,\n    faPowerOff,\n    faSignInAlt,\n    faInfoCircle,\n    faMap,\n    faFutbol,\n    faFilter,\n    faCog,\n    faPeopleGroup,\n    faTrash,\n    faPen,\n    faPenAlt,\n    faUsers,\n    faEye,\n    faPlus,\n    faArrowLeft,\n    faBan,\n    faEnvelope,\n    faTimes,\n    faCheck,\n    faLink,\n    faCopy,\n    faBars,\n    faUsersSlash,\n    faSpinner,\n    faFileExcel,\n    faListOl,\n    faTh,\n    faExclamationCircle,\n    faSquare,\n    faSquareFull,\n    faTrophy,\n    faFlag,\n    faGavel,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport function registerIcons() {\n    library.add(\n        faGavel,\n        faFlag,\n        faTrophy,\n        faSquareFull,\n        faSquare,\n        faExclamationCircle,\n        faTh,\n        faListOl,\n        faFileExcel,\n        faSpinner,\n        faUsersSlash,\n        faBars,\n        faCopy,\n        faLink,\n        faCheck,\n        faPenAlt,\n        faTimes,\n        faEnvelope,\n        faBan,\n        faArrowLeft,\n        faPlus,\n        faEye,\n        faUsers,\n        faPen,\n        faTrash,\n        faPeopleGroup,\n        faCog,\n        faQuestionCircle,\n        faMapMarkerAlt,\n        faCalendar,\n        faCalendarAlt,\n        faSun,\n        faMoon,\n        faUser,\n        faPowerOff,\n        faSignInAlt,\n        faInfoCircle,\n        faMap,\n        faFutbol,\n        faFilter\n    );\n}\n","import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport store from './store'; // Importe Vuex store\nimport router from './router'; // Importer le router\nimport vue3TouchEvents from 'vue3-touch-events';\nimport Vue3Toastify from 'vue3-toastify';\nimport 'vue3-toastify/dist/index.css'; // Importer les styles de vue3-toastify\nimport vSelect from 'vue-select';\nimport 'vue-select/dist/vue-select.css';\nimport './assets/vue-select-custom.css'; // Import des styles personnalisés pour vue-select\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { registerIcons } from './components/icons/fontAwesomeIcons'; // Liste des icônes à enregistrer\nimport './assets/tailwind.css'; // Import Tailwind CSS\nimport 'leaflet/dist/leaflet.css';\n//import './registerServiceWorker';\n\n// Ajouter les icônes supplémentaires\nregisterIcons(); // Enregistrer les icônes dans FontAwesome\n\nconst app = createApp(App);\n\n// Enregistrer le composant FontAwesomeIcon globalement\napp.component('font-awesome-icon', FontAwesomeIcon);\napp.component('v-select', vSelect);\n// Initialise l'état d'authentification dès le chargement de l'application\nstore.dispatch('initializeAuth');\napp.use(vue3TouchEvents);\napp.use(store);\napp.use(router);\napp.use(Vue3Toastify, {\n  autoClose: 2000,\n});\n\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"8\":\"02116c4a\",\"24\":\"16f174f9\",\"71\":\"bfd53214\",\"249\":\"fba376ac\",\"481\":\"12194024\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(457); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","key","_createElementBlock","_hoisted_1","$data","isOnline","_createCommentVNode","_hoisted_2","_createVNode","_component_Menu","_createElementVNode","_normalizeClass","isModalOpen","_component_router_view","_ctx","isAdmin","_hoisted_3","_component_router_link","to","$options","getLinkClass","default","_withCtx","_cache","_createTextVNode","_","isAuthenticated","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","showTournamentName","_hoisted_8","_toDisplayString","tournamentName","tournamentDate","_hoisted_9","formatDate","_hoisted_10","onClick","args","toggleDarkMode","isDarkMode","_createBlock","_component_font_awesome_icon","icon","_hoisted_11","_hoisted_12","userName","logout","_hoisted_13","data","computed","mapState","state","user","roleId","name","currentTournamentName","dateTourney","this","$route","path","startsWith","params","tourneyId","methods","localStorage","removeItem","$store","dispatch","$router","push","date","options","year","month","day","Date","toLocaleDateString","undefined","document","documentElement","classList","add","setItem","remove","isActive","mounted","isDark","getItem","window","matchMedia","matches","__exports__","roles","ADMIN","USER","permissions","API_URL","process","BASE_URL","console","log","apiService","axios","create","baseURL","interceptors","request","use","config","token","headers","namespaced","tourneyType","statuses","status","fieldAssignmentStatus","sportAssignmentStatus","registrationStatus","poolStatus","planningStatus","mutations","SET_TOURNAMENT_NAME","SET_TOURNAMENT_TYPE","SET_TOURNAMENT_DATE","CLEAR_TOURNAMENT_NAME","currentTournamentDate","SET_STATUSES","UPDATE_STATUS","value","RESET_TOURNEY_STATE","actions","fetchTourneyStatuses","commit","response","get","error","updateStatus","put","setTournamentName","clearTournamentName","activeTourney","selectedTourney","tourneyRole","selectedPoolId","selectedFieldId","selectedGameId","SET_ACTIVE_TOURNEY","tourney","SET_SELECTED_TOURNEY","SET_TOURNEY_ROLE","role","SET_SELECTED_POOL","poolId","SET_SELECTED_FIELD","fieldId","SET_SELECTED_GAME","gameId","RESET_FILTERS","fetchTourneyById","tourneyData","fetchActiveTourney","activeTourneyData","fetchTourneyRole","setSelectedPool","setSelectedField","setSelectedGame","resetFilters","getters","isAssistant","getTourneyById","socket","getSocket","io","auth","reconnectionAttempts","reconnectionDelay","on","err","message","reason","warn","createStore","modules","userTourney","tokenExpiration","inviteToken","SET_AUTH","payload","LOGOUT","SET_ALERT_MESSAGE","alertMessage","CLEAR_ALERT_MESSAGE","UPDATE_USER_NAME","newName","SET_INVITE_TOKEN","CLEAR_INVITE_TOKEN","login","email","password","post","expiresIn","defaults","common","userResponse","disconnect","saveInviteToken","clearInviteToken","initializeAuth","decoded","jwtDecode","currentTime","Math","floor","now","exp","hasPermission","userRole","permission","roleKey","Object","entries","find","hasPerm","includes","store","isTokenExpired","handleTokenExpiration","async","refreshToken","Error","newToken","components","Menu","navigator","onLine","mapActions","startTokenExpirationWatcher","tokenWatcher","clearInterval","checkTokenExpiration","setInterval","getCheckInterval","updateOnlineStatus","timeLeft","handleModalOpen","body","handleModalClose","$watch","newVal","addEventListener","beforeUnmount","removeEventListener","render","_component_AuthComponentForm","mode","isSubmitting","onSubmit","handleLogin","title","_withModifiers","handleSubmit","$props","for","$event","formData","type","placeholder","errors","showEmailField","autocomplete","showPasswordFields","showConfirmPasswordField","confirmPassword","_component_ButtonComponent","variant","nativeType","disabled","submitButtonText","_Fragment","variantClasses","fontAwesomeIcon","heroIcon","_resolveDynamicComponent","icons","_renderSlot","$slots","props","String","Boolean","variants","primary","secondary","danger","warning","gray","info","algo","TrashIcon","PencilIcon","PlusIcon","ButtonComponent","emits","validateRegister","validateLogin","validateForgotPassword","validateResetPassword","keys","length","$emit","validateEmail","passwordRegex","test","re","watch","AuthComponentForm","toastSuccess","toastError","toast","replace","code","handleRegister","success","_createStaticVNode","handleForgotPassword","handleResetPassword","redirect","component","AccessDenied","NotFoundPage","LoginPage","meta","requiresAuth","RegisterPage","ForgotPassword","ResetPassword","_component_TitleComponent","_component_FilterComponent","filters","onFilterChange","handleFilterChange","_component_CardAddComponent","onOpenAddElementModal","openAddTourneyModal","_renderList","filteredTourneys","_component_CardEditComponent","location","showDeleteButton","showEditButton","viewTourneyDetails","onDelete","confirmDeleteTourney","onEdit","editTourney","_component_ModalComponent","isVisible","showModal","editingTourneyId","onClose","closeModal","content","_component_FormComponent","modelValue","newTourney","fields","formFields","isEditing","minDate","maxDate","onFormSubmit","handleFormSubmit","onFormCancel","customValidation","validateForm","_component_DeleteConfirmationModal","showDeleteConfirmation","closeDeleteConfirmation","onConfirm","deleteTourney","confirmedDeleteTourneyId","required","dispatchEvent","Event","close","ref","tabindex","onKeydown","_withKeys","$setup","handleConfirm","isHardDelete","hardDeleteMessage","handleCancel","buttons","confirmationText","textButton","style","gridClass","field","label","tooltip","toggleTooltip","visibleTooltip","_component_AutocompleteAddress","isEditable","onInput","validateField","onChange","option","handleFileChange","accept","_normalizeStyle","backgroundColor","isFormValid","inputValue","suggestions","suggestion","index","selectSuggestion","display_name","address","latitude","longitude","query","timeout","handler","deep","event","target","clearTimeout","setTimeout","fetchSuggestions","fetch","encodeURIComponent","json","selected","parseFloat","lat","lon","AutocompleteAddress","Array","Function","columns","Number","set","every","dateValue","fieldName","file","files","maxSize","size","image","stopPropagation","forEach","customErrors","FormComponent","setup","emit","modalContainer","nextTick","focus","openAddElementModal","_component_PlusIcon","cornerCount","src","titleColor","statusText","description","formattedDate","_hoisted_14","getStatusClass","getStatusLabel","_hoisted_15","_hoisted_16","filter","xmlns","fill","viewBox","stroke","d","titleClass","ModalComponent","DeleteConfirmationModal","CardAddComponent","CardEditComponent","FilterComponent","TitleComponent","tourneys","domain","emergencyDetails","isSaving","filterStatus","filterDate","formErrors","statusMatches","dateMatches","fetchTourneys","trimmedName","trim","nameExists","some","toLowerCase","delete","_component_TourneySubMenu","onSelectTab","selectTab","statusSteps","step","progressBarClass","stepIconComponent","stepTextClass","stepStatusText","_component_StatusSelectorComponent","statusKey","statusOptions","val","counts","users","sports","teams","pools","_hoisted_17","_hoisted_18","sport","color","_hoisted_19","_hoisted_20","coordinatesAreValid","_hoisted_21","mapIsReady","_component_l_map","zoom","center","mapLatitude","mapLongitude","_component_l_tile_layer","url","_component_l_marker","_component_l_popup","_hoisted_22","downloadExcel","openGoogleMaps","_hoisted_23","showExample","_hoisted_25","width","height","_hoisted_24","isNavVisible","active","activeTab","tab","shouldShow","selectedStatus","hideWhenNotStarted","onStatusChange","currentStatus","script","cx","cy","r","LMap","LTileLayer","LMarker","LPopup","TourneySubMenu","CompletedIcon","PendingIcon","ActiveIcon","DraftIcon","StatusSelectorComponent","currentStepNumber","fetchTourneyDetails","updateStatusSteps","dateString","googleMapsLink","open","toastId","autoClose","responseType","blob","URL","createObjectURL","a","createElement","href","download","appendChild","click","revokeObjectURL","update","lng","isNaN","allStepsCompleted","openAddSportModal","getImageUrl","editSport","confirmDeleteSport","editingSportId","newSport","onFileSelected","handleFileUpload","deleteSport","confirmedDeleteSportId","rule","scoreSystem","selectedFile","imagePath","baseUrl","getFileName","filePath","parts","split","fetchSports","maxSizeInMB","maxSizeInBytes","alert","FormData","append","File","_component_ListUsersTable","enableAddUser","enableEditUser","enableAssignTourney","enableRemoveUserFromTourney","tournaments","showTourney","showAssignTourney","enableAssignTeam","showEmailButton","showBackButton","showPhone","showFilters","editUserFunction","editUser","addUserFunction","addUser","onAssignTourney","handleAssignTourney","onRemoveUserFromTourney","handleRemoveUserFromTourney","onDeleteUser","handleDeleteUser","onUserUpdated","fetchData","isLoading","showEditUserModal","closeEditUserModal","newUser","userFormFields","handleUserFormSubmit","validateUserForm","showAddUserModal","closeAddUserModal","handleAddUserSubmit","handleAddUserClick","sendEmailToAll","goBack","backButtonText","_component_v_select","selectedTournamentFilter","tournamentOptions","reduce","appendToBody","clearable","searchQuery","filterNoTournament","hasAvailableTeams","displayedUsers","_component_SoftButtonComponent","iconClass","handleEditClick","usersTourneys","confirmRemoveFromTourney","selectedTourneyIds","availableTourneys","assignTourney","phone","availableTeams","teamSetup","allowAssignToOtherTeams","localSelectedTeamIds","onTeamSelectionChange","teamOptions","team","styles","assignTeam","teamId","enableRemoveUser","confirmDelete","showDeleteModal","deleteModalTitle","deleteModalMessage","deleteUser","closeDeleteModal","showRemoveFromTourneyModal","removeUserFromTourney","closeRemoveFromTourneyModal","iconColor","fontSize","iconSize","handleClick","ariaLabel","SoftButtonComponent","selectedTeamIds","userIdToDelete","isAutoFilled","initialSelectedTeamIds","userIdToRemoveFromTourney","tourneyIdToRemove","editingUser","currentTeamIds","map","isCurrentTeam","hasSpace","getTeamCapacity","capacity","teamName","filteredUsers","filtered","ut","playerPerTeam","maxTeamNumber","userId","newSelectedTeamIds","u","currentUserId","emails","mailtoLink","join","navigateToEdit","validateAssignments","assignments","updateSelectedTeamId","loadAvailableTourneys","allTourneys","userTourneys","immediate","newTournaments","ListUsersTable","created","usersResponse","tourneysResponse","Promise","all","resetNewUser","_component_ProfilePageComponent","pageTitle","editingField","toggleEdit","userData","saveField","cancelEdit","canEditEmail","passwordData","oldPassword","newPassword","updatePassword","roleName","_hoisted_27","_hoisted_28","_hoisted_29","selectedTourneyId","t","userTournaments","_hoisted_26","_hoisted_30","confirmDeleteUser","originalUserData","fetchUserData","userNotFound","fetchAvailableTourneys","fetchRoles","userTourneyIds","updateField","selectedRole","ProfilePageComponent","openAddMultipleFieldsModal","openDeleteAllFieldsModal","fieldAssignmentStatusOptions","openAddFieldModal","confirmDeleteField","editField","editingFieldId","newField","showMultipleFieldsModal","closeMultipleFieldsModal","multipleFieldsData","multipleFieldsFormFields","numberOfFields","handleMultipleFieldsSubmit","showDeleteAllFieldsModal","closeDeleteAllFieldsModal","handleDeleteAllFieldsSubmit","deleteField","confirmedDeleteFieldId","deleteAllConfirmation","isDeleting","min","shouldShowStatusSelector","newStatus","fetchFieldDetails","_component_ErrorMessageComponent","currentPage","totalPages","page","showAllTerrains","sportAssignmentStatusOptions","_component_FullCalendar","calendarOptions","errorClass","FullCalendar","ErrorMessageComponent","externalDraggableInstance","terrainsPerPage","ceil","paginatedFields","start","end","slice","events","sportsFields","sportsField","toString","startTime","endTime","resourceId","extendedProps","sportId","plugins","timeGridPlugin","interactionPlugin","resourceTimeGridPlugin","schedulerLicenseKey","initialView","timeZone","initialDate","editable","droppable","headerToolbar","defaultTimedEventDuration","slotMinTime","slotMaxTime","slotLabelFormat","hour","minute","hour12","allDaySlot","resources","eventReceive","handleEventReceive","eventDrop","handleEventDrop","eventResize","handleEventResize","eventContent","renderEventContent","$refs","fullCalendar","calendarApi","getApi","refetchResources","destroy","fetchTourneySportsFields","tourneyResponse","initializeExternalEvents","containerEl","getElementById","Draggable","itemSelector","eventData","eventEl","innerText","duration","getAttribute","arg","container","headerContainer","deleteIcon","pressTimer","innerHTML","float","cursor","padding","e","deleteEvent","formatDisplayTime","timeRange","domNodes","revert","newFieldId","getResources","startDate","endDate","setHours","getHours","setEnd","formatTime","setProp","setExtendedProp","eventId","hours","padStart","minutes","getMinutes","seconds","getSeconds","adjustTerrainsPerPage","screenWidth","innerWidth","isRegistrationActive","openTeamSetupModal","teamSetupConfigured","playerTeams","openGenerateConfirmationModal","invalidTeams","openDeleteInvalidTeamsModal","openModalResetTeams","openInviteTokenModal","showInviteTokenModal","closeInviteTokenModal","showValidOnly","showAddTokenForm","inviteTokenForm","inviteTokenFields","handleGenerateInviteToken","filteredSortedInviteTokens","isValid","expiresAt","copyToClipboard","readonly","invalidateToken","validateToken","footer","registrationStatusOptions","fieldCount","allDisplayedTeams","unassignedUsers","navigateToUnassignedUsers","allUsers","openAddTeamModal","getStatusColor","confirmDeleteTeam","editTeam","openTeamDetails","_hoisted_31","showTeamSetupModal","closeTeamSetupModal","_hoisted_32","localTeamSetup","teamSetupFields","handleTeamSetupSubmit","customTeamSetupValidation","editingTeamId","newTeam","_component_ConfirmationModal","showGenerateConfirmationModal","onCancel","closeGenerateConfirmationModal","confirmGenerateTeams","deleteTeam","confirmedDeleteTeamId","showModalResetTeams","closeModalResetTeams","handleResetAllTeamsSubmit","showDeleteInvalidTeamsModal","closeDeleteInvalidTeamsModal","deleteInvalidTeams","ConfirmationModal","inviteLink","showUnassignedModal","inviteTokens","expiresInDays","assistantTeams","minPlayerPerTeam","filteredPlayerTeams","filteredTeams","minPlayers","tokens","sort","b","aValid","bValid","generateTeams","resetTeams","fetchInviteTokens","tokenId","patch","clipboard","writeText","toggleValidOnly","maxPlayers","isUpdate","onAssignTeam","handleAssignTeam","onGoBack","goBackToTeams","handleValidateAssignments","autoFillGroups","cancelAutoFill","assistantTeam","assignedUsers","assignUsersToTeam","numberOfUsersNeeded","usersToAssign","splice","needed","emptyTeams","maxFillableEmptyTeams","teamsToFill","distributionPossible","teamUsers","isAssigned","handleRemoveUser","teamNotFull","selectedUnassignedUserId","assignUnassignedUserToTeam","isTeamValid","hasUnassignedUsers","parseInt","isArray","openPoolSetupModal","openGeneratePoolsModal","confirmDeleteAllPools","poolStatusOptions","showWarnings","warningMessages","dismissWarnings","recommendation","unassignedTeams","navigateToAssignTeams","canAddMorePools","generateMissingPools","openConfirmationModal","allPoolsComplete","teamsAssignedToPools","confirmRemoveAllTeamsFromPools","openAddPoolModal","filteredPools","pool","maxTeamPerPool","tourneySetup","defaultMaxTeamPerPool","getPoolStatusColor","confirmDeletePool","editPool","openPoolDetails","schedulesCount","editingPoolId","newPool","deletePool","confirmedDeletePoolId","showPoolSetupModal","closePoolSetupModal","localPoolSetup","poolSetupFields","handlePoolSetupSubmit","customPoolSetupValidation","showConfirmationModal","populatePoolsWithUnassignedTeams","closeConfirmationModal","showRemoveTeamsConfirmation","closeRemoveTeamsConfirmation","removeAllTeamsFromPools","showGeneratePoolsModal","_component_StrategyPoolGeneratorComponent","availableFields","onPoolsGenerated","handlePoolsGenerated","closeGeneratePoolsModal","showDeleteAllConfirmation","closeDeleteAllConfirmation","deleteAllPools","handleClose","currentStrategyComponent","generatePools","teamsWithoutPool","poolCount","teamsWithoutPoolCount","errorMessage","CustomRoundRobinStrategy","result","strategyComponent","StrategyPoolGeneratorComponent","minTeamPerPool","desiredPoolCount","maxNumberOfPools","defaultMinTeamPerPool","maxTeams","invalidPools","minTeams","Infinity","recommendedPools","isPoolCountExceedingFields","shouldShowFieldWarning","isScheduled","messages","fetchTourneyPoolsDetails","schedules","fetchAvailableFields","newPools","assignedTeams","stage","goBackToPools","removeSelectedTeams","selectAllAssigned","toggleSelectAllAssigned","selectedAssignedTeams","toggleRemoveTeamSelection","removeTeam","assignSelectedTeams","selectAllUnassigned","toggleSelectAllUnassigned","selectedUnassignedTeams","toggleTeamSelection","maxTeamsPerPool","fetchPoolDetails","teamsResponse","allTeams","totalTeamsAfterAssignment","MAX_SAFE_INTEGER","teamIds","hasAvailablePools","selectedPoolIds","poolOptions","handleAssignPool","poolsResponse","poolIndex","findIndex","navigateToTeam","warnings","showWarningsModal","closeWarningsModal","warningClass","openScheduleConfigModal","openGeneratePlanningModal","validatePlanning","hasPoolSchedules","confirmClearPlanning","planningStatusOptions","searchable","useUnifiedColors","_component_PlanningViewSelector","_component_StrategyPlanningGeneratorComponent","showGeneratePlanningConfirmation","planningTourney","scheduleConfig","planningType","closeGeneratePlanningConfirmation","onPlanningGenerated","handlePlanningGenerated","showClearPlanningConfirmation","closeClearPlanningConfirmation","clearPlanning","showScheduleConfigModal","scheduleFormFields","saveScheduleConfig","showEditModal","eventFormData","eventFormFields","saveEventEdits","localRandomMode","randomMode","isGenerating","generatePlanning","CustomRoundRobinPoolPlanningStrategy","CustomRoundRobinGamePlanningStrategy","currentView","navigateTo","getCurrentView","view","StrategyPlanningGeneratorComponent","vSelect","PlanningViewSelector","poolSchedules","isSmallScreen","breakpoints","large","medium","poolDuration","gameDuration","transitionPoolTime","transitionGameTime","introStart","introEnd","lunchStart","lunchEnd","outroStart","outroEnd","eventToEdit","colorMap","generateUniqueColor","hue","sortedFields","aNum","bNum","localeCompare","schedule","textColor","display","adjustedSlotMinTime","adjustedSlotMaxTime","customButtons","prevPage","text","nextPage","resourceAreaHeaderContent","subtractOneHour","addOneHour","refetchEvents","fetchPlanningDetails","scheduleTourney","refreshCalendarEvents","dataset","poolName","sportName","editIcon","openEditModal","TYPE","SUCCESS","ERROR","isSchedule","durationMinutes","getTime","poolSchedule","ps","loadScheduleConfig","validationResults","validation","hasErrors","newWarnings","high","mid","low","successMessage","timeStr","checkWarnings","timeStringToNumber","startTimeNum","endTimeNum","timePairs","startField","endField","pair","pairStartNum","pairEndNum","hasGames","games","createModalTitle","showCreateModal","createFormData","createFormFields","saveNewEvent","poolScheduleId","teamAId","teamBId","pages","filteredFields","total","maxPerPage","numPages","base","remainder","i","perPage","fieldIds","Set","selectedPool","has","editTeamOptions","game","fieldOptions","sportOptions","teamATeamName","teamA","teamBTeamName","teamB","eventStartEditable","eventDurationEditable","selectable","select","handleSelect","eventOverlap","slotDuration","slotLabelInterval","createTeamOptions","autoCalculateEndTime","findPoolByScheduleId","s","sportPoolInfo","selectionInfo","findPoolScheduleForSelection","formatDateTime","calculateEndTime","resource","selectionStart","selectionEnd","scheduleStart","scheduleEnd","scheduleId","getFullYear","getMonth","getDate","newGame","f","findPoolScheduleAtPosition","newStart","newEnd","currentGame","poolScheduleAtNewPosition","g","findPoolScheduleForEvent","eventStart","eventEnd","validateEventDrop","formType","checkScreenSize","AdminDashboard","TourneysList","TourneyDetails","SportsManagement","AdminUsersList","AdminUserProfile","TourneyFieldsManagement","TourneySportsFields","TourneyTeams","TourneyTeamUsers","TourneyUnassignedUsers","TourneyPools","TourneyPoolDetails","TourneyUnassignedTeams","TourneyPlanningPools","TourneyPlanningGames","getTitleColor","goToInfo","fetchUserTourneys","JSON","stringify","storedTourneys","parse","isCardClickable","confirmQuitTournament","isRegistrationClosed","isRegistrationCompleted","userTeam","confirmLeaveTeam","leaveTeam","selectedFilter","joinTeam","showQuitConfirmation","closeQuitConfirmation","leaveTournament","otherTeams","teamNameMatch","userNameMatch","fetchRegistrationStatus","teamSize","fetchTeamDetails","go","_component_SubMenuComponent","userRoleInTourney","userPool","gameOptions","toggleDisplayMode","displayMode","toggleShowAllTerrains","userNextGames","_component_CollapsibleBox","formatDateTimeDisplay","teamANumber","teamBNumber","paginatedFilteredFields","calendarKey","isOpen","extractTeamNumber","fallback","SubMenuComponent","CollapsibleBox","assistantMessage","_selectedPoolId","_selectedFieldId","_selectedGameId","filteredGames","fieldIdsWithEvents","addBreakTimes","addGamesToEvents","addPoolSchedulesToEvents","addPoolTransitions","eventClick","handleEventClick","updateQueryParams","loadFiltersFromQuery","fetchAllData","fetchUserTeamAndPool","fetchUserNextGames","saveAllToLocalStorage","loadAllFromLocalStorage","savedData","completeAllMatches","gameStart","gameEnd","isCurrentGame","roundDownTime","roundUpTime","max","dateTime","breaks","breakTime","resourceIds","transitionDuration","transitionStartDateTime","transitionEndDateTime","socketError","match","assistantName","spectatorCount","canEdit","gameStatusOptions","onMatchStatusChange","getMatchStatusLabel","isPaused","teamAResult","teamAPlayers","player","scoreTeamA","updateScores","number","scoreTeamB","formattedTime","timerRunning","pauseTimer","startTimer","openResetConfirmation","teamBResult","teamBPlayers","isDraw","_hoisted_33","_hoisted_34","openEventModal","_hoisted_35","_hoisted_36","_hoisted_37","sortedGameEvents","_hoisted_38","getEventIcon","getEventPositionClass","_hoisted_39","getEventDescription","_hoisted_40","_hoisted_41","formatEventTime","createdAt","matchTime","_hoisted_42","formatElapsedTime","_hoisted_43","isAuthorized","_hoisted_44","openEditEventModal","_hoisted_45","showResetConfirmation","closeResetConfirmation","handleResetConfirm","showEventModal","getEventTitle","eventType","closeEventModal","submitEvent","showEditEventModal","closeEditEventModal","submitEditEvent","editEventFormData","_hoisted_46","_hoisted_47","_hoisted_48","timer","elapsedTime","totalPausedTime","pausedAt","actionInProgress","gameEvents","eventBeingEdited","isTournamentActive","fetchMatchDetails","players","assistant","realStartTime","realEndTime","calculateElapsedTime","fetchGameEvents","setupSocket","fetchTourneyStatus","eventsResponse","realStart","totalPaused","elapsedMilliseconds","matchId","resetTimer","stopTimer","updateMatchStatus","updatedEvent","count","scoreA","scoreB","timestamp","secs","resetMatch","deleteAllEvents","deletePromises","off","toggleView","compactView","loading","results","_TransitionGroup","tag","sortedStandings","standings","points","played","won","drawn","lost","goalsFor","goalsAgainst","goalDiff","fetchScores","showLoading","gameDurationText","remainingMatches","rules","isValidURL","rel","string","checkTournamentAccess","from","next","isOffline","cachedData","checkTourneyRules","isTourneyActiveOrCompleted","isRegistrationActiveOrCompleted","restrictedPaths","UserDashboard","UserProfile","UserTourneys","TourneyJoinTeam","beforeEnter","TourneyTeamDetails","TourneyPlanning","TourneyGameDetails","TourneyScores","routes","authRoutes","adminRoutes","userRoutes","router","createRouter","history","createWebHistory","beforeEach","decodedInvite","isTournamentRoute","registerIcons","library","faGavel","faFlag","faTrophy","faSquareFull","faSquare","faExclamationCircle","faTh","faListOl","faFileExcel","faSpinner","faUsersSlash","faBars","faCopy","faLink","faCheck","faPenAlt","faTimes","faEnvelope","faBan","faArrowLeft","faPlus","faEye","faUsers","faPen","faTrash","faPeopleGroup","faCog","faQuestionCircle","faMapMarkerAlt","faCalendar","faCalendarAlt","faSun","faMoon","faUser","faPowerOff","faSignInAlt","faInfoCircle","faMap","faFutbol","faFilter","app","createApp","App","FontAwesomeIcon","vue3TouchEvents","Vue3Toastify","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","j","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","__esModule","then","ns","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","needAttach","scripts","getElementsByTagName","charset","nc","setAttribute","onScriptComplete","prev","onerror","onload","doneFns","parentNode","removeChild","bind","head","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}