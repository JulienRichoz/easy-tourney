name: Test Backend with Postman

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Cloner le code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Node.js pour le backend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Stop default MySQL
        run: sudo service mysql stop

      # Étape 3 : Installer les dépendances backend
      - name: Install Backend Dependencies
        run: npm ci
        working-directory: ./server

      # Étape 4 : Configurer MySQL
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '8.0'
          mysql database: mytestdb
          mysql root password: root

      # Étape 5 : Créer le fichier .env
      - name: Create .env File
        run: |
          echo "DB_USERNAME=root" >> ./server/.env
          echo "DB_PASSWORD=root" >> ./server/.env
          echo "DB_NAME=mytestdb" >> ./server/.env
          echo "DB_HOST=127.0.0.1" >> ./server/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ./server/.env
          echo "PORT=3000" >> ./server/.env

      # Étape 6 : Attendre que MySQL démarre complètement
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysql -h127.0.0.1 -P3306 -uroot -proot -e "SELECT 1;" > /dev/null 2>&1; then
              echo "MySQL is ready!"
              exit 0
            fi
            echo "MySQL not ready yet..."
            sleep 2
          done
          echo "MySQL did not become ready in time."
          exit 1

      - name: Test MySQL Connection
        run: mysql -h127.0.0.1 -P3306 -uroot -proot -e "SHOW DATABASES;"

      # Étape 7 : Effectuer les migrations et seed
      - name: Run migrations
        run: npx sequelize-cli db:migrate
        working-directory: ./server

      - name: Run seeds
        run: npx sequelize-cli db:seed:all
        working-directory: ./server

      # Étape 8 : Démarrer le serveur backend
      - name: Start Backend Server
        run: npm run serve &
        working-directory: ./server

      # Attendre que le serveur démarre
      - name: Wait for server to start
        run: sleep 10

      # Étape 9 : Installer Newman pour exécuter les tests Postman
      - name: Install Newman
        run: npm install -g newman

      # Étape 10 : Exécuter les tests Postman
      - name: Run Postman Tests
        run: |
          newman run ./server/tests/collection.json \
          --environment ./server/tests/environment.json
